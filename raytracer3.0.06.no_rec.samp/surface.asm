; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

include listing.inc

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG6168	DB	'o:::o', 00H
	ORG $+2
$SG6169	DB	'o:::o', 00H
	ORG $+2
$SG6170	DB	'ooooo', 00H
	ORG $+2
$SG6171	DB	'o:::o', 00H
	ORG $+2
$SG6172	DB	':ooo:', 00H
	ORG $+2
$SG6173	DB	'oooo:', 00H
	ORG $+2
$SG6174	DB	'o:::o', 00H
	ORG $+2
$SG6175	DB	'oooo:', 00H
	ORG $+2
$SG6176	DB	'o:::o', 00H
	ORG $+2
$SG6177	DB	'oooo:', 00H
	ORG $+2
$SG6178	DB	':oooo', 00H
	ORG $+2
$SG6179	DB	'o::::', 00H
	ORG $+2
$SG6180	DB	'o::::', 00H
	ORG $+2
$SG6181	DB	'o::::', 00H
	ORG $+2
$SG6182	DB	':oooo', 00H
	ORG $+2
$SG6183	DB	'oooo:', 00H
	ORG $+2
$SG6184	DB	'o:::o', 00H
	ORG $+2
$SG6185	DB	'o:::o', 00H
	ORG $+2
$SG6186	DB	'o:::o', 00H
	ORG $+2
$SG6187	DB	'oooo:', 00H
	ORG $+2
$SG6188	DB	'ooooo', 00H
	ORG $+2
$SG6189	DB	'o::::', 00H
	ORG $+2
$SG6190	DB	'oooo:', 00H
	ORG $+2
$SG6191	DB	'o::::', 00H
	ORG $+2
$SG6192	DB	'ooooo', 00H
	ORG $+2
$SG6193	DB	'o::::', 00H
	ORG $+2
$SG6194	DB	'o::::', 00H
	ORG $+2
$SG6195	DB	'ooo::', 00H
	ORG $+2
$SG6196	DB	'o::::', 00H
	ORG $+2
$SG6197	DB	'ooooo', 00H
	ORG $+2
$SG6198	DB	':ooo:', 00H
	ORG $+2
$SG6199	DB	'o:::o', 00H
	ORG $+2
$SG6200	DB	'o:ooo', 00H
	ORG $+2
$SG6201	DB	'o::::', 00H
	ORG $+2
$SG6202	DB	':oooo', 00H
	ORG $+2
$SG6203	DB	'o:::o', 00H
	ORG $+2
$SG6204	DB	'o:::o', 00H
	ORG $+2
$SG6205	DB	'ooooo', 00H
	ORG $+2
$SG6206	DB	'o:::o', 00H
	ORG $+2
$SG6207	DB	'o:::o', 00H
	ORG $+2
$SG6208	DB	'::o::', 00H
	ORG $+2
$SG6209	DB	'::o::', 00H
	ORG $+2
$SG6210	DB	'::o::', 00H
	ORG $+2
$SG6211	DB	'::o::', 00H
	ORG $+2
$SG6212	DB	'::o::', 00H
	ORG $+2
$SG6213	DB	'ooo::', 00H
	ORG $+2
$SG6214	DB	':::o:', 00H
	ORG $+2
$SG6215	DB	':::o:', 00H
	ORG $+2
$SG6216	DB	':::o:', 00H
	ORG $+2
$SG6217	DB	':::o:', 00H
	ORG $+2
$SG6218	DB	'o::o:', 00H
	ORG $+2
$SG6219	DB	'o:o::', 00H
	ORG $+2
$SG6220	DB	'oo:::', 00H
	ORG $+2
$SG6221	DB	'o:o::', 00H
	ORG $+2
$SG6222	DB	'o::o:', 00H
	ORG $+2
$SG6223	DB	'ooooo', 00H
	ORG $+2
$SG6224	DB	'o::::', 00H
	ORG $+2
$SG6225	DB	'o::::', 00H
	ORG $+2
$SG6226	DB	'o::::', 00H
	ORG $+2
$SG6227	DB	'o::::', 00H
	ORG $+2
$SG6228	DB	'o:::o', 00H
	ORG $+2
$SG6229	DB	'o:::o', 00H
	ORG $+2
$SG6230	DB	'o:o:o', 00H
	ORG $+2
$SG6231	DB	'o:o:o', 00H
	ORG $+2
$SG6232	DB	'oo:o:', 00H
	ORG $+2
$SG6233	DB	'o:::o', 00H
	ORG $+2
$SG6234	DB	'o::oo', 00H
	ORG $+2
$SG6235	DB	'o:o:o', 00H
	ORG $+2
$SG6236	DB	'oo::o', 00H
	ORG $+2
$SG6237	DB	'o:::o', 00H
	ORG $+2
$SG6238	DB	':ooo:', 00H
	ORG $+2
$SG6239	DB	'o:::o', 00H
	ORG $+2
$SG6240	DB	'o:::o', 00H
	ORG $+2
$SG6241	DB	'o:::o', 00H
	ORG $+2
$SG6242	DB	':ooo:', 00H
	ORG $+2
$SG6243	DB	'o::::', 00H
	ORG $+2
$SG6244	DB	'o::::', 00H
	ORG $+2
$SG6245	DB	'oooo:', 00H
	ORG $+2
$SG6246	DB	'o:::o', 00H
	ORG $+2
$SG6247	DB	'oooo:', 00H
	ORG $+2
$SG6248	DB	':oooo', 00H
	ORG $+2
$SG6249	DB	'o::oo', 00H
	ORG $+2
$SG6250	DB	'o:::o', 00H
	ORG $+2
$SG6251	DB	'o:::o', 00H
	ORG $+2
$SG6252	DB	':ooo:', 00H
	ORG $+2
$SG6253	DB	'o::o:', 00H
	ORG $+2
$SG6254	DB	'o:o::', 00H
	ORG $+2
$SG6255	DB	'oooo:', 00H
	ORG $+2
$SG6256	DB	'o:::o', 00H
	ORG $+2
$SG6257	DB	'oooo:', 00H
	ORG $+2
$SG6258	DB	'oooo:', 00H
	ORG $+2
$SG6259	DB	'::::o', 00H
	ORG $+2
$SG6260	DB	':ooo:', 00H
	ORG $+2
$SG6261	DB	'o::::', 00H
	ORG $+2
$SG6262	DB	':oooo', 00H
	ORG $+2
$SG6263	DB	'::o::', 00H
	ORG $+2
$SG6264	DB	'::o::', 00H
	ORG $+2
$SG6265	DB	'::o::', 00H
	ORG $+2
$SG6266	DB	'::o::', 00H
	ORG $+2
$SG6267	DB	'ooooo', 00H
	ORG $+2
$SG6268	DB	':oooo', 00H
	ORG $+2
$SG6269	DB	'o:::o', 00H
	ORG $+2
$SG6270	DB	'o:::o', 00H
	ORG $+2
$SG6271	DB	'o:::o', 00H
	ORG $+2
$SG6272	DB	'o:::o', 00H
	ORG $+2
$SG6273	DB	'::o::', 00H
	ORG $+2
$SG6274	DB	':o:o:', 00H
	ORG $+2
$SG6275	DB	':o:o:', 00H
	ORG $+2
$SG6276	DB	'o:::o', 00H
	ORG $+2
$SG6277	DB	'o:::o', 00H
	ORG $+2
$SG6278	DB	':o:o:', 00H
	ORG $+2
$SG6279	DB	'o:o:o', 00H
	ORG $+2
$SG6280	DB	'o:o:o', 00H
	ORG $+2
$SG6281	DB	'o:::o', 00H
	ORG $+2
$SG6282	DB	'o:::o', 00H
	ORG $+2
$SG6283	DB	'o:::o', 00H
	ORG $+2
$SG6284	DB	':o:o:', 00H
	ORG $+2
$SG6285	DB	'::o::', 00H
	ORG $+2
$SG6286	DB	':o:o:', 00H
	ORG $+2
$SG6287	DB	'o:::o', 00H
	ORG $+2
$SG6288	DB	':ooo:', 00H
	ORG $+2
$SG6289	DB	'::::o', 00H
	ORG $+2
$SG6290	DB	':oooo', 00H
	ORG $+2
$SG6291	DB	'o:::o', 00H
	ORG $+2
$SG6292	DB	'o:::o', 00H
	ORG $+2
$SG6293	DB	'ooooo', 00H
	ORG $+2
$SG6294	DB	':o:::', 00H
	ORG $+2
$SG6295	DB	'::o::', 00H
	ORG $+2
$SG6296	DB	':::o:', 00H
	ORG $+2
$SG6297	DB	'ooooo', 00H
	ORG $+2
$SG6298	DB	':ooo:', 00H
	ORG $+2
$SG6299	DB	'oo::o', 00H
	ORG $+2
$SG6300	DB	'o:o:o', 00H
	ORG $+2
$SG6301	DB	'o::oo', 00H
	ORG $+2
$SG6302	DB	':ooo:', 00H
	ORG $+2
$SG6303	DB	':ooo:', 00H
	ORG $+2
$SG6304	DB	'::o::', 00H
	ORG $+2
$SG6305	DB	'::o::', 00H
	ORG $+2
$SG6306	DB	':oo::', 00H
	ORG $+2
$SG6307	DB	'::o::', 00H
	ORG $+2
$SG6308	DB	'ooooo', 00H
	ORG $+2
$SG6309	DB	':o:::', 00H
	ORG $+2
$SG6310	DB	'::oo:', 00H
	ORG $+2
$SG6311	DB	'o:::o', 00H
	ORG $+2
$SG6312	DB	':ooo:', 00H
	ORG $+2
$SG6313	DB	'oooo:', 00H
	ORG $+2
$SG6314	DB	'::::o', 00H
	ORG $+2
$SG6315	DB	'::oo:', 00H
	ORG $+2
$SG6316	DB	'::::o', 00H
	ORG $+2
$SG6317	DB	'oooo:', 00H
	ORG $+2
$SG6318	DB	':::o:', 00H
	ORG $+2
$SG6319	DB	':::o:', 00H
	ORG $+2
$SG6320	DB	'ooooo', 00H
	ORG $+2
$SG6321	DB	'o::o:', 00H
	ORG $+2
$SG6322	DB	'o::::', 00H
	ORG $+2
$SG6323	DB	'oooo:', 00H
	ORG $+2
$SG6324	DB	'::::o', 00H
	ORG $+2
$SG6325	DB	'oooo:', 00H
	ORG $+2
$SG6326	DB	'o::::', 00H
	ORG $+2
$SG6327	DB	'ooooo', 00H
	ORG $+2
$SG6328	DB	':ooo:', 00H
	ORG $+2
$SG6329	DB	'o:::o', 00H
	ORG $+2
$SG6330	DB	'oooo:', 00H
	ORG $+2
$SG6331	DB	'o::::', 00H
	ORG $+2
$SG6332	DB	':oooo', 00H
	ORG $+2
$SG6333	DB	'::o::', 00H
	ORG $+2
$SG6334	DB	'::o::', 00H
	ORG $+2
$SG6335	DB	':::o:', 00H
	ORG $+2
$SG6336	DB	'::::o', 00H
	ORG $+2
$SG6337	DB	'ooooo', 00H
	ORG $+2
$SG6338	DB	':ooo:', 00H
	ORG $+2
$SG6339	DB	'o:::o', 00H
	ORG $+2
$SG6340	DB	':ooo:', 00H
	ORG $+2
$SG6341	DB	'o:::o', 00H
	ORG $+2
$SG6342	DB	':ooo:', 00H
	ORG $+2
$SG6343	DB	':ooo:', 00H
	ORG $+2
$SG6344	DB	'::::o', 00H
	ORG $+2
$SG6345	DB	':oooo', 00H
	ORG $+2
$SG6346	DB	'o:::o', 00H
	ORG $+2
$SG6347	DB	':ooo:', 00H
	ORG $+2
$SG6348	DB	'::o::', 00H
	ORG $+2
$SG6349	DB	':::::', 00H
	ORG $+2
$SG6350	DB	'::o::', 00H
	ORG $+2
$SG6351	DB	'::o::', 00H
	ORG $+2
$SG6352	DB	'::o::', 00H
	ORG $+2
$SG6353	DB	'::o::', 00H
	ORG $+2
$SG6354	DB	':::::', 00H
	ORG $+2
$SG6355	DB	':::o:', 00H
	ORG $+2
$SG6356	DB	'::::o', 00H
	ORG $+2
$SG6357	DB	':ooo:', 00H
	ORG $+2
$SG6358	DB	'::o::', 00H
	ORG $+2
$SG6359	DB	':::::', 00H
	ORG $+2
$SG6360	DB	'::o::', 00H
	ORG $+2
$SG6361	DB	':::::', 00H
	ORG $+2
$SG6362	DB	':::::', 00H
	ORG $+2
$SG6363	DB	':ooo:', 00H
	ORG $+2
$SG6364	DB	':::::', 00H
	ORG $+2
$SG6365	DB	':ooo:', 00H
	ORG $+2
$SG6366	DB	':::::', 00H
	ORG $+2
$SG6367	DB	':::::', 00H
	ORG $+2
$SG6368	DB	'::o::', 00H
	ORG $+2
$SG6369	DB	':::o:', 00H
	ORG $+2
$SG6370	DB	':::::', 00H
	ORG $+2
$SG6371	DB	':::::', 00H
	ORG $+2
$SG6372	DB	':::::', 00H
	ORG $+2
$SG6373	DB	'::o::', 00H
	ORG $+2
$SG6374	DB	':::::', 00H
	ORG $+2
$SG6375	DB	':::::', 00H
	ORG $+2
$SG6376	DB	':::::', 00H
	ORG $+2
$SG6377	DB	':::::', 00H
	ORG $+2
$SG6378	DB	':::::', 00H
	ORG $+2
$SG6379	DB	':::::', 00H
	ORG $+2
$SG6380	DB	':ooo:', 00H
	ORG $+2
$SG6381	DB	':::::', 00H
	ORG $+2
$SG6382	DB	':::::', 00H
	ORG $+2
$SG6383	DB	':::o:', 00H
	ORG $+2
$SG6384	DB	'::o::', 00H
	ORG $+2
$SG6385	DB	'::o::', 00H
	ORG $+2
$SG6386	DB	'::o::', 00H
	ORG $+2
$SG6387	DB	':::o:', 00H
	ORG $+2
$SG6388	DB	'::o::', 00H
	ORG $+2
$SG6389	DB	':::o:', 00H
	ORG $+2
$SG6390	DB	':::o:', 00H
	ORG $+2
$SG6391	DB	':::o:', 00H
	ORG $+2
$SG6392	DB	'::o::', 00H
	ORG $+2
$SG6393	DB	':::::', 00H
	ORG $+2
$SG6394	DB	':::::', 00H
	ORG $+2
$SG6395	DB	':::::', 00H
	ORG $+2
$SG6396	DB	':::::', 00H
	ORG $+2
$SG6397	DB	':::::', 00H
	ORG $+2
$SG6398	DB	'ooooo', 00H
	ORG $+2
$SG6399	DB	'ooooo', 00H
	ORG $+2
$SG6400	DB	'ooooo', 00H
	ORG $+2
$SG6401	DB	'ooooo', 00H
	ORG $+2
$SG6402	DB	'ooooo', 00H
	ORG $+2
$SG6403	DB	':::::', 00H
	ORG $+2
$SG6404	DB	':::::', 00H
	ORG $+2
$SG6405	DB	':::::', 00H
	ORG $+2
$SG6406	DB	'::o::', 00H
	ORG $+2
$SG6407	DB	'::o::', 00H
	ORG $+2
$SG6408	DB	'o:o:o', 00H
	ORG $+2
$SG6409	DB	':ooo:', 00H
	ORG $+2
$SG6410	DB	'ooooo', 00H
	ORG $+2
$SG6411	DB	':ooo:', 00H
	ORG $+2
$SG6412	DB	'o:o:o', 00H
	ORG $+2
$SG6413	DB	'o::::', 00H
	ORG $+2
$SG6414	DB	':o:::', 00H
	ORG $+2
$SG6415	DB	'::o::', 00H
	ORG $+2
$SG6416	DB	':::o:', 00H
	ORG $+2
$SG6417	DB	'::::o', 00H
	ORG $+2
$SG6419	DB	'abcdefghijklmnopqrstuvwxyz0123456789!?:=,.-() #''*/', 00H
CONST	ENDS
PUBLIC	?Surface_Create@@YAPEAUSurface@@HH@Z		; Surface_Create
EXTRN	malloc:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	_RTC_InitBase:PROC
pdata	SEGMENT
$pdata$?Surface_Create@@YAPEAUSurface@@HH@Z DD imagerel $LN3
	DD	imagerel $LN3+113
	DD	imagerel $unwind$?Surface_Create@@YAPEAUSurface@@HH@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?Surface_Create@@YAPEAUSurface@@HH@Z DD 022001H
	DD	07009520dH
xdata	ENDS
;	COMDAT rtc$TMZ
; File c:\users\mark\documents\devmaster_raytracing\raytracer3.0.06.no_rec.samp\surface.cpp
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
s$ = 32
a_Width$ = 64
a_Height$ = 72
?Surface_Create@@YAPEAUSurface@@HH@Z PROC		; Surface_Create
; Line 13
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+64]
; Line 14
	mov	ecx, 2320				; 00000910H
	call	malloc
	mov	QWORD PTR s$[rsp], rax
; Line 15
	mov	rax, QWORD PTR s$[rsp]
	mov	ecx, DWORD PTR a_Width$[rsp]
	mov	DWORD PTR [rax+8], ecx
; Line 16
	mov	rax, QWORD PTR s$[rsp]
	mov	ecx, DWORD PTR a_Height$[rsp]
	mov	DWORD PTR [rax+12], ecx
; Line 17
	mov	eax, DWORD PTR a_Width$[rsp]
	imul	eax, DWORD PTR a_Height$[rsp]
	cdqe
	shl	rax, 2
	mov	rcx, rax
	call	malloc
	mov	rcx, QWORD PTR s$[rsp]
	mov	QWORD PTR [rcx], rax
; Line 18
	mov	rax, QWORD PTR s$[rsp]
; Line 19
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?Surface_Create@@YAPEAUSurface@@HH@Z ENDP		; Surface_Create
_TEXT	ENDS
PUBLIC	?Surface_Clear@@YAXPEAUSurface@@I@Z		; Surface_Clear
pdata	SEGMENT
$pdata$?Surface_Clear@@YAXPEAUSurface@@I@Z DD imagerel $LN6
	DD	imagerel $LN6+111
	DD	imagerel $unwind$?Surface_Clear@@YAXPEAUSurface@@I@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?Surface_Clear@@YAXPEAUSurface@@I@Z DD 022201H
	DD	0700a120eH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
_TEXT	SEGMENT
z$ = 0
i$6124 = 4
s$ = 32
a_Color$ = 40
?Surface_Clear@@YAXPEAUSurface@@I@Z PROC		; Surface_Clear
; Line 22
$LN6:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16
	mov	rdi, rsp
	mov	ecx, 4
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+32]
; Line 23
	mov	rax, QWORD PTR s$[rsp]
	mov	rcx, QWORD PTR s$[rsp]
	mov	eax, DWORD PTR [rax+8]
	imul	eax, DWORD PTR [rcx+12]
	mov	DWORD PTR z$[rsp], eax
; Line 24
	mov	DWORD PTR i$6124[rsp], 0
	jmp	SHORT $LN3@Surface_Cl
$LN2@Surface_Cl:
	mov	eax, DWORD PTR i$6124[rsp]
	inc	eax
	mov	DWORD PTR i$6124[rsp], eax
$LN3@Surface_Cl:
	mov	eax, DWORD PTR z$[rsp]
	cmp	DWORD PTR i$6124[rsp], eax
	jge	SHORT $LN1@Surface_Cl
	movsxd	rax, DWORD PTR i$6124[rsp]
	mov	rcx, QWORD PTR s$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	edx, DWORD PTR a_Color$[rsp]
	mov	DWORD PTR [rcx+rax*4], edx
	jmp	SHORT $LN2@Surface_Cl
$LN1@Surface_Cl:
; Line 25
	add	rsp, 16
	pop	rdi
	ret	0
?Surface_Clear@@YAXPEAUSurface@@I@Z ENDP		; Surface_Clear
_TEXT	ENDS
PUBLIC	?Surface_Print@@YAXPEAUSurface@@PEADHHI@Z	; Surface_Print
EXTRN	strlen:PROC
pdata	SEGMENT
$pdata$?Surface_Print@@YAXPEAUSurface@@PEADHHI@Z DD imagerel $LN17
	DD	imagerel $LN17+461
	DD	imagerel $unwind$?Surface_Print@@YAXPEAUSurface@@PEADHHI@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?Surface_Print@@YAXPEAUSurface@@PEADHHI@Z DD 022d01H
	DD	070159219H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
_TEXT	SEGMENT
t$ = 32
i$ = 40
pos$6141 = 44
a$6144 = 48
c$6145 = 56
h$6147 = 64
v$6148 = 68
tv142 = 72
s$ = 96
a_String$ = 104
x1$ = 112
y1$ = 120
color$ = 128
?Surface_Print@@YAXPEAUSurface@@PEADHHI@Z PROC		; Surface_Print
; Line 28
$LN17:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	mov	rdi, rsp
	mov	ecx, 20
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]
; Line 29
	movsxd	rax, DWORD PTR x1$[rsp]
	mov	rcx, QWORD PTR s$[rsp]
	mov	rcx, QWORD PTR [rcx]
	lea	rax, QWORD PTR [rcx+rax*4]
	mov	rcx, QWORD PTR s$[rsp]
	mov	edx, DWORD PTR y1$[rsp]
	imul	edx, DWORD PTR [rcx+8]
	mov	ecx, edx
	movsxd	rcx, ecx
	lea	rax, QWORD PTR [rax+rcx*4]
	mov	QWORD PTR t$[rsp], rax
; Line 31
	mov	DWORD PTR i$[rsp], 0
	jmp	SHORT $LN12@Surface_Pr
$LN11@Surface_Pr:
	mov	eax, DWORD PTR i$[rsp]
	inc	eax
	mov	DWORD PTR i$[rsp], eax
$LN12@Surface_Pr:
	mov	rcx, QWORD PTR a_String$[rsp]
	call	strlen
	cmp	DWORD PTR i$[rsp], eax
	jge	$LN10@Surface_Pr
; Line 33
	mov	DWORD PTR pos$6141[rsp], 0
; Line 34
	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR a_String$[rsp]
	movsx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 65					; 00000041H
	jl	SHORT $LN9@Surface_Pr
	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR a_String$[rsp]
	movsx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 90					; 0000005aH
	jg	SHORT $LN9@Surface_Pr
	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR a_String$[rsp]
	movsx	eax, BYTE PTR [rcx+rax]
	add	eax, 32					; 00000020H
	cdqe
	mov	rcx, QWORD PTR s$[rsp]
	mov	eax, DWORD PTR [rcx+rax*4+1292]
	mov	DWORD PTR pos$6141[rsp], eax
	jmp	SHORT $LN8@Surface_Pr
$LN9@Surface_Pr:
; Line 35
	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR a_String$[rsp]
	movsx	rax, BYTE PTR [rcx+rax]
	mov	rcx, QWORD PTR s$[rsp]
	mov	eax, DWORD PTR [rcx+rax*4+1292]
	mov	DWORD PTR pos$6141[rsp], eax
$LN8@Surface_Pr:
; Line 37
	mov	rax, QWORD PTR t$[rsp]
	mov	QWORD PTR a$6144[rsp], rax
; Line 38
	movsxd	rax, DWORD PTR pos$6141[rsp]
	imul	rax, 25
	mov	rcx, QWORD PTR s$[rsp]
	lea	rax, QWORD PTR [rcx+rax+16]
	mov	QWORD PTR c$6145[rsp], rax
; Line 40
	mov	DWORD PTR v$6148[rsp], 0
	jmp	SHORT $LN7@Surface_Pr
$LN6@Surface_Pr:
	mov	eax, DWORD PTR v$6148[rsp]
	inc	eax
	mov	DWORD PTR v$6148[rsp], eax
$LN7@Surface_Pr:
	cmp	DWORD PTR v$6148[rsp], 5
	jge	$LN5@Surface_Pr
; Line 42
	mov	DWORD PTR h$6147[rsp], 0
	jmp	SHORT $LN4@Surface_Pr
$LN3@Surface_Pr:
	mov	eax, DWORD PTR h$6147[rsp]
	inc	eax
	mov	DWORD PTR h$6147[rsp], eax
$LN4@Surface_Pr:
	cmp	DWORD PTR h$6147[rsp], 5
	jge	SHORT $LN2@Surface_Pr
	mov	rax, QWORD PTR c$6145[rsp]
	movsx	eax, BYTE PTR [rax]
	mov	rcx, QWORD PTR c$6145[rsp]
	inc	rcx
	mov	QWORD PTR c$6145[rsp], rcx
	cmp	eax, 111				; 0000006fH
	jne	SHORT $LN15@Surface_Pr
	mov	DWORD PTR tv142[rsp], 1
	jmp	SHORT $LN16@Surface_Pr
$LN15@Surface_Pr:
	mov	DWORD PTR tv142[rsp], 0
$LN16@Surface_Pr:
	cmp	DWORD PTR tv142[rsp], 0
	je	SHORT $LN1@Surface_Pr
	movsxd	rax, DWORD PTR h$6147[rsp]
	mov	rcx, QWORD PTR a$6144[rsp]
	mov	edx, DWORD PTR color$[rsp]
	mov	DWORD PTR [rcx+rax*4], edx
$LN1@Surface_Pr:
; Line 43
	jmp	SHORT $LN3@Surface_Pr
$LN2@Surface_Pr:
	mov	rax, QWORD PTR s$[rsp]
	movsxd	rax, DWORD PTR [rax+8]
	mov	rcx, QWORD PTR a$6144[rsp]
	lea	rax, QWORD PTR [rcx+rax*4]
	mov	QWORD PTR a$6144[rsp], rax
; Line 44
	jmp	$LN6@Surface_Pr
$LN5@Surface_Pr:
; Line 45
	mov	rax, QWORD PTR t$[rsp]
	add	rax, 24
	mov	QWORD PTR t$[rsp], rax
; Line 46
	jmp	$LN11@Surface_Pr
$LN10@Surface_Pr:
; Line 47
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?Surface_Print@@YAXPEAUSurface@@PEADHHI@Z ENDP		; Surface_Print
_TEXT	ENDS
PUBLIC	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z	; Surface_SetChar
EXTRN	strcpy:PROC
pdata	SEGMENT
$pdata$?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z DD imagerel $LN3
	DD	imagerel $LN3+210
	DD	imagerel $unwind$?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z DD 022c01H
	DD	070143218H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
_TEXT	SEGMENT
s$ = 48
c$ = 56
c1$ = 64
c2$ = 72
c3$ = 80
c4$ = 88
c5$ = 96
?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z PROC	; Surface_SetChar
; Line 50
$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 51
	movsxd	rax, DWORD PTR c$[rsp]
	imul	rax, 25
	mov	rcx, QWORD PTR s$[rsp]
	lea	rax, QWORD PTR [rcx+rax+16]
	mov	rdx, QWORD PTR c1$[rsp]
	mov	rcx, rax
	call	strcpy
; Line 52
	movsxd	rax, DWORD PTR c$[rsp]
	imul	rax, 25
	mov	rcx, QWORD PTR s$[rsp]
	lea	rax, QWORD PTR [rcx+rax+21]
	mov	rdx, QWORD PTR c2$[rsp]
	mov	rcx, rax
	call	strcpy
; Line 53
	movsxd	rax, DWORD PTR c$[rsp]
	imul	rax, 25
	mov	rcx, QWORD PTR s$[rsp]
	lea	rax, QWORD PTR [rcx+rax+26]
	mov	rdx, QWORD PTR c3$[rsp]
	mov	rcx, rax
	call	strcpy
; Line 54
	movsxd	rax, DWORD PTR c$[rsp]
	imul	rax, 25
	mov	rcx, QWORD PTR s$[rsp]
	lea	rax, QWORD PTR [rcx+rax+31]
	mov	rdx, QWORD PTR c4$[rsp]
	mov	rcx, rax
	call	strcpy
; Line 55
	movsxd	rax, DWORD PTR c$[rsp]
	imul	rax, 25
	mov	rcx, QWORD PTR s$[rsp]
	lea	rax, QWORD PTR [rcx+rax+36]
	mov	rdx, QWORD PTR c5$[rsp]
	mov	rcx, rax
	call	strcpy
; Line 56
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ENDP	; Surface_SetChar
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?Surface_InitCharset@@YAXPEAUSurface@@@Z	; Surface_InitCharset
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_cookie:QWORD
EXTRN	__security_check_cookie:PROC
EXTRN	_RTC_CheckStackVars:PROC
pdata	SEGMENT
$pdata$?Surface_InitCharset@@YAXPEAUSurface@@@Z DD imagerel $LN9
	DD	imagerel $LN9+3665
	DD	imagerel $unwind$?Surface_InitCharset@@YAXPEAUSurface@@@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?Surface_InitCharset@@YAXPEAUSurface@@@Z DD 043719H
	DD	015010eH
	DD	060067007H
	DD	imagerel __GSHandlerCheck
	DD	090H
xdata	ENDS
CONST	SEGMENT
	ORG $+1
?Surface_InitCharset@@YAXPEAUSurface@@@Z$rtcName$0 DB 063H ; Surface_InitCharset
	DB	00H
	ORG $+10
?Surface_InitCharset@@YAXPEAUSurface@@@Z$rtcVarDesc DD 048H ; Surface_InitCharset
	DD	033H
	DQ	FLAT:?Surface_InitCharset@@YAXPEAUSurface@@@Z$rtcName$0
	ORG $+48
?Surface_InitCharset@@YAXPEAUSurface@@@Z$rtcFrameData DD 01H ; Surface_InitCharset
	DD	00H
	DQ	FLAT:?Surface_InitCharset@@YAXPEAUSurface@@@Z$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
_TEXT	SEGMENT
c$ = 72
i$ = 132
__$ArrayPad$ = 144
s$ = 192
?Surface_InitCharset@@YAXPEAUSurface@@@Z PROC		; Surface_InitCharset
; Line 59
$LN9:
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 168				; 000000a8H
	mov	rdi, rsp
	mov	ecx, 42					; 0000002aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+192]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 60
	lea	rax, OFFSET FLAT:$SG6168
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6169
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6170
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6171
	lea	r8, OFFSET FLAT:$SG6172
	xor	edx, edx
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 61
	lea	rax, OFFSET FLAT:$SG6173
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6174
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6175
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6176
	lea	r8, OFFSET FLAT:$SG6177
	mov	edx, 1
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 62
	lea	rax, OFFSET FLAT:$SG6178
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6179
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6180
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6181
	lea	r8, OFFSET FLAT:$SG6182
	mov	edx, 2
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 63
	lea	rax, OFFSET FLAT:$SG6183
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6184
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6185
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6186
	lea	r8, OFFSET FLAT:$SG6187
	mov	edx, 3
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 64
	lea	rax, OFFSET FLAT:$SG6188
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6189
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6190
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6191
	lea	r8, OFFSET FLAT:$SG6192
	mov	edx, 4
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 65
	lea	rax, OFFSET FLAT:$SG6193
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6194
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6195
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6196
	lea	r8, OFFSET FLAT:$SG6197
	mov	edx, 5
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 66
	lea	rax, OFFSET FLAT:$SG6198
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6199
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6200
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6201
	lea	r8, OFFSET FLAT:$SG6202
	mov	edx, 6
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 67
	lea	rax, OFFSET FLAT:$SG6203
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6204
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6205
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6206
	lea	r8, OFFSET FLAT:$SG6207
	mov	edx, 7
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 68
	lea	rax, OFFSET FLAT:$SG6208
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6209
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6210
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6211
	lea	r8, OFFSET FLAT:$SG6212
	mov	edx, 8
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 69
	lea	rax, OFFSET FLAT:$SG6213
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6214
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6215
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6216
	lea	r8, OFFSET FLAT:$SG6217
	mov	edx, 9
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 70
	lea	rax, OFFSET FLAT:$SG6218
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6219
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6220
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6221
	lea	r8, OFFSET FLAT:$SG6222
	mov	edx, 10
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 71
	lea	rax, OFFSET FLAT:$SG6223
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6224
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6225
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6226
	lea	r8, OFFSET FLAT:$SG6227
	mov	edx, 11
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 72
	lea	rax, OFFSET FLAT:$SG6228
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6229
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6230
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6231
	lea	r8, OFFSET FLAT:$SG6232
	mov	edx, 12
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 73
	lea	rax, OFFSET FLAT:$SG6233
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6234
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6235
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6236
	lea	r8, OFFSET FLAT:$SG6237
	mov	edx, 13
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 74
	lea	rax, OFFSET FLAT:$SG6238
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6239
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6240
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6241
	lea	r8, OFFSET FLAT:$SG6242
	mov	edx, 14
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 75
	lea	rax, OFFSET FLAT:$SG6243
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6244
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6245
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6246
	lea	r8, OFFSET FLAT:$SG6247
	mov	edx, 15
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 76
	lea	rax, OFFSET FLAT:$SG6248
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6249
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6250
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6251
	lea	r8, OFFSET FLAT:$SG6252
	mov	edx, 16
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 77
	lea	rax, OFFSET FLAT:$SG6253
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6254
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6255
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6256
	lea	r8, OFFSET FLAT:$SG6257
	mov	edx, 17
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 78
	lea	rax, OFFSET FLAT:$SG6258
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6259
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6260
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6261
	lea	r8, OFFSET FLAT:$SG6262
	mov	edx, 18
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 79
	lea	rax, OFFSET FLAT:$SG6263
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6264
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6265
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6266
	lea	r8, OFFSET FLAT:$SG6267
	mov	edx, 19
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 80
	lea	rax, OFFSET FLAT:$SG6268
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6269
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6270
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6271
	lea	r8, OFFSET FLAT:$SG6272
	mov	edx, 20
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 81
	lea	rax, OFFSET FLAT:$SG6273
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6274
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6275
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6276
	lea	r8, OFFSET FLAT:$SG6277
	mov	edx, 21
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 82
	lea	rax, OFFSET FLAT:$SG6278
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6279
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6280
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6281
	lea	r8, OFFSET FLAT:$SG6282
	mov	edx, 22
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 83
	lea	rax, OFFSET FLAT:$SG6283
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6284
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6285
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6286
	lea	r8, OFFSET FLAT:$SG6287
	mov	edx, 23
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 84
	lea	rax, OFFSET FLAT:$SG6288
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6289
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6290
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6291
	lea	r8, OFFSET FLAT:$SG6292
	mov	edx, 24
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 85
	lea	rax, OFFSET FLAT:$SG6293
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6294
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6295
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6296
	lea	r8, OFFSET FLAT:$SG6297
	mov	edx, 25
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 86
	lea	rax, OFFSET FLAT:$SG6298
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6299
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6300
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6301
	lea	r8, OFFSET FLAT:$SG6302
	mov	edx, 26
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 87
	lea	rax, OFFSET FLAT:$SG6303
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6304
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6305
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6306
	lea	r8, OFFSET FLAT:$SG6307
	mov	edx, 27
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 88
	lea	rax, OFFSET FLAT:$SG6308
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6309
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6310
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6311
	lea	r8, OFFSET FLAT:$SG6312
	mov	edx, 28
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 89
	lea	rax, OFFSET FLAT:$SG6313
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6314
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6315
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6316
	lea	r8, OFFSET FLAT:$SG6317
	mov	edx, 29
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 90
	lea	rax, OFFSET FLAT:$SG6318
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6319
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6320
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6321
	lea	r8, OFFSET FLAT:$SG6322
	mov	edx, 30
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 91
	lea	rax, OFFSET FLAT:$SG6323
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6324
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6325
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6326
	lea	r8, OFFSET FLAT:$SG6327
	mov	edx, 31
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 92
	lea	rax, OFFSET FLAT:$SG6328
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6329
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6330
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6331
	lea	r8, OFFSET FLAT:$SG6332
	mov	edx, 32					; 00000020H
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 93
	lea	rax, OFFSET FLAT:$SG6333
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6334
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6335
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6336
	lea	r8, OFFSET FLAT:$SG6337
	mov	edx, 33					; 00000021H
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 94
	lea	rax, OFFSET FLAT:$SG6338
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6339
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6340
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6341
	lea	r8, OFFSET FLAT:$SG6342
	mov	edx, 34					; 00000022H
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 95
	lea	rax, OFFSET FLAT:$SG6343
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6344
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6345
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6346
	lea	r8, OFFSET FLAT:$SG6347
	mov	edx, 35					; 00000023H
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 96
	lea	rax, OFFSET FLAT:$SG6348
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6349
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6350
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6351
	lea	r8, OFFSET FLAT:$SG6352
	mov	edx, 36					; 00000024H
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 97
	lea	rax, OFFSET FLAT:$SG6353
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6354
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6355
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6356
	lea	r8, OFFSET FLAT:$SG6357
	mov	edx, 37					; 00000025H
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 98
	lea	rax, OFFSET FLAT:$SG6358
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6359
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6360
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6361
	lea	r8, OFFSET FLAT:$SG6362
	mov	edx, 38					; 00000026H
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 99
	lea	rax, OFFSET FLAT:$SG6363
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6364
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6365
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6366
	lea	r8, OFFSET FLAT:$SG6367
	mov	edx, 39					; 00000027H
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 100
	lea	rax, OFFSET FLAT:$SG6368
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6369
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6370
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6371
	lea	r8, OFFSET FLAT:$SG6372
	mov	edx, 40					; 00000028H
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 101
	lea	rax, OFFSET FLAT:$SG6373
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6374
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6375
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6376
	lea	r8, OFFSET FLAT:$SG6377
	mov	edx, 41					; 00000029H
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 102
	lea	rax, OFFSET FLAT:$SG6378
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6379
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6380
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6381
	lea	r8, OFFSET FLAT:$SG6382
	mov	edx, 42					; 0000002aH
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 103
	lea	rax, OFFSET FLAT:$SG6383
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6384
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6385
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6386
	lea	r8, OFFSET FLAT:$SG6387
	mov	edx, 43					; 0000002bH
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 104
	lea	rax, OFFSET FLAT:$SG6388
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6389
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6390
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6391
	lea	r8, OFFSET FLAT:$SG6392
	mov	edx, 44					; 0000002cH
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 105
	lea	rax, OFFSET FLAT:$SG6393
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6394
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6395
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6396
	lea	r8, OFFSET FLAT:$SG6397
	mov	edx, 45					; 0000002dH
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 106
	lea	rax, OFFSET FLAT:$SG6398
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6399
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6400
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6401
	lea	r8, OFFSET FLAT:$SG6402
	mov	edx, 46					; 0000002eH
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 107
	lea	rax, OFFSET FLAT:$SG6403
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6404
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6405
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6406
	lea	r8, OFFSET FLAT:$SG6407
	mov	edx, 47					; 0000002fH
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 108
	lea	rax, OFFSET FLAT:$SG6408
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6409
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6410
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6411
	lea	r8, OFFSET FLAT:$SG6412
	mov	edx, 48					; 00000030H
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 109
	lea	rax, OFFSET FLAT:$SG6413
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:$SG6414
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:$SG6415
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG6416
	lea	r8, OFFSET FLAT:$SG6417
	mov	edx, 49					; 00000031H
	mov	rcx, QWORD PTR s$[rsp]
	call	?Surface_SetChar@@YAXPEAUSurface@@HPEAD1111@Z ; Surface_SetChar
; Line 110
	lea	rax, QWORD PTR c$[rsp]
	lea	rcx, OFFSET FLAT:$SG6419
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 51					; 00000033H
	rep movsb
; Line 112
	mov	DWORD PTR i$[rsp], 0
	jmp	SHORT $LN6@Surface_In
$LN5@Surface_In:
	mov	eax, DWORD PTR i$[rsp]
	inc	eax
	mov	DWORD PTR i$[rsp], eax
$LN6@Surface_In:
	cmp	DWORD PTR i$[rsp], 256			; 00000100H
	jge	SHORT $LN4@Surface_In
	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR s$[rsp]
	mov	DWORD PTR [rcx+rax*4+1292], 45		; 0000002dH
	jmp	SHORT $LN5@Surface_In
$LN4@Surface_In:
; Line 113
	mov	DWORD PTR i$[rsp], 0
	jmp	SHORT $LN3@Surface_In
$LN2@Surface_In:
	mov	eax, DWORD PTR i$[rsp]
	inc	eax
	mov	DWORD PTR i$[rsp], eax
$LN3@Surface_In:
	cmp	DWORD PTR i$[rsp], 50			; 00000032H
	jge	SHORT $LN1@Surface_In
	movsxd	rax, DWORD PTR i$[rsp]
	movzx	eax, BYTE PTR c$[rsp+rax]
	mov	rcx, QWORD PTR s$[rsp]
	mov	edx, DWORD PTR i$[rsp]
	mov	DWORD PTR [rcx+rax*4+1292], edx
	jmp	SHORT $LN2@Surface_In
$LN1@Surface_In:
; Line 114
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?Surface_InitCharset@@YAXPEAUSurface@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 168				; 000000a8H
	pop	rdi
	pop	rsi
	ret	0
?Surface_InitCharset@@YAXPEAUSurface@@@Z ENDP		; Surface_InitCharset
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

include listing.inc

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?out_pixels@@3PEATcl_uchar4@@EA			; out_pixels
PUBLIC	?command_queue@@3PEAU_cl_command_queue@@EA	; command_queue
PUBLIC	?program@@3PEAU_cl_program@@EA			; program
PUBLIC	?context@@3PEAU_cl_context@@EA			; context
PUBLIC	?devices@@3PEAPEAU_cl_device_id@@EA		; devices
PUBLIC	?n_primitives@@3IA				; n_primitives
PUBLIC	?raytracer_kernel@@3PEAU_cl_kernel@@EA		; raytracer_kernel
PUBLIC	?primitive_buffer@@3PEAU_cl_mem@@EA		; primitive_buffer
PUBLIC	?primitive_list@@3PEAUPrimitive@@EA		; primitive_list
PUBLIC	?pixel_buffer@@3PEAU_cl_mem@@EA			; pixel_buffer
_BSS	SEGMENT
?out_pixels@@3PEATcl_uchar4@@EA DQ 01H DUP (?)		; out_pixels
?command_queue@@3PEAU_cl_command_queue@@EA DQ 01H DUP (?) ; command_queue
?program@@3PEAU_cl_program@@EA DQ 01H DUP (?)		; program
?context@@3PEAU_cl_context@@EA DQ 01H DUP (?)		; context
?devices@@3PEAPEAU_cl_device_id@@EA DQ 01H DUP (?)	; devices
?n_primitives@@3IA DD 01H DUP (?)			; n_primitives
	ALIGN	8

?raytracer_kernel@@3PEAU_cl_kernel@@EA DQ 01H DUP (?)	; raytracer_kernel
?primitive_buffer@@3PEAU_cl_mem@@EA DQ 01H DUP (?)	; primitive_buffer
?primitive_list@@3PEAUPrimitive@@EA DQ 01H DUP (?)	; primitive_list
?pixel_buffer@@3PEAU_cl_mem@@EA DQ 01H DUP (?)		; pixel_buffer
_BSS	ENDS
CONST	SEGMENT
$SG68423 DB	'Error: Failed to allocate primitive memory on host.', 0aH
	DB	00H
	ORG $+3
$SG68428 DB	'Error: Failed to allocate output pixel memory on host.', 0aH
	DB	00H
$SG68433 DB	'rb', 00H
	ORG $+1
$SG68560 DB	'%s', 0aH, 00H
$SG68435 DB	'Failed to open file ''%s''', 0aH, 00H
	ORG $+6
$SG68437 DB	'Failed to seek file ''%s''', 0aH, 00H
	ORG $+6
$SG68440 DB	'Failed to check position on file ''%s''', 0aH, 00H
	ORG $+1
$SG68445 DB	'Failed to allocate memory for file ''%s''', 0aH, 00H
	ORG $+7
$SG68446 DB	'Reading file ''%s'' (size %ld bytes)', 0aH, 00H
	ORG $+4
$SG68451 DB	'Failed to read file ''%s'' (read %ld)', 0aH, 00H
	ORG $+3
$SG68460 DB	'Error: Getting Platforms. (clGetPlatformsIDs)', 0aH, 00H
	ORG $+1
$SG68466 DB	'Error: Getting Platform Ids. (clGetPlatformsIDs)', 0aH, 00H
	ORG $+6
$SG68473 DB	'Error: Getting Platform Info.(clGetPlatformInfo)', 0aH, 00H
	ORG $+6
$SG68474 DB	'OpenCL Platform %d: %s', 0aH, 00H
$SG68476 DB	'Advanced Micro Devices, Inc.', 00H
	ORG $+3
$SG68479 DB	'NULL platform found so Exiting Application.', 00H
	ORG $+4
$SG68485 DB	'Error: Creating Context. (clCreateContextFromType)', 0aH
	DB	00H
	ORG $+4
$SG68487 DB	'Error: Getting Context Info             (device list siz'
	DB	'e, clGetContextInfo)', 0aH, 00H
	ORG $+2
$SG68490 DB	'Error: No devices found.', 0aH, 00H
	ORG $+6
$SG68492 DB	'Error: Getting Context Info             (device list, cl'
	DB	'GetContextInfo)', 0aH, 00H
	ORG $+7
$SG68501 DB	'Failed to get OpenCL device info: %d', 0aH, 00H
	ORG $+2
$SG68508 DB	'TYPE_ALL', 00H
	ORG $+7
$SG68510 DB	'TYPE_DEFAULT', 00H
	ORG $+3
$SG68512 DB	'TYPE_CPU', 00H
	ORG $+7
$SG68514 DB	'TYPE_GPU', 00H
	ORG $+7
$SG68516 DB	'TYPE_UNKNOWN', 00H
	ORG $+3
$SG68517 DB	'OpenCL Device %d: Type = %s', 0aH, 00H
	ORG $+3
$SG68521 DB	'Failed to get OpenCL device info: %d', 0aH, 00H
	ORG $+2
$SG68522 DB	'OpenCL Device %d: Name = %s', 0aH, 00H
	ORG $+3
$SG68526 DB	'Failed to get OpenCL device info: %d', 0aH, 00H
	ORG $+2
$SG68527 DB	'OpenCL Device %d: Compute units = %u', 0aH, 00H
	ORG $+2
$SG68531 DB	'Failed to get OpenCL device info: %d', 0aH, 00H
	ORG $+2
$SG68533 DB	'OpenCL Device %d: Max. work group size = %d', 0aH, 00H
	ORG $+3
$SG68535 DB	'Error: Creating Command Queue. (clCreateCommandQueue)', 0aH
	DB	00H
	ORG $+1
$SG68538 DB	'Error: clCreateBuffer (primitive_buffer): %d', 0aH, 00H
	ORG $+2
$SG68541 DB	'Error: Failed to write the primitive_buffer: %d', 0aH, 00H
	ORG $+7
$SG68544 DB	'Error: clCreateBuffer (pixel_buffer)', 0aH, 00H
	ORG $+2
$SG68547 DB	'Error: Failed to write the pixel_buffer: %d', 0aH, 00H
	ORG $+3
$SG68549 DB	'raytracer_kernel.cl', 00H
	ORG $+12
$SG68553 DB	'Error: Loading Binary into cl_program                (cl'
	DB	'CreateProgramWithBinary)', 0aH, 00H
	ORG $+6
$SG68554 DB	'-I. -D__OPENCL__', 00H
	ORG $+7
$SG68556 DB	'Error: Building Program (clBuildProgram): %d', 0aH, 00H
	ORG $+2
$SG68561 DB	'raytracer_kernel', 00H
	ORG $+7
$SG68563 DB	'Error: Creating Kernel from program. (clCreateKernel)', 0aH
	DB	00H
	ORG $+1
$SG68577 DB	'Error: Getting Device Info. (clGetDeviceInfo)', 0aH, 00H
	ORG $+1
$SG68581 DB	'Error: Getting Device Info. (clGetDeviceInfo)', 0aH, 00H
	ORG $+1
$SG68585 DB	'Error: Getting Device Info. (clGetDeviceInfo)', 0aH, 00H
	ORG $+1
$SG68589 DB	'Unsupported: Device does not support requested number of'
	DB	' work items.', 00H
	ORG $+3
$SG68593 DB	'Error: Setting kernel argument. (pixel_buffer)', 0aH, 00H
$SG68597 DB	'Error: Setting kernel argument. (width)', 0aH, 00H
	ORG $+7
$SG68601 DB	'Error: Setting kernel argument. (height)', 0aH, 00H
	ORG $+6
$SG68605 DB	'Error: Setting kernel argument. (primitive_buffer)', 0aH
	DB	00H
	ORG $+4
$SG68609 DB	'Error: Setting kernel argument. (n_primitives) : %d', 0aH
	DB	00H
	ORG $+3
$SG68612 DB	'Error: Setting kernel argument. (local_prims)', 0aH, 00H
	ORG $+9
$SG68614 DB	'Error: Enqueueing kernel onto command queue.            '
	DB	' (clEnqueueNDRangeKernel)', 0aH, 00H
	ORG $+13
$SG68616 DB	'Error: Waiting for kernel run to finish.             (cl'
	DB	'WaitForEvents)', 0aH, 00H
$SG68618 DB	'Error: Release event object.             (clReleaseEvent'
	DB	')', 0aH, 00H
	ORG $+13
$SG68621 DB	'Error: clEnqueueReadBuffer failed.              (clEnque'
	DB	'ueReadBuffer)', 0aH, 00H
	ORG $+9
$SG68623 DB	'Error: Waiting for read buffer call to finish.          '
	DB	'   (clWaitForEvents)', 0aH, 00H
	ORG $+2
$SG68625 DB	'Error: Release event object.             (clReleaseEvent'
	DB	')', 0aH, 00H
	ORG $+5
$SG68631 DB	'Error: In clReleaseKernel ', 0aH, 00H
	ORG $+4
$SG68633 DB	'Error: In clReleaseProgram', 0aH, 00H
	ORG $+4
$SG68635 DB	'Error: In clReleaseMemObject (primitive_buffer)', 0aH, 00H
	ORG $+7
$SG68637 DB	'Error: In clReleaseMemObject (pixel_buffer)', 0aH, 00H
	ORG $+3
$SG68639 DB	'Error: In clReleaseCommandQueue', 0aH, 00H
	ORG $+7
$SG68641 DB	'Error: In clReleaseContext', 0aH, 00H
	ORG $+4
$SG68658 DB	'00:00.000', 00H
	ORG $+6
$SG68661 DB	'Runtime: %s', 0aH, 00H
	ORG $+3
$SG68663 DB	'test.bmp', 00H
CONST	ENDS
_DATA	SEGMENT
width	DD	0320H
height	DD	0258H
_DATA	ENDS
PUBLIC	?initialize_host@@YAHXZ				; initialize_host
EXTRN	memset:PROC
EXTRN	malloc:PROC
EXTRN	printf:PROC
EXTRN	?create_scene@@YAPEAUPrimitive@@AEAI@Z:PROC	; create_scene
EXTRN	_RTC_Shutdown:PROC
EXTRN	_RTC_InitBase:PROC
pdata	SEGMENT
$pdata$?initialize_host@@YAHXZ DD imagerel $LN5
	DD	imagerel $LN5+169
	DD	imagerel $unwind$?initialize_host@@YAHXZ
pdata	ENDS
xdata	SEGMENT
$unwind$?initialize_host@@YAHXZ DD 021501H
	DD	070025206H
xdata	ENDS
;	COMDAT rtc$TMZ
; File c:\users\mark\documents\devmaster_raytracing\raytracer3.2.02\raytracer\opencl raytracer\raytracer.c
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
pixel_size_bytes$ = 32
?initialize_host@@YAHXZ PROC				; initialize_host
; Line 12
$LN5:
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 14
	lea	rcx, OFFSET FLAT:?n_primitives@@3IA	; n_primitives
	call	?create_scene@@YAPEAUPrimitive@@AEAI@Z	; create_scene
	mov	QWORD PTR ?primitive_list@@3PEAUPrimitive@@EA, rax ; primitive_list
; Line 16
	cmp	QWORD PTR ?primitive_list@@3PEAUPrimitive@@EA, 0 ; primitive_list
	jne	SHORT $LN2@initialize
; Line 18
	lea	rcx, OFFSET FLAT:$SG68423
	call	printf
; Line 19
	mov	eax, 1
	jmp	SHORT $LN3@initialize
$LN2@initialize:
; Line 22
	mov	eax, DWORD PTR width
	shl	rax, 2
	mov	ecx, DWORD PTR height
	imul	rax, rcx
	mov	DWORD PTR pixel_size_bytes$[rsp], eax
; Line 23
	mov	eax, DWORD PTR pixel_size_bytes$[rsp]
	mov	ecx, eax
	call	malloc
	mov	QWORD PTR ?out_pixels@@3PEATcl_uchar4@@EA, rax ; out_pixels
; Line 25
	cmp	QWORD PTR ?out_pixels@@3PEATcl_uchar4@@EA, 0 ; out_pixels
	jne	SHORT $LN1@initialize
; Line 27
	lea	rcx, OFFSET FLAT:$SG68428
	call	printf
; Line 28
	mov	eax, 1
	jmp	SHORT $LN3@initialize
$LN1@initialize:
; Line 32
	mov	eax, DWORD PTR pixel_size_bytes$[rsp]
	mov	r8d, eax
	xor	edx, edx
	mov	rcx, QWORD PTR ?out_pixels@@3PEATcl_uchar4@@EA ; out_pixels
	call	memset
; Line 34
	xor	eax, eax
$LN3@initialize:
; Line 35
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?initialize_host@@YAHXZ ENDP				; initialize_host
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?initialize_openCL@@YAHXZ			; initialize_openCL
EXTRN	__GSHandlerCheck:PROC
EXTRN	clCreateKernel:PROC
EXTRN	calloc:PROC
EXTRN	clGetProgramBuildInfo:PROC
EXTRN	clBuildProgram:PROC
EXTRN	clCreateProgramWithSource:PROC
EXTRN	strlen:PROC
EXTRN	clEnqueueWriteBuffer:PROC
EXTRN	clCreateBuffer:PROC
EXTRN	clCreateCommandQueue:PROC
EXTRN	exit:PROC
EXTRN	clGetDeviceInfo:PROC
EXTRN	clGetContextInfo:PROC
EXTRN	clCreateContextFromType:PROC
EXTRN	??3@YAXPEAX@Z:PROC				; operator delete
EXTRN	strcmp:PROC
EXTRN	fprintf:PROC
EXTRN	__iob_func:PROC
EXTRN	clGetPlatformInfo:PROC
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	clGetPlatformIDs:PROC
EXTRN	__security_cookie:QWORD
EXTRN	__security_check_cookie:PROC
EXTRN	_RTC_CheckStackVars:PROC
pdata	SEGMENT
$pdata$?initialize_openCL@@YAHXZ DD imagerel $LN39
	DD	imagerel $LN39+2677
	DD	imagerel $unwind$?initialize_openCL@@YAHXZ
pdata	ENDS
xdata	SEGMENT
$unwind$?initialize_openCL@@YAHXZ DD 032a19H
	DD	0740109H
	DD	07002H
	DD	imagerel __GSHandlerCheck
	DD	0390H
xdata	ENDS
CONST	SEGMENT
	ORG $+3
?initialize_openCL@@YAHXZ$rtcName$0 DB 073H		; initialize_openCL
	DB	074H
	DB	061H
	DB	074H
	DB	075H
	DB	073H
	DB	00H
	ORG $+1
?initialize_openCL@@YAHXZ$rtcName$4 DB 063H		; initialize_openCL
	DB	070H
	DB	073H
	DB	00H
?initialize_openCL@@YAHXZ$rtcName$1 DB 064H		; initialize_openCL
	DB	065H
	DB	076H
	DB	069H
	DB	063H
	DB	065H
	DB	04cH
	DB	069H
	DB	073H
	DB	074H
	DB	053H
	DB	069H
	DB	07aH
	DB	065H
	DB	00H
	ORG $+1
?initialize_openCL@@YAHXZ$rtcName$2 DB 06eH		; initialize_openCL
	DB	075H
	DB	06dH
	DB	050H
	DB	06cH
	DB	061H
	DB	074H
	DB	066H
	DB	06fH
	DB	072H
	DB	06dH
	DB	073H
	DB	00H
	ORG $+3
?initialize_openCL@@YAHXZ$rtcName$3 DB 070H		; initialize_openCL
	DB	062H
	DB	075H
	DB	066H
	DB	066H
	DB	00H
	ORG $+2
?initialize_openCL@@YAHXZ$rtcName$5 DB 074H		; initialize_openCL
	DB	079H
	DB	070H
	DB	065H
	DB	00H
	ORG $+3
?initialize_openCL@@YAHXZ$rtcName$6 DB 062H		; initialize_openCL
	DB	075H
	DB	066H
	DB	00H
?initialize_openCL@@YAHXZ$rtcName$7 DB 075H		; initialize_openCL
	DB	06eH
	DB	069H
	DB	074H
	DB	073H
	DB	00H
	ORG $+2
?initialize_openCL@@YAHXZ$rtcName$8 DB 067H		; initialize_openCL
	DB	073H
	DB	069H
	DB	07aH
	DB	065H
	DB	00H
	ORG $+2
?initialize_openCL@@YAHXZ$rtcName$9 DB 073H		; initialize_openCL
	DB	06fH
	DB	075H
	DB	072H
	DB	063H
	DB	065H
	DB	00H
	ORG $+1
?initialize_openCL@@YAHXZ$rtcName$11 DB 06cH		; initialize_openCL
	DB	065H
	DB	06eH
	DB	00H
?initialize_openCL@@YAHXZ$rtcName$10 DB 073H		; initialize_openCL
	DB	06fH
	DB	075H
	DB	072H
	DB	063H
	DB	065H
	DB	053H
	DB	069H
	DB	07aH
	DB	065H
	DB	00H
	ORG $+5
?initialize_openCL@@YAHXZ$rtcFrameData DD 0cH		; initialize_openCL
	DD	00H
	DQ	FLAT:?initialize_openCL@@YAHXZ$rtcVarDesc
	ORG $+8
?initialize_openCL@@YAHXZ$rtcVarDesc DD 0348H		; initialize_openCL
	DD	08H
	DQ	FLAT:?initialize_openCL@@YAHXZ$rtcName$11
	DD	0328H
	DD	08H
	DQ	FLAT:?initialize_openCL@@YAHXZ$rtcName$10
	DD	0308H
	DD	08H
	DQ	FLAT:?initialize_openCL@@YAHXZ$rtcName$9
	DD	02e8H
	DD	08H
	DQ	FLAT:?initialize_openCL@@YAHXZ$rtcName$8
	DD	02c4H
	DD	04H
	DQ	FLAT:?initialize_openCL@@YAHXZ$rtcName$7
	DD	01b0H
	DD	0100H
	DQ	FLAT:?initialize_openCL@@YAHXZ$rtcName$6
	DD	0188H
	DD	08H
	DQ	FLAT:?initialize_openCL@@YAHXZ$rtcName$5
	DD	0158H
	DD	018H
	DQ	FLAT:?initialize_openCL@@YAHXZ$rtcName$4
	DD	0d0H
	DD	064H
	DQ	FLAT:?initialize_openCL@@YAHXZ$rtcName$3
	DD	094H
	DD	04H
	DQ	FLAT:?initialize_openCL@@YAHXZ$rtcName$2
	DD	078H
	DD	08H
	DQ	FLAT:?initialize_openCL@@YAHXZ$rtcName$1
	DD	054H
	DD	04H
	DQ	FLAT:?initialize_openCL@@YAHXZ$rtcName$0
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
_TEXT	SEGMENT
status$ = 84
deviceListSize$ = 120
numPlatforms$ = 148
platform$ = 168
platforms$68462 = 176
i$68467 = 184
pbuff$68471 = 208
cps$ = 344
deviceType$ = 372
i$68493 = 376
type$68498 = 392
stype$68502 = 408
buf$68518 = 432
units$68523 = 708
gsize$68528 = 744
filename$ = 760
source$ = 776
sourceSize$ = 808
len$68557 = 840
buffer$68558 = 856
$T68717 = 872
$T68718 = 880
tv72 = 888
tv177 = 896
tv196 = 904
__$ArrayPad$ = 912
?initialize_openCL@@YAHXZ PROC				; initialize_openCL
; Line 78
$LN39:
	push	rdi
	sub	rsp, 928				; 000003a0H
	mov	rdi, rsp
	mov	ecx, 232				; 000000e8H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 79
	mov	DWORD PTR status$[rsp], 0
; Line 88
	mov	QWORD PTR platform$[rsp], 0
; Line 89
	lea	r8, QWORD PTR numPlatforms$[rsp]
	xor	edx, edx
	xor	ecx, ecx
	call	clGetPlatformIDs
	mov	DWORD PTR status$[rsp], eax
; Line 90
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN36@initialize@2
; Line 92
	lea	rcx, OFFSET FLAT:$SG68460
	call	printf
; Line 93
	mov	eax, 1
	jmp	$LN37@initialize@2
$LN36@initialize@2:
; Line 96
	cmp	DWORD PTR numPlatforms$[rsp], 0
	jbe	$LN35@initialize@2
; Line 98
	mov	eax, DWORD PTR numPlatforms$[rsp]
	mov	QWORD PTR tv72[rsp], rax
	mov	eax, 8
	mov	rcx, QWORD PTR tv72[rsp]
	mul	rcx
	mov	rcx, -1
	cmovo	rax, rcx
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T68717[rsp], rax
	mov	rax, QWORD PTR $T68717[rsp]
	mov	QWORD PTR platforms$68462[rsp], rax
; Line 99
	xor	r8d, r8d
	mov	rdx, QWORD PTR platforms$68462[rsp]
	mov	ecx, DWORD PTR numPlatforms$[rsp]
	call	clGetPlatformIDs
	mov	DWORD PTR status$[rsp], eax
; Line 100
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN34@initialize@2
; Line 102
	lea	rcx, OFFSET FLAT:$SG68466
	call	printf
; Line 103
	mov	eax, 1
	jmp	$LN37@initialize@2
$LN34@initialize@2:
; Line 105
	mov	DWORD PTR i$68467[rsp], 0
	jmp	SHORT $LN33@initialize@2
$LN32@initialize@2:
	mov	eax, DWORD PTR i$68467[rsp]
	inc	eax
	mov	DWORD PTR i$68467[rsp], eax
$LN33@initialize@2:
	mov	eax, DWORD PTR numPlatforms$[rsp]
	cmp	DWORD PTR i$68467[rsp], eax
	jae	$LN31@initialize@2
; Line 113
	mov	eax, DWORD PTR i$68467[rsp]
	mov	QWORD PTR [rsp+32], 0
	lea	r9, QWORD PTR pbuff$68471[rsp]
	mov	r8d, 100				; 00000064H
	mov	edx, 2307				; 00000903H
	mov	rcx, QWORD PTR platforms$68462[rsp]
	mov	rcx, QWORD PTR [rcx+rax*8]
	call	clGetPlatformInfo
	mov	DWORD PTR status$[rsp], eax
; Line 114
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN30@initialize@2
; Line 116
	lea	rcx, OFFSET FLAT:$SG68473
	call	printf
; Line 117
	mov	eax, 1
	jmp	$LN37@initialize@2
$LN30@initialize@2:
; Line 121
	call	__iob_func
	add	rax, 96					; 00000060H
	lea	r9, QWORD PTR pbuff$68471[rsp]
	mov	r8d, DWORD PTR i$68467[rsp]
	lea	rdx, OFFSET FLAT:$SG68474
	mov	rcx, rax
	call	fprintf
; Line 124
	mov	eax, DWORD PTR i$68467[rsp]
	mov	rcx, QWORD PTR platforms$68462[rsp]
	mov	rax, QWORD PTR [rcx+rax*8]
	mov	QWORD PTR platform$[rsp], rax
; Line 125
	lea	rdx, OFFSET FLAT:$SG68476
	lea	rcx, QWORD PTR pbuff$68471[rsp]
	call	strcmp
	test	eax, eax
	jne	SHORT $LN29@initialize@2
; Line 127
	jmp	SHORT $LN31@initialize@2
$LN29@initialize@2:
; Line 129
	jmp	$LN32@initialize@2
$LN31@initialize@2:
; Line 130
	mov	rax, QWORD PTR platforms$68462[rsp]
	mov	QWORD PTR $T68718[rsp], rax
	mov	rcx, QWORD PTR $T68718[rsp]
	call	??3@YAXPEAX@Z				; operator delete
$LN35@initialize@2:
; Line 133
	cmp	QWORD PTR platform$[rsp], 0
	jne	SHORT $LN28@initialize@2
; Line 135
	lea	rcx, OFFSET FLAT:$SG68479
	call	printf
; Line 136
	mov	eax, 1
	jmp	$LN37@initialize@2
$LN28@initialize@2:
; Line 142
	mov	QWORD PTR cps$[rsp], 4228		; 00001084H
	mov	rax, QWORD PTR platform$[rsp]
	mov	QWORD PTR cps$[rsp+8], rax
	mov	QWORD PTR cps$[rsp+16], 0
; Line 149
	mov	DWORD PTR deviceType$[rsp], 4
; Line 150
	xor	eax, eax
	test	eax, eax
	je	SHORT $LN27@initialize@2
; Line 151
	mov	DWORD PTR deviceType$[rsp], 2
$LN27@initialize@2:
; Line 163
	movsxd	rax, DWORD PTR deviceType$[rsp]
	lea	rcx, QWORD PTR status$[rsp]
	mov	QWORD PTR [rsp+32], rcx
	xor	r9d, r9d
	xor	r8d, r8d
	mov	rdx, rax
	lea	rcx, QWORD PTR cps$[rsp]
	call	clCreateContextFromType
	mov	QWORD PTR ?context@@3PEAU_cl_context@@EA, rax ; context
; Line 164
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN26@initialize@2
; Line 166
	lea	rcx, OFFSET FLAT:$SG68485
	call	printf
; Line 167
	mov	eax, 1
	jmp	$LN37@initialize@2
$LN26@initialize@2:
; Line 175
	lea	rax, QWORD PTR deviceListSize$[rsp]
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 4225				; 00001081H
	mov	rcx, QWORD PTR ?context@@3PEAU_cl_context@@EA ; context
	call	clGetContextInfo
	mov	DWORD PTR status$[rsp], eax
; Line 176
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN25@initialize@2
; Line 180
	lea	rcx, OFFSET FLAT:$SG68487
	call	printf
; Line 181
	mov	eax, 1
	jmp	$LN37@initialize@2
$LN25@initialize@2:
; Line 187
	mov	rcx, QWORD PTR deviceListSize$[rsp]
	call	malloc
	mov	QWORD PTR ?devices@@3PEAPEAU_cl_device_id@@EA, rax ; devices
; Line 188
	cmp	QWORD PTR ?devices@@3PEAPEAU_cl_device_id@@EA, 0 ; devices
	jne	SHORT $LN24@initialize@2
; Line 190
	lea	rcx, OFFSET FLAT:$SG68490
	call	printf
; Line 191
	mov	eax, 1
	jmp	$LN37@initialize@2
$LN24@initialize@2:
; Line 200
	mov	QWORD PTR [rsp+32], 0
	mov	r9, QWORD PTR ?devices@@3PEAPEAU_cl_device_id@@EA ; devices
	mov	r8, QWORD PTR deviceListSize$[rsp]
	mov	edx, 4225				; 00001081H
	mov	rcx, QWORD PTR ?context@@3PEAU_cl_context@@EA ; context
	call	clGetContextInfo
	mov	DWORD PTR status$[rsp], eax
; Line 201
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN23@initialize@2
; Line 205
	lea	rcx, OFFSET FLAT:$SG68492
	call	printf
; Line 206
	mov	eax, 1
	jmp	$LN37@initialize@2
$LN23@initialize@2:
; Line 213
	mov	DWORD PTR i$68493[rsp], 0
	jmp	SHORT $LN22@initialize@2
$LN21@initialize@2:
	mov	eax, DWORD PTR i$68493[rsp]
	inc	eax
	mov	DWORD PTR i$68493[rsp], eax
$LN22@initialize@2:
	movsxd	rax, DWORD PTR i$68493[rsp]
	mov	QWORD PTR tv177[rsp], rax
	xor	edx, edx
	mov	rax, QWORD PTR deviceListSize$[rsp]
	mov	ecx, 8
	div	rcx
	mov	rcx, QWORD PTR tv177[rsp]
	cmp	rcx, rax
	jae	$LN20@initialize@2
; Line 214
	mov	QWORD PTR type$68498[rsp], 0
; Line 219
	movsxd	rax, DWORD PTR i$68493[rsp]
	mov	QWORD PTR [rsp+32], 0
	lea	r9, QWORD PTR type$68498[rsp]
	mov	r8d, 8
	mov	edx, 4096				; 00001000H
	mov	rcx, QWORD PTR ?devices@@3PEAPEAU_cl_device_id@@EA ; devices
	mov	rcx, QWORD PTR [rcx+rax*8]
	call	clGetDeviceInfo
	mov	DWORD PTR status$[rsp], eax
; Line 220
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN19@initialize@2
; Line 221
	call	__iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG68501
	mov	rcx, rax
	call	fprintf
; Line 222
	mov	ecx, -1
	call	exit
$LN19@initialize@2:
; Line 226
	mov	rax, QWORD PTR type$68498[rsp]
	mov	QWORD PTR tv196[rsp], rax
	cmp	QWORD PTR tv196[rsp], 1
	je	SHORT $LN15@initialize@2
	cmp	QWORD PTR tv196[rsp], 2
	je	SHORT $LN14@initialize@2
	cmp	QWORD PTR tv196[rsp], 4
	je	SHORT $LN13@initialize@2
	mov	eax, -1					; ffffffffH
	cmp	QWORD PTR tv196[rsp], rax
	je	SHORT $LN16@initialize@2
	jmp	SHORT $LN12@initialize@2
$LN16@initialize@2:
; Line 228
	lea	rax, OFFSET FLAT:$SG68508
	mov	QWORD PTR stype$68502[rsp], rax
; Line 229
	jmp	SHORT $LN17@initialize@2
$LN15@initialize@2:
; Line 231
	lea	rax, OFFSET FLAT:$SG68510
	mov	QWORD PTR stype$68502[rsp], rax
; Line 232
	jmp	SHORT $LN17@initialize@2
$LN14@initialize@2:
; Line 234
	lea	rax, OFFSET FLAT:$SG68512
	mov	QWORD PTR stype$68502[rsp], rax
; Line 235
	jmp	SHORT $LN17@initialize@2
$LN13@initialize@2:
; Line 237
	lea	rax, OFFSET FLAT:$SG68514
	mov	QWORD PTR stype$68502[rsp], rax
; Line 238
	jmp	SHORT $LN17@initialize@2
$LN12@initialize@2:
; Line 240
	lea	rax, OFFSET FLAT:$SG68516
	mov	QWORD PTR stype$68502[rsp], rax
$LN17@initialize@2:
; Line 243
	call	__iob_func
	add	rax, 96					; 00000060H
	mov	r9, QWORD PTR stype$68502[rsp]
	mov	r8d, DWORD PTR i$68493[rsp]
	lea	rdx, OFFSET FLAT:$SG68517
	mov	rcx, rax
	call	fprintf
; Line 250
	movsxd	rax, DWORD PTR i$68493[rsp]
	mov	QWORD PTR [rsp+32], 0
	lea	r9, QWORD PTR buf$68518[rsp]
	mov	r8d, 256				; 00000100H
	mov	edx, 4139				; 0000102bH
	mov	rcx, QWORD PTR ?devices@@3PEAPEAU_cl_device_id@@EA ; devices
	mov	rcx, QWORD PTR [rcx+rax*8]
	call	clGetDeviceInfo
	mov	DWORD PTR status$[rsp], eax
; Line 251
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN11@initialize@2
; Line 252
	call	__iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG68521
	mov	rcx, rax
	call	fprintf
; Line 253
	mov	ecx, -1
	call	exit
$LN11@initialize@2:
; Line 256
	call	__iob_func
	add	rax, 96					; 00000060H
	lea	r9, QWORD PTR buf$68518[rsp]
	mov	r8d, DWORD PTR i$68493[rsp]
	lea	rdx, OFFSET FLAT:$SG68522
	mov	rcx, rax
	call	fprintf
; Line 258
	mov	DWORD PTR units$68523[rsp], 0
; Line 263
	movsxd	rax, DWORD PTR i$68493[rsp]
	mov	QWORD PTR [rsp+32], 0
	lea	r9, QWORD PTR units$68523[rsp]
	mov	r8d, 4
	mov	edx, 4098				; 00001002H
	mov	rcx, QWORD PTR ?devices@@3PEAPEAU_cl_device_id@@EA ; devices
	mov	rcx, QWORD PTR [rcx+rax*8]
	call	clGetDeviceInfo
	mov	DWORD PTR status$[rsp], eax
; Line 264
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN10@initialize@2
; Line 265
	call	__iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG68526
	mov	rcx, rax
	call	fprintf
; Line 266
	mov	ecx, -1
	call	exit
$LN10@initialize@2:
; Line 269
	call	__iob_func
	add	rax, 96					; 00000060H
	mov	r9d, DWORD PTR units$68523[rsp]
	mov	r8d, DWORD PTR i$68493[rsp]
	lea	rdx, OFFSET FLAT:$SG68527
	mov	rcx, rax
	call	fprintf
; Line 271
	mov	QWORD PTR gsize$68528[rsp], 0
; Line 276
	movsxd	rax, DWORD PTR i$68493[rsp]
	mov	QWORD PTR [rsp+32], 0
	lea	r9, QWORD PTR gsize$68528[rsp]
	mov	r8d, 8
	mov	edx, 4100				; 00001004H
	mov	rcx, QWORD PTR ?devices@@3PEAPEAU_cl_device_id@@EA ; devices
	mov	rcx, QWORD PTR [rcx+rax*8]
	call	clGetDeviceInfo
	mov	DWORD PTR status$[rsp], eax
; Line 277
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN9@initialize@2
; Line 278
	call	__iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG68531
	mov	rcx, rax
	call	fprintf
; Line 279
	mov	ecx, -1
	call	exit
$LN9@initialize@2:
; Line 282
	call	__iob_func
	add	rax, 96					; 00000060H
	mov	r9d, DWORD PTR gsize$68528[rsp]
	mov	r8d, DWORD PTR i$68493[rsp]
	lea	rdx, OFFSET FLAT:$SG68533
	mov	rcx, rax
	call	fprintf
; Line 283
	jmp	$LN21@initialize@2
$LN20@initialize@2:
; Line 294
	lea	r9, QWORD PTR status$[rsp]
	xor	r8d, r8d
	mov	rax, QWORD PTR ?devices@@3PEAPEAU_cl_device_id@@EA ; devices
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR ?context@@3PEAU_cl_context@@EA ; context
	call	clCreateCommandQueue
	mov	QWORD PTR ?command_queue@@3PEAU_cl_command_queue@@EA, rax ; command_queue
; Line 295
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN8@initialize@2
; Line 297
	lea	rcx, OFFSET FLAT:$SG68535
	call	printf
; Line 298
	mov	eax, 1
	jmp	$LN37@initialize@2
$LN8@initialize@2:
; Line 309
	mov	eax, DWORD PTR ?n_primitives@@3IA	; n_primitives
	imul	rax, 96					; 00000060H
	lea	rcx, QWORD PTR status$[rsp]
	mov	QWORD PTR [rsp+32], rcx
	xor	r9d, r9d
	mov	r8, rax
	mov	edx, 4
	mov	rcx, QWORD PTR ?context@@3PEAU_cl_context@@EA ; context
	call	clCreateBuffer
	mov	QWORD PTR ?primitive_buffer@@3PEAU_cl_mem@@EA, rax ; primitive_buffer
; Line 311
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN7@initialize@2
; Line 313
	mov	edx, DWORD PTR status$[rsp]
	lea	rcx, OFFSET FLAT:$SG68538
	call	printf
; Line 314
	mov	eax, 1
	jmp	$LN37@initialize@2
$LN7@initialize@2:
; Line 326
	mov	eax, DWORD PTR ?n_primitives@@3IA	; n_primitives
	imul	rax, 96					; 00000060H
	mov	QWORD PTR [rsp+64], 0
	mov	QWORD PTR [rsp+56], 0
	mov	DWORD PTR [rsp+48], 0
	mov	rcx, QWORD PTR ?primitive_list@@3PEAUPrimitive@@EA ; primitive_list
	mov	QWORD PTR [rsp+40], rcx
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	xor	r8d, r8d
	mov	rdx, QWORD PTR ?primitive_buffer@@3PEAU_cl_mem@@EA ; primitive_buffer
	mov	rcx, QWORD PTR ?command_queue@@3PEAU_cl_command_queue@@EA ; command_queue
	call	clEnqueueWriteBuffer
	mov	DWORD PTR status$[rsp], eax
; Line 328
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN6@initialize@2
; Line 330
	mov	edx, DWORD PTR status$[rsp]
	lea	rcx, OFFSET FLAT:$SG68541
	call	printf
; Line 331
	mov	eax, 1
	jmp	$LN37@initialize@2
$LN6@initialize@2:
; Line 339
	mov	eax, DWORD PTR width
	shl	rax, 2
	mov	ecx, DWORD PTR height
	imul	rax, rcx
	lea	rcx, QWORD PTR status$[rsp]
	mov	QWORD PTR [rsp+32], rcx
	xor	r9d, r9d
	mov	r8, rax
	mov	edx, 2
	mov	rcx, QWORD PTR ?context@@3PEAU_cl_context@@EA ; context
	call	clCreateBuffer
	mov	QWORD PTR ?pixel_buffer@@3PEAU_cl_mem@@EA, rax ; pixel_buffer
; Line 340
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN5@initialize@2
; Line 342
	lea	rcx, OFFSET FLAT:$SG68544
	call	printf
; Line 343
	mov	eax, 1
	jmp	$LN37@initialize@2
$LN5@initialize@2:
; Line 355
	mov	eax, DWORD PTR width
	shl	rax, 2
	mov	ecx, DWORD PTR height
	imul	rax, rcx
	mov	QWORD PTR [rsp+64], 0
	mov	QWORD PTR [rsp+56], 0
	mov	DWORD PTR [rsp+48], 0
	mov	rcx, QWORD PTR ?out_pixels@@3PEATcl_uchar4@@EA ; out_pixels
	mov	QWORD PTR [rsp+40], rcx
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	xor	r8d, r8d
	mov	rdx, QWORD PTR ?pixel_buffer@@3PEAU_cl_mem@@EA ; pixel_buffer
	mov	rcx, QWORD PTR ?command_queue@@3PEAU_cl_command_queue@@EA ; command_queue
	call	clEnqueueWriteBuffer
	mov	DWORD PTR status$[rsp], eax
; Line 357
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN4@initialize@2
; Line 359
	mov	edx, DWORD PTR status$[rsp]
	lea	rcx, OFFSET FLAT:$SG68547
	call	printf
; Line 360
	mov	eax, 1
	jmp	$LN37@initialize@2
$LN4@initialize@2:
; Line 367
	lea	rax, OFFSET FLAT:$SG68549
	mov	QWORD PTR filename$[rsp], rax
; Line 368
	mov	rcx, QWORD PTR filename$[rsp]
	call	?read_kernel@@YAPEADPEBD@Z		; read_kernel
	mov	QWORD PTR source$[rsp], rax
; Line 369
	mov	rcx, QWORD PTR source$[rsp]
	call	strlen
	mov	QWORD PTR sourceSize$[rsp], rax
; Line 376
	lea	rax, QWORD PTR status$[rsp]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, QWORD PTR sourceSize$[rsp]
	lea	r8, QWORD PTR source$[rsp]
	mov	edx, 1
	mov	rcx, QWORD PTR ?context@@3PEAU_cl_context@@EA ; context
	call	clCreateProgramWithSource
	mov	QWORD PTR ?program@@3PEAU_cl_program@@EA, rax ; program
; Line 377
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN3@initialize@2
; Line 381
	lea	rcx, OFFSET FLAT:$SG68553
	call	printf
; Line 382
	mov	eax, 1
	jmp	$LN37@initialize@2
$LN3@initialize@2:
; Line 386
	mov	QWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], 0
	lea	r9, OFFSET FLAT:$SG68554
	mov	r8, QWORD PTR ?devices@@3PEAPEAU_cl_device_id@@EA ; devices
	mov	edx, 1
	mov	rcx, QWORD PTR ?program@@3PEAU_cl_program@@EA ; program
	call	clBuildProgram
	mov	DWORD PTR status$[rsp], eax
; Line 387
	cmp	DWORD PTR status$[rsp], 0
	je	$LN2@initialize@2
; Line 389
	mov	edx, DWORD PTR status$[rsp]
	lea	rcx, OFFSET FLAT:$SG68556
	call	printf
; Line 392
	lea	rax, QWORD PTR len$68557[rsp]
	mov	QWORD PTR [rsp+40], rax
	mov	QWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8d, 4483				; 00001183H
	mov	rax, QWORD PTR ?devices@@3PEAPEAU_cl_device_id@@EA ; devices
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR ?program@@3PEAU_cl_program@@EA ; program
	call	clGetProgramBuildInfo
; Line 393
	mov	rdx, QWORD PTR len$68557[rsp]
	mov	ecx, 1
	call	calloc
	mov	QWORD PTR buffer$68558[rsp], rax
; Line 394
	mov	QWORD PTR [rsp+40], 0
	mov	rax, QWORD PTR buffer$68558[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR len$68557[rsp]
	mov	r8d, 4483				; 00001183H
	mov	rax, QWORD PTR ?devices@@3PEAPEAU_cl_device_id@@EA ; devices
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR ?program@@3PEAU_cl_program@@EA ; program
	call	clGetProgramBuildInfo
; Line 395
	mov	rdx, QWORD PTR buffer$68558[rsp]
	lea	rcx, OFFSET FLAT:$SG68560
	call	printf
; Line 396
	mov	eax, 1
	jmp	SHORT $LN37@initialize@2
$LN2@initialize@2:
; Line 400
	lea	r8, QWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG68561
	mov	rcx, QWORD PTR ?program@@3PEAU_cl_program@@EA ; program
	call	clCreateKernel
	mov	QWORD PTR ?raytracer_kernel@@3PEAU_cl_kernel@@EA, rax ; raytracer_kernel
; Line 401
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN1@initialize@2
; Line 403
	lea	rcx, OFFSET FLAT:$SG68563
	call	printf
; Line 404
	mov	eax, 1
	jmp	SHORT $LN37@initialize@2
$LN1@initialize@2:
; Line 407
	xor	eax, eax
$LN37@initialize@2:
$LN38@initialize@2:
; Line 408
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?initialize_openCL@@YAHXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 928				; 000003a0H
	pop	rdi
	ret	0
?initialize_openCL@@YAHXZ ENDP				; initialize_openCL
_TEXT	ENDS
EXTRN	fclose:PROC
EXTRN	fread:PROC
EXTRN	rewind:PROC
EXTRN	ftell:PROC
EXTRN	fseek:PROC
EXTRN	fopen:PROC
pdata	SEGMENT
$pdata$?read_kernel@@YAPEADPEBD@Z DD imagerel ?read_kernel@@YAPEADPEBD@Z
	DD	imagerel ?read_kernel@@YAPEADPEBD@Z+456
	DD	imagerel $unwind$?read_kernel@@YAPEADPEBD@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?read_kernel@@YAPEADPEBD@Z DD 021e01H
	DD	07006720aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
_TEXT	SEGMENT
file$ = 32
size$ = 40
src$ = 48
res$ = 56
file_name$ = 80
?read_kernel@@YAPEADPEBD@Z PROC				; read_kernel
; Line 37
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rdi, rsp
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]
; Line 39
	lea	rdx, OFFSET FLAT:$SG68433
	mov	rcx, QWORD PTR file_name$[rsp]
	call	fopen
	mov	QWORD PTR file$[rsp], rax
; Line 40
	cmp	QWORD PTR file$[rsp], 0
	jne	SHORT $LN5@read_kerne
; Line 41
	call	__iob_func
	add	rax, 96					; 00000060H
	mov	r8, QWORD PTR file_name$[rsp]
	lea	rdx, OFFSET FLAT:$SG68435
	mov	rcx, rax
	call	fprintf
; Line 42
	mov	ecx, -1
	call	exit
$LN5@read_kerne:
; Line 45
	mov	r8d, 2
	xor	edx, edx
	mov	rcx, QWORD PTR file$[rsp]
	call	fseek
	test	eax, eax
	je	SHORT $LN4@read_kerne
; Line 46
	call	__iob_func
	add	rax, 96					; 00000060H
	mov	r8, QWORD PTR file_name$[rsp]
	lea	rdx, OFFSET FLAT:$SG68437
	mov	rcx, rax
	call	fprintf
; Line 47
	mov	ecx, -1
	call	exit
$LN4@read_kerne:
; Line 50
	mov	rcx, QWORD PTR file$[rsp]
	call	ftell
	mov	DWORD PTR size$[rsp], eax
; Line 51
	cmp	DWORD PTR size$[rsp], 0
	jne	SHORT $LN3@read_kerne
; Line 52
	call	__iob_func
	add	rax, 96					; 00000060H
	mov	r8, QWORD PTR file_name$[rsp]
	lea	rdx, OFFSET FLAT:$SG68440
	mov	rcx, rax
	call	fprintf
; Line 53
	mov	ecx, -1
	call	exit
$LN3@read_kerne:
; Line 56
	mov	rcx, QWORD PTR file$[rsp]
	call	rewind
; Line 58
	movsxd	rax, DWORD PTR size$[rsp]
	inc	rax
	mov	rcx, rax
	call	malloc
	mov	QWORD PTR src$[rsp], rax
; Line 59
	cmp	QWORD PTR src$[rsp], 0
	jne	SHORT $LN2@read_kerne
; Line 60
	call	__iob_func
	add	rax, 96					; 00000060H
	mov	r8, QWORD PTR file_name$[rsp]
	lea	rdx, OFFSET FLAT:$SG68445
	mov	rcx, rax
	call	fprintf
; Line 61
	mov	ecx, -1
	call	exit
$LN2@read_kerne:
; Line 64
	call	__iob_func
	add	rax, 96					; 00000060H
	mov	r9d, DWORD PTR size$[rsp]
	mov	r8, QWORD PTR file_name$[rsp]
	lea	rdx, OFFSET FLAT:$SG68446
	mov	rcx, rax
	call	fprintf
; Line 65
	movsxd	rax, DWORD PTR size$[rsp]
	mov	r9, QWORD PTR file$[rsp]
	mov	r8, rax
	mov	edx, 1
	mov	rcx, QWORD PTR src$[rsp]
	call	fread
	mov	QWORD PTR res$[rsp], rax
; Line 66
	movsxd	rax, DWORD PTR size$[rsp]
	cmp	QWORD PTR res$[rsp], rax
	je	SHORT $LN1@read_kerne
; Line 67
	call	__iob_func
	add	rax, 96					; 00000060H
	mov	r9, QWORD PTR res$[rsp]
	mov	r8, QWORD PTR file_name$[rsp]
	lea	rdx, OFFSET FLAT:$SG68451
	mov	rcx, rax
	call	fprintf
; Line 68
	mov	ecx, -1
	call	exit
$LN1@read_kerne:
; Line 70
	movsxd	rax, DWORD PTR size$[rsp]
	mov	rcx, QWORD PTR src$[rsp]
	mov	BYTE PTR [rcx+rax], 0
; Line 72
	mov	rcx, QWORD PTR file$[rsp]
	call	fclose
; Line 74
	mov	rax, QWORD PTR src$[rsp]
$LN7@read_kerne:
; Line 75
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?read_kernel@@YAPEADPEBD@Z ENDP				; read_kernel
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?run_openCL_kernel@@YAHXZ			; run_openCL_kernel
EXTRN	clEnqueueReadBuffer:PROC
EXTRN	clReleaseEvent:PROC
EXTRN	clWaitForEvents:PROC
EXTRN	clEnqueueNDRangeKernel:PROC
EXTRN	clSetKernelArg:PROC
pdata	SEGMENT
$pdata$?run_openCL_kernel@@YAHXZ DD imagerel $LN21
	DD	imagerel $LN21+1290
	DD	imagerel $unwind$?run_openCL_kernel@@YAHXZ
pdata	ENDS
xdata	SEGMENT
$unwind$?run_openCL_kernel@@YAHXZ DD 032a19H
	DD	02a0109H
	DD	07002H
	DD	imagerel __GSHandlerCheck
	DD	0140H
xdata	ENDS
CONST	SEGMENT
	ORG $+576
?run_openCL_kernel@@YAHXZ$rtcName$0 DB 06dH		; run_openCL_kernel
	DB	061H
	DB	078H
	DB	044H
	DB	069H
	DB	06dH
	DB	073H
	DB	00H
?run_openCL_kernel@@YAHXZ$rtcName$1 DB 065H		; run_openCL_kernel
	DB	076H
	DB	065H
	DB	06eH
	DB	074H
	DB	073H
	DB	00H
	ORG $+1
?run_openCL_kernel@@YAHXZ$rtcName$2 DB 067H		; run_openCL_kernel
	DB	06cH
	DB	06fH
	DB	062H
	DB	061H
	DB	06cH
	DB	054H
	DB	068H
	DB	072H
	DB	065H
	DB	061H
	DB	064H
	DB	073H
	DB	00H
	ORG $+2
?run_openCL_kernel@@YAHXZ$rtcName$3 DB 06cH		; run_openCL_kernel
	DB	06fH
	DB	063H
	DB	061H
	DB	06cH
	DB	054H
	DB	068H
	DB	072H
	DB	065H
	DB	061H
	DB	064H
	DB	073H
	DB	00H
	ORG $+3
?run_openCL_kernel@@YAHXZ$rtcName$4 DB 06dH		; run_openCL_kernel
	DB	061H
	DB	078H
	DB	057H
	DB	06fH
	DB	072H
	DB	06bH
	DB	047H
	DB	072H
	DB	06fH
	DB	075H
	DB	070H
	DB	053H
	DB	069H
	DB	07aH
	DB	065H
	DB	00H
	ORG $+7
?run_openCL_kernel@@YAHXZ$rtcName$5 DB 06dH		; run_openCL_kernel
	DB	061H
	DB	078H
	DB	057H
	DB	06fH
	DB	072H
	DB	06bH
	DB	049H
	DB	074H
	DB	065H
	DB	06dH
	DB	053H
	DB	069H
	DB	07aH
	DB	065H
	DB	073H
	DB	00H
	ORG $+7
?run_openCL_kernel@@YAHXZ$rtcVarDesc DD 0118H		; run_openCL_kernel
	DD	018H
	DQ	FLAT:?run_openCL_kernel@@YAHXZ$rtcName$5
	DD	0f8H
	DD	08H
	DQ	FLAT:?run_openCL_kernel@@YAHXZ$rtcName$4
	DD	0d8H
	DD	08H
	DQ	FLAT:?run_openCL_kernel@@YAHXZ$rtcName$3
	DD	0b8H
	DD	08H
	DQ	FLAT:?run_openCL_kernel@@YAHXZ$rtcName$2
	DD	088H
	DD	010H
	DQ	FLAT:?run_openCL_kernel@@YAHXZ$rtcName$1
	DD	064H
	DD	04H
	DQ	FLAT:?run_openCL_kernel@@YAHXZ$rtcName$0
	ORG $+288
?run_openCL_kernel@@YAHXZ$rtcFrameData DD 06H		; run_openCL_kernel
	DD	00H
	DQ	FLAT:?run_openCL_kernel@@YAHXZ$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
_TEXT	SEGMENT
status$ = 80
maxDims$ = 100
events$ = 136
globalThreads$ = 184
localThreads$ = 216
maxWorkGroupSize$ = 248
maxWorkItemSizes$ = 280
__$ArrayPad$ = 320
?run_openCL_kernel@@YAHXZ PROC				; run_openCL_kernel
; Line 411
$LN21:
	push	rdi
	sub	rsp, 336				; 00000150H
	mov	rdi, rsp
	mov	ecx, 84					; 00000054H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 430
	mov	QWORD PTR [rsp+32], 0
	lea	r9, QWORD PTR maxWorkGroupSize$[rsp]
	mov	r8d, 8
	mov	edx, 4100				; 00001004H
	mov	rax, QWORD PTR ?devices@@3PEAPEAU_cl_device_id@@EA ; devices
	mov	rcx, QWORD PTR [rax]
	call	clGetDeviceInfo
	mov	DWORD PTR status$[rsp], eax
; Line 431
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN18@run_openCL
; Line 433
	lea	rcx, OFFSET FLAT:$SG68577
	call	printf
; Line 434
	mov	eax, 1
	jmp	$LN19@run_openCL
$LN18@run_openCL:
; Line 442
	mov	QWORD PTR [rsp+32], 0
	lea	r9, QWORD PTR maxDims$[rsp]
	mov	r8d, 4
	mov	edx, 4099				; 00001003H
	mov	rax, QWORD PTR ?devices@@3PEAPEAU_cl_device_id@@EA ; devices
	mov	rcx, QWORD PTR [rax]
	call	clGetDeviceInfo
	mov	DWORD PTR status$[rsp], eax
; Line 443
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN17@run_openCL
; Line 445
	lea	rcx, OFFSET FLAT:$SG68581
	call	printf
; Line 446
	mov	eax, 1
	jmp	$LN19@run_openCL
$LN17@run_openCL:
; Line 454
	mov	eax, DWORD PTR maxDims$[rsp]
	shl	rax, 3
	mov	QWORD PTR [rsp+32], 0
	lea	r9, QWORD PTR maxWorkItemSizes$[rsp]
	mov	r8, rax
	mov	edx, 4101				; 00001005H
	mov	rax, QWORD PTR ?devices@@3PEAPEAU_cl_device_id@@EA ; devices
	mov	rcx, QWORD PTR [rax]
	call	clGetDeviceInfo
	mov	DWORD PTR status$[rsp], eax
; Line 455
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN16@run_openCL
; Line 457
	lea	rcx, OFFSET FLAT:$SG68585
	call	printf
; Line 458
	mov	eax, 1
	jmp	$LN19@run_openCL
$LN16@run_openCL:
; Line 461
	mov	eax, DWORD PTR width
	imul	eax, DWORD PTR height
	mov	eax, eax
	mov	QWORD PTR globalThreads$[rsp], rax
; Line 463
	xor	edx, edx
	mov	rax, QWORD PTR globalThreads$[rsp]
	mov	ecx, 64					; 00000040H
	div	rcx
	mov	rax, rdx
	test	rax, rax
	je	SHORT $LN15@run_openCL
; Line 464
	xor	edx, edx
	mov	rax, QWORD PTR globalThreads$[rsp]
	mov	ecx, 64					; 00000040H
	div	rcx
	inc	rax
	imul	rax, 64					; 00000040H
	mov	QWORD PTR globalThreads$[rsp], rax
$LN15@run_openCL:
; Line 466
	mov	QWORD PTR localThreads$[rsp], 64	; 00000040H
; Line 469
	mov	rax, QWORD PTR maxWorkGroupSize$[rsp]
	cmp	QWORD PTR localThreads$[rsp], rax
	ja	SHORT $LN13@run_openCL
	mov	rax, QWORD PTR maxWorkItemSizes$[rsp]
	cmp	QWORD PTR localThreads$[rsp], rax
	jbe	SHORT $LN14@run_openCL
$LN13@run_openCL:
; Line 471
	lea	rcx, OFFSET FLAT:$SG68589
	call	printf
; Line 472
	mov	eax, 1
	jmp	$LN19@run_openCL
$LN14@run_openCL:
; Line 481
	lea	r9, OFFSET FLAT:?pixel_buffer@@3PEAU_cl_mem@@EA ; pixel_buffer
	mov	r8d, 8
	xor	edx, edx
	mov	rcx, QWORD PTR ?raytracer_kernel@@3PEAU_cl_kernel@@EA ; raytracer_kernel
	call	clSetKernelArg
	mov	DWORD PTR status$[rsp], eax
; Line 482
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN12@run_openCL
; Line 484
	lea	rcx, OFFSET FLAT:$SG68593
	call	printf
; Line 485
	mov	eax, 1
	jmp	$LN19@run_openCL
$LN12@run_openCL:
; Line 493
	lea	r9, OFFSET FLAT:width
	mov	r8d, 4
	mov	edx, 1
	mov	rcx, QWORD PTR ?raytracer_kernel@@3PEAU_cl_kernel@@EA ; raytracer_kernel
	call	clSetKernelArg
	mov	DWORD PTR status$[rsp], eax
; Line 494
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN11@run_openCL
; Line 496
	lea	rcx, OFFSET FLAT:$SG68597
	call	printf
; Line 497
	mov	eax, 1
	jmp	$LN19@run_openCL
$LN11@run_openCL:
; Line 505
	lea	r9, OFFSET FLAT:height
	mov	r8d, 4
	mov	edx, 2
	mov	rcx, QWORD PTR ?raytracer_kernel@@3PEAU_cl_kernel@@EA ; raytracer_kernel
	call	clSetKernelArg
	mov	DWORD PTR status$[rsp], eax
; Line 506
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN10@run_openCL
; Line 508
	lea	rcx, OFFSET FLAT:$SG68601
	call	printf
; Line 509
	mov	eax, 1
	jmp	$LN19@run_openCL
$LN10@run_openCL:
; Line 517
	lea	r9, OFFSET FLAT:?primitive_buffer@@3PEAU_cl_mem@@EA ; primitive_buffer
	mov	r8d, 8
	mov	edx, 3
	mov	rcx, QWORD PTR ?raytracer_kernel@@3PEAU_cl_kernel@@EA ; raytracer_kernel
	call	clSetKernelArg
	mov	DWORD PTR status$[rsp], eax
; Line 518
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN9@run_openCL
; Line 520
	lea	rcx, OFFSET FLAT:$SG68605
	call	printf
; Line 521
	mov	eax, 1
	jmp	$LN19@run_openCL
$LN9@run_openCL:
; Line 529
	lea	r9, OFFSET FLAT:?n_primitives@@3IA	; n_primitives
	mov	r8d, 4
	mov	edx, 4
	mov	rcx, QWORD PTR ?raytracer_kernel@@3PEAU_cl_kernel@@EA ; raytracer_kernel
	call	clSetKernelArg
	mov	DWORD PTR status$[rsp], eax
; Line 530
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN8@run_openCL
; Line 532
	mov	edx, DWORD PTR status$[rsp]
	lea	rcx, OFFSET FLAT:$SG68609
	call	printf
; Line 533
	mov	eax, 1
	jmp	$LN19@run_openCL
$LN8@run_openCL:
; Line 541
	mov	eax, DWORD PTR ?n_primitives@@3IA	; n_primitives
	imul	rax, 96					; 00000060H
	xor	r9d, r9d
	mov	r8, rax
	mov	edx, 5
	mov	rcx, QWORD PTR ?raytracer_kernel@@3PEAU_cl_kernel@@EA ; raytracer_kernel
	call	clSetKernelArg
	mov	DWORD PTR status$[rsp], eax
; Line 543
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN7@run_openCL
; Line 545
	mov	edx, DWORD PTR status$[rsp]
	lea	rcx, OFFSET FLAT:$SG68612
	call	printf
; Line 546
	mov	eax, 1
	jmp	$LN19@run_openCL
$LN7@run_openCL:
; Line 560
	lea	rax, QWORD PTR events$[rsp]
	mov	QWORD PTR [rsp+64], rax
	mov	QWORD PTR [rsp+56], 0
	mov	DWORD PTR [rsp+48], 0
	lea	rax, QWORD PTR localThreads$[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR globalThreads$[rsp]
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 1
	mov	rdx, QWORD PTR ?raytracer_kernel@@3PEAU_cl_kernel@@EA ; raytracer_kernel
	mov	rcx, QWORD PTR ?command_queue@@3PEAU_cl_command_queue@@EA ; command_queue
	call	clEnqueueNDRangeKernel
	mov	DWORD PTR status$[rsp], eax
; Line 561
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN6@run_openCL
; Line 565
	lea	rcx, OFFSET FLAT:$SG68614
	call	printf
; Line 566
	mov	eax, 1
	jmp	$LN19@run_openCL
$LN6@run_openCL:
; Line 571
	lea	rdx, QWORD PTR events$[rsp]
	mov	ecx, 1
	call	clWaitForEvents
	mov	DWORD PTR status$[rsp], eax
; Line 572
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN5@run_openCL
; Line 576
	lea	rcx, OFFSET FLAT:$SG68616
	call	printf
; Line 577
	mov	eax, 1
	jmp	$LN19@run_openCL
$LN5@run_openCL:
; Line 580
	mov	rcx, QWORD PTR events$[rsp]
	call	clReleaseEvent
	mov	DWORD PTR status$[rsp], eax
; Line 581
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN4@run_openCL
; Line 585
	lea	rcx, OFFSET FLAT:$SG68618
	call	printf
; Line 586
	mov	eax, 1
	jmp	$LN19@run_openCL
$LN4@run_openCL:
; Line 599
	lea	rax, QWORD PTR events$[rsp+8]
	mov	ecx, DWORD PTR width
	imul	ecx, DWORD PTR height
	mov	ecx, ecx
	shl	rcx, 2
	mov	QWORD PTR [rsp+64], rax
	mov	QWORD PTR [rsp+56], 0
	mov	DWORD PTR [rsp+48], 0
	mov	rax, QWORD PTR ?out_pixels@@3PEATcl_uchar4@@EA ; out_pixels
	mov	QWORD PTR [rsp+40], rax
	mov	QWORD PTR [rsp+32], rcx
	xor	r9d, r9d
	mov	r8d, 1
	mov	rdx, QWORD PTR ?pixel_buffer@@3PEAU_cl_mem@@EA ; pixel_buffer
	mov	rcx, QWORD PTR ?command_queue@@3PEAU_cl_command_queue@@EA ; command_queue
	call	clEnqueueReadBuffer
	mov	DWORD PTR status$[rsp], eax
; Line 601
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN3@run_openCL
; Line 605
	lea	rcx, OFFSET FLAT:$SG68621
	call	printf
; Line 607
	mov	eax, 1
	jmp	SHORT $LN19@run_openCL
$LN3@run_openCL:
; Line 611
	lea	rax, QWORD PTR events$[rsp+8]
	mov	rdx, rax
	mov	ecx, 1
	call	clWaitForEvents
	mov	DWORD PTR status$[rsp], eax
; Line 612
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN2@run_openCL
; Line 616
	lea	rcx, OFFSET FLAT:$SG68623
	call	printf
; Line 617
	mov	eax, 1
	jmp	SHORT $LN19@run_openCL
$LN2@run_openCL:
; Line 620
	mov	rcx, QWORD PTR events$[rsp+8]
	call	clReleaseEvent
	mov	DWORD PTR status$[rsp], eax
; Line 621
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN1@run_openCL
; Line 625
	lea	rcx, OFFSET FLAT:$SG68625
	call	printf
; Line 626
	mov	eax, 1
	jmp	SHORT $LN19@run_openCL
$LN1@run_openCL:
; Line 629
	xor	eax, eax
$LN19@run_openCL:
; Line 630
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?run_openCL_kernel@@YAHXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 336				; 00000150H
	pop	rdi
	ret	0
?run_openCL_kernel@@YAHXZ ENDP				; run_openCL_kernel
_TEXT	ENDS
PUBLIC	?cleanup_openCL@@YAHXZ				; cleanup_openCL
EXTRN	clReleaseContext:PROC
EXTRN	clReleaseCommandQueue:PROC
EXTRN	clReleaseMemObject:PROC
EXTRN	clReleaseProgram:PROC
EXTRN	clReleaseKernel:PROC
pdata	SEGMENT
$pdata$?cleanup_openCL@@YAHXZ DD imagerel $LN9
	DD	imagerel $LN9+290
	DD	imagerel $unwind$?cleanup_openCL@@YAHXZ
pdata	ENDS
xdata	SEGMENT
$unwind$?cleanup_openCL@@YAHXZ DD 021501H
	DD	070025206H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
_TEXT	SEGMENT
status$ = 32
?cleanup_openCL@@YAHXZ PROC				; cleanup_openCL
; Line 633
$LN9:
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 636
	mov	rcx, QWORD PTR ?raytracer_kernel@@3PEAU_cl_kernel@@EA ; raytracer_kernel
	call	clReleaseKernel
	mov	DWORD PTR status$[rsp], eax
; Line 637
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN6@cleanup_op
; Line 639
	lea	rcx, OFFSET FLAT:$SG68631
	call	printf
; Line 640
	mov	eax, 1
	jmp	$LN7@cleanup_op
$LN6@cleanup_op:
; Line 642
	mov	rcx, QWORD PTR ?program@@3PEAU_cl_program@@EA ; program
	call	clReleaseProgram
	mov	DWORD PTR status$[rsp], eax
; Line 643
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN5@cleanup_op
; Line 645
	lea	rcx, OFFSET FLAT:$SG68633
	call	printf
; Line 646
	mov	eax, 1
	jmp	$LN7@cleanup_op
$LN5@cleanup_op:
; Line 648
	mov	rcx, QWORD PTR ?primitive_buffer@@3PEAU_cl_mem@@EA ; primitive_buffer
	call	clReleaseMemObject
	mov	DWORD PTR status$[rsp], eax
; Line 649
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN4@cleanup_op
; Line 651
	lea	rcx, OFFSET FLAT:$SG68635
	call	printf
; Line 652
	mov	eax, 1
	jmp	$LN7@cleanup_op
$LN4@cleanup_op:
; Line 654
	mov	rcx, QWORD PTR ?pixel_buffer@@3PEAU_cl_mem@@EA ; pixel_buffer
	call	clReleaseMemObject
	mov	DWORD PTR status$[rsp], eax
; Line 655
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN3@cleanup_op
; Line 657
	lea	rcx, OFFSET FLAT:$SG68637
	call	printf
; Line 658
	mov	eax, 1
	jmp	SHORT $LN7@cleanup_op
$LN3@cleanup_op:
; Line 660
	mov	rcx, QWORD PTR ?command_queue@@3PEAU_cl_command_queue@@EA ; command_queue
	call	clReleaseCommandQueue
	mov	DWORD PTR status$[rsp], eax
; Line 661
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN2@cleanup_op
; Line 663
	lea	rcx, OFFSET FLAT:$SG68639
	call	printf
; Line 664
	mov	eax, 1
	jmp	SHORT $LN7@cleanup_op
$LN2@cleanup_op:
; Line 666
	mov	rcx, QWORD PTR ?context@@3PEAU_cl_context@@EA ; context
	call	clReleaseContext
	mov	DWORD PTR status$[rsp], eax
; Line 667
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN1@cleanup_op
; Line 669
	lea	rcx, OFFSET FLAT:$SG68641
	call	printf
; Line 670
	mov	eax, 1
	jmp	SHORT $LN7@cleanup_op
$LN1@cleanup_op:
; Line 673
	xor	eax, eax
$LN7@cleanup_op:
; Line 674
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?cleanup_openCL@@YAHXZ ENDP				; cleanup_openCL
_TEXT	ENDS
PUBLIC	?cleanup_host@@YAXXZ				; cleanup_host
EXTRN	free:PROC
pdata	SEGMENT
$pdata$?cleanup_host@@YAXXZ DD imagerel $LN6
	DD	imagerel $LN6+126
	DD	imagerel $unwind$?cleanup_host@@YAXXZ
pdata	ENDS
xdata	SEGMENT
$unwind$?cleanup_host@@YAXXZ DD 021501H
	DD	070023206H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
_TEXT	SEGMENT
?cleanup_host@@YAXXZ PROC				; cleanup_host
; Line 677
$LN6:
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 678
	cmp	QWORD PTR ?primitive_list@@3PEAUPrimitive@@EA, 0 ; primitive_list
	je	SHORT $LN3@cleanup_ho
; Line 680
	mov	rcx, QWORD PTR ?primitive_list@@3PEAUPrimitive@@EA ; primitive_list
	call	free
; Line 681
	mov	QWORD PTR ?primitive_list@@3PEAUPrimitive@@EA, 0 ; primitive_list
$LN3@cleanup_ho:
; Line 683
	cmp	QWORD PTR ?out_pixels@@3PEATcl_uchar4@@EA, 0 ; out_pixels
	je	SHORT $LN2@cleanup_ho
; Line 685
	mov	rcx, QWORD PTR ?out_pixels@@3PEATcl_uchar4@@EA ; out_pixels
	call	free
; Line 686
	mov	QWORD PTR ?out_pixels@@3PEATcl_uchar4@@EA, 0 ; out_pixels
$LN2@cleanup_ho:
; Line 688
	cmp	QWORD PTR ?devices@@3PEAPEAU_cl_device_id@@EA, 0 ; devices
	je	SHORT $LN1@cleanup_ho
; Line 690
	mov	rcx, QWORD PTR ?devices@@3PEAPEAU_cl_device_id@@EA ; devices
	call	free
; Line 691
	mov	QWORD PTR ?devices@@3PEAPEAU_cl_device_id@@EA, 0 ; devices
$LN1@cleanup_ho:
; Line 693
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?cleanup_host@@YAXXZ ENDP				; cleanup_host
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	main
EXTRN	?write_bmp_file@@YAHPEATcl_uchar4@@HHPEAD@Z:PROC ; write_bmp_file
EXTRN	__imp_GetTickCount:PROC
pdata	SEGMENT
$pdata$main DD	imagerel $LN7
	DD	imagerel $LN7+506
	DD	imagerel $unwind$main
pdata	ENDS
xdata	SEGMENT
$unwind$main DD	033419H
	DD	0700be20fH
	DD	0600aH
	DD	imagerel __GSHandlerCheck
	DD	068H
xdata	ENDS
CONST	SEGMENT
main$rtcName$0 DB 074H
	DB	00H
	ORG $+14
main$rtcVarDesc DD 038H
	DD	0aH
	DQ	FLAT:main$rtcName$0
	ORG $+48
main$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:main$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
_TEXT	SEGMENT
fstart$ = 32
ftime$ = 36
t$ = 56
secs$ = 84
mins$ = 88
__$ArrayPad$ = 104
argc$ = 144
argv$ = 152
main	PROC
; Line 696
$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	DWORD PTR [rsp+8], ecx
	push	rsi
	push	rdi
	sub	rsp, 120				; 00000078H
	mov	rdi, rsp
	mov	ecx, 30
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+144]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 698
	call	?initialize_host@@YAHXZ			; initialize_host
	cmp	eax, 1
	jne	SHORT $LN4@main
; Line 699
	mov	eax, 1
	jmp	$LN5@main
$LN4@main:
; Line 702
	call	?initialize_openCL@@YAHXZ		; initialize_openCL
	cmp	eax, 1
	jne	SHORT $LN3@main
; Line 703
	mov	eax, 1
	jmp	$LN5@main
$LN3@main:
; Line 706
	call	QWORD PTR __imp_GetTickCount
	mov	DWORD PTR fstart$[rsp], eax
; Line 710
	call	?run_openCL_kernel@@YAHXZ		; run_openCL_kernel
	cmp	eax, 1
	jne	SHORT $LN2@main
; Line 711
	mov	eax, 1
	jmp	$LN5@main
$LN2@main:
; Line 714
	call	QWORD PTR __imp_GetTickCount
	sub	eax, DWORD PTR fstart$[rsp]
	mov	DWORD PTR ftime$[rsp], eax
; Line 715
	lea	rax, QWORD PTR t$[rsp]
	lea	rcx, OFFSET FLAT:$SG68658
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 10
	rep movsb
; Line 716
	mov	eax, DWORD PTR ftime$[rsp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	cdq
	mov	ecx, 10
	idiv	ecx
	mov	eax, edx
	add	eax, 48					; 00000030H
	mov	BYTE PTR t$[rsp+6], al
; Line 717
	mov	eax, DWORD PTR ftime$[rsp]
	cdq
	mov	ecx, 10
	idiv	ecx
	cdq
	mov	ecx, 10
	idiv	ecx
	mov	eax, edx
	add	eax, 48					; 00000030H
	mov	BYTE PTR t$[rsp+7], al
; Line 718
	mov	eax, DWORD PTR ftime$[rsp]
	cdq
	mov	ecx, 10
	idiv	ecx
	mov	eax, edx
	add	eax, 48					; 00000030H
	mov	BYTE PTR t$[rsp+8], al
; Line 719
	mov	eax, DWORD PTR ftime$[rsp]
	cdq
	mov	ecx, 1000				; 000003e8H
	idiv	ecx
	cdq
	mov	ecx, 60					; 0000003cH
	idiv	ecx
	mov	eax, edx
	mov	DWORD PTR secs$[rsp], eax
; Line 720
	mov	eax, DWORD PTR ftime$[rsp]
	cdq
	mov	ecx, 60000				; 0000ea60H
	idiv	ecx
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	eax, edx
	mov	DWORD PTR mins$[rsp], eax
; Line 721
	mov	eax, DWORD PTR secs$[rsp]
	cdq
	mov	ecx, 10
	idiv	ecx
	cdq
	mov	ecx, 10
	idiv	ecx
	mov	eax, edx
	add	eax, 48					; 00000030H
	mov	BYTE PTR t$[rsp+3], al
; Line 722
	mov	eax, DWORD PTR secs$[rsp]
	cdq
	mov	ecx, 10
	idiv	ecx
	mov	eax, edx
	add	eax, 48					; 00000030H
	mov	BYTE PTR t$[rsp+4], al
; Line 723
	mov	eax, DWORD PTR mins$[rsp]
	cdq
	mov	ecx, 10
	idiv	ecx
	mov	eax, edx
	add	eax, 48					; 00000030H
	mov	BYTE PTR t$[rsp+1], al
; Line 724
	mov	eax, DWORD PTR mins$[rsp]
	cdq
	mov	ecx, 10
	idiv	ecx
	cdq
	mov	ecx, 10
	idiv	ecx
	mov	eax, edx
	add	eax, 48					; 00000030H
	mov	BYTE PTR t$[rsp], al
; Line 725
	lea	rdx, QWORD PTR t$[rsp]
	lea	rcx, OFFSET FLAT:$SG68661
	call	printf
; Line 729
	call	?cleanup_openCL@@YAHXZ			; cleanup_openCL
	cmp	eax, 1
	jne	SHORT $LN1@main
; Line 730
	mov	eax, 1
	jmp	SHORT $LN5@main
$LN1@main:
; Line 732
	lea	r9, OFFSET FLAT:$SG68663
	mov	r8d, DWORD PTR height
	mov	edx, DWORD PTR width
	mov	rcx, QWORD PTR ?out_pixels@@3PEATcl_uchar4@@EA ; out_pixels
	call	?write_bmp_file@@YAHPEATcl_uchar4@@HHPEAD@Z ; write_bmp_file
; Line 735
	call	?cleanup_host@@YAXXZ			; cleanup_host
; Line 741
	xor	eax, eax
$LN5@main:
; Line 742
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:main$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 120				; 00000078H
	pop	rdi
	pop	rsi
	ret	0
main	ENDP
_TEXT	ENDS
END

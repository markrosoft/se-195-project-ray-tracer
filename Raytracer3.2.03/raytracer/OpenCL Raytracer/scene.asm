; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

include listing.inc

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	__$ArrayPad$
PUBLIC	?create_material@@YA?AUMaterial@@MMMMMMMM@Z	; create_material
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
EXTRN	__security_check_cookie:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	_RTC_InitBase:PROC
pdata	SEGMENT
$pdata$?create_material@@YA?AUMaterial@@MMMMMMMM@Z DD imagerel $LN3
	DD	imagerel $LN3+259
	DD	imagerel $unwind$?create_material@@YA?AUMaterial@@MMMMMMMM@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?create_material@@YA?AUMaterial@@MMMMMMMM@Z DD 034319H
	DD	07019e21dH
	DD	06018H
	DD	imagerel __GSHandlerCheck
	DD	060H
xdata	ENDS
CONST	SEGMENT
?create_material@@YA?AUMaterial@@MMMMMMMM@Z$rtcName$0 DB 06dH ; create_material
	DB	00H
	ORG $+14
?create_material@@YA?AUMaterial@@MMMMMMMM@Z$rtcVarDesc DD 028H ; create_material
	DD	028H
	DQ	FLAT:?create_material@@YA?AUMaterial@@MMMMMMMM@Z$rtcName$0
	ORG $+48
?create_material@@YA?AUMaterial@@MMMMMMMM@Z$rtcFrameData DD 01H ; create_material
	DD	00H
	DQ	FLAT:?create_material@@YA?AUMaterial@@MMMMMMMM@Z$rtcVarDesc
CONST	ENDS
;	COMDAT rtc$TMZ
; File c:\users\mark\documents\devmaster_raytracing\raytracer3.2.02\raytracer\opencl raytracer\scene.c
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
m$ = 40
__$ArrayPad$ = 96
$T6581 = 144
r$ = 152
g$ = 160
b$ = 168
refl$ = 176
refr$ = 184
refr_index$ = 192
diff$ = 200
spec$ = 208
?create_material@@YA?AUMaterial@@MMMMMMMM@Z PROC	; create_material
; Line 7
$LN3:
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 120				; 00000078H
	mov	rdi, rsp
	mov	ecx, 30
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+144]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 9
	movss	xmm0, DWORD PTR r$[rsp]
	movss	DWORD PTR m$[rsp], xmm0
; Line 10
	movss	xmm0, DWORD PTR g$[rsp]
	movss	DWORD PTR m$[rsp+4], xmm0
; Line 11
	movss	xmm0, DWORD PTR b$[rsp]
	movss	DWORD PTR m$[rsp+8], xmm0
; Line 12
	movss	xmm0, DWORD PTR refl$[rsp]
	movss	DWORD PTR m$[rsp+16], xmm0
; Line 13
	movss	xmm0, DWORD PTR diff$[rsp]
	movss	DWORD PTR m$[rsp+20], xmm0
; Line 14
	movss	xmm0, DWORD PTR refr$[rsp]
	movss	DWORD PTR m$[rsp+24], xmm0
; Line 15
	movss	xmm0, DWORD PTR refr_index$[rsp]
	movss	DWORD PTR m$[rsp+28], xmm0
; Line 16
	movss	xmm0, DWORD PTR spec$[rsp]
	movss	DWORD PTR m$[rsp+32], xmm0
; Line 17
	lea	rax, QWORD PTR m$[rsp]
	mov	rdi, QWORD PTR $T6581[rsp]
	mov	rsi, rax
	mov	ecx, 40					; 00000028H
	rep movsb
	mov	rax, QWORD PTR $T6581[rsp]
; Line 18
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?create_material@@YA?AUMaterial@@MMMMMMMM@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 120				; 00000078H
	pop	rdi
	pop	rsi
	ret	0
?create_material@@YA?AUMaterial@@MMMMMMMM@Z ENDP	; create_material
_TEXT	ENDS
PUBLIC	$T6602
PUBLIC	__$ArrayPad$
PUBLIC	?create_plane@@YA?AUPrimitive@@UMaterial@@IMMMM@Z ; create_plane
pdata	SEGMENT
$pdata$?create_plane@@YA?AUPrimitive@@UMaterial@@IMMMM@Z DD imagerel $LN3
	DD	imagerel $LN3+283
	DD	imagerel $unwind$?create_plane@@YA?AUPrimitive@@UMaterial@@IMMMM@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?create_plane@@YA?AUPrimitive@@UMaterial@@IMMMM@Z DD 044719H
	DD	01b011eH
	DD	060167017H
	DD	imagerel __GSHandlerCheck
	DD	0c8H
xdata	ENDS
CONST	SEGMENT
?create_plane@@YA?AUPrimitive@@UMaterial@@IMMMM@Z$rtcName$0 DB 070H ; create_plane
	DB	00H
	ORG $+14
?create_plane@@YA?AUPrimitive@@UMaterial@@IMMMM@Z$rtcVarDesc DD 030H ; create_plane
	DD	060H
	DQ	FLAT:?create_plane@@YA?AUPrimitive@@UMaterial@@IMMMM@Z$rtcName$0
	ORG $+48
?create_plane@@YA?AUPrimitive@@UMaterial@@IMMMM@Z$rtcFrameData DD 01H ; create_plane
	DD	00H
	DQ	FLAT:?create_plane@@YA?AUPrimitive@@UMaterial@@IMMMM@Z$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
_TEXT	SEGMENT
p$ = 48
$T6602 = 160
__$ArrayPad$ = 200
$T6601 = 240
m$ = 248
is_light$ = 256
normal_x$ = 264
normal_y$ = 272
normal_z$ = 280
depth$ = 288
?create_plane@@YA?AUPrimitive@@UMaterial@@IMMMM@Z PROC	; create_plane
; Line 21
$LN3:
	movss	DWORD PTR [rsp+32], xmm3
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 216				; 000000d8H
	mov	rdi, rsp
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+240]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 23
	mov	DWORD PTR p$[rsp+40], 0
; Line 24
	lea	rax, QWORD PTR $T6602[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR m$[rsp]
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR p$[rsp]
	lea	rcx, QWORD PTR $T6602[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
; Line 25
	mov	eax, DWORD PTR is_light$[rsp]
	mov	DWORD PTR p$[rsp+44], eax
; Line 26
	movss	xmm0, DWORD PTR normal_x$[rsp]
	movss	DWORD PTR p$[rsp+48], xmm0
; Line 27
	movss	xmm0, DWORD PTR normal_y$[rsp]
	movss	DWORD PTR p$[rsp+52], xmm0
; Line 28
	movss	xmm0, DWORD PTR normal_z$[rsp]
	movss	DWORD PTR p$[rsp+56], xmm0
; Line 29
	movss	xmm0, DWORD PTR depth$[rsp]
	movss	DWORD PTR p$[rsp+80], xmm0
; Line 30
	lea	rax, QWORD PTR p$[rsp]
	mov	rdi, QWORD PTR $T6601[rsp]
	mov	rsi, rax
	mov	ecx, 96					; 00000060H
	rep movsb
	mov	rax, QWORD PTR $T6601[rsp]
; Line 31
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?create_plane@@YA?AUPrimitive@@UMaterial@@IMMMM@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 216				; 000000d8H
	pop	rdi
	pop	rsi
	ret	0
?create_plane@@YA?AUPrimitive@@UMaterial@@IMMMM@Z ENDP	; create_plane
_TEXT	ENDS
PUBLIC	__real@3f800000
PUBLIC	$T6612
PUBLIC	__$ArrayPad$
PUBLIC	?create_sphere@@YA?AUPrimitive@@UMaterial@@IMMMM@Z ; create_sphere
pdata	SEGMENT
$pdata$?create_sphere@@YA?AUPrimitive@@UMaterial@@IMMMM@Z DD imagerel $LN3
	DD	imagerel $LN3+336
	DD	imagerel $unwind$?create_sphere@@YA?AUPrimitive@@UMaterial@@IMMMM@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?create_sphere@@YA?AUPrimitive@@UMaterial@@IMMMM@Z DD 044719H
	DD	01b011eH
	DD	060167017H
	DD	imagerel __GSHandlerCheck
	DD	0c8H
xdata	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
CONST	SEGMENT
?create_sphere@@YA?AUPrimitive@@UMaterial@@IMMMM@Z$rtcName$0 DB 070H ; create_sphere
	DB	00H
	ORG $+14
?create_sphere@@YA?AUPrimitive@@UMaterial@@IMMMM@Z$rtcVarDesc DD 030H ; create_sphere
	DD	060H
	DQ	FLAT:?create_sphere@@YA?AUPrimitive@@UMaterial@@IMMMM@Z$rtcName$0
	ORG $+48
?create_sphere@@YA?AUPrimitive@@UMaterial@@IMMMM@Z$rtcFrameData DD 01H ; create_sphere
	DD	00H
	DQ	FLAT:?create_sphere@@YA?AUPrimitive@@UMaterial@@IMMMM@Z$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
_TEXT	SEGMENT
p$ = 48
$T6612 = 160
__$ArrayPad$ = 200
$T6611 = 240
m$ = 248
is_light$ = 256
center_x$ = 264
center_y$ = 272
center_z$ = 280
radius$ = 288
?create_sphere@@YA?AUPrimitive@@UMaterial@@IMMMM@Z PROC	; create_sphere
; Line 34
$LN3:
	movss	DWORD PTR [rsp+32], xmm3
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 216				; 000000d8H
	mov	rdi, rsp
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+240]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 36
	mov	DWORD PTR p$[rsp+40], 1
; Line 37
	lea	rax, QWORD PTR $T6612[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR m$[rsp]
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR p$[rsp]
	lea	rcx, QWORD PTR $T6612[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
; Line 38
	mov	eax, DWORD PTR is_light$[rsp]
	mov	DWORD PTR p$[rsp+44], eax
; Line 39
	movss	xmm0, DWORD PTR center_x$[rsp]
	movss	DWORD PTR p$[rsp+64], xmm0
; Line 40
	movss	xmm0, DWORD PTR center_y$[rsp]
	movss	DWORD PTR p$[rsp+68], xmm0
; Line 41
	movss	xmm0, DWORD PTR center_z$[rsp]
	movss	DWORD PTR p$[rsp+72], xmm0
; Line 42
	movss	xmm0, DWORD PTR radius$[rsp]
	movss	DWORD PTR p$[rsp+84], xmm0
; Line 43
	movss	xmm0, DWORD PTR radius$[rsp]
	mulss	xmm0, DWORD PTR radius$[rsp]
	movss	DWORD PTR p$[rsp+88], xmm0
; Line 44
	movss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, DWORD PTR radius$[rsp]
	movss	DWORD PTR p$[rsp+92], xmm0
; Line 45
	lea	rax, QWORD PTR p$[rsp]
	mov	rdi, QWORD PTR $T6611[rsp]
	mov	rsi, rax
	mov	ecx, 96					; 00000060H
	rep movsb
	mov	rax, QWORD PTR $T6611[rsp]
; Line 46
	mov	rdi, rax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?create_sphere@@YA?AUPrimitive@@UMaterial@@IMMMM@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 216				; 000000d8H
	pop	rdi
	pop	rsi
	ret	0
?create_sphere@@YA?AUPrimitive@@UMaterial@@IMMMM@Z ENDP	; create_sphere
_TEXT	ENDS
PUBLIC	$T6701
PUBLIC	__real@41200000
PUBLIC	$T6700
PUBLIC	__real@c0900000
PUBLIC	__real@c089999a
PUBLIC	$T6702
PUBLIC	$T6703
PUBLIC	__real@40eccccd
PUBLIC	$T6699
PUBLIC	$T6704
PUBLIC	$T6705
PUBLIC	__real@bf800000
PUBLIC	__real@41400000
PUBLIC	$T6698
PUBLIC	$T6706
PUBLIC	$T6707
PUBLIC	__real@bfc00000
PUBLIC	__real@c0733333
PUBLIC	$T6697
PUBLIC	$T6708
PUBLIC	$T6709
PUBLIC	$T6696
PUBLIC	$T6710
PUBLIC	$T6711
PUBLIC	__real@40a00000
PUBLIC	$T6695
PUBLIC	$T6712
PUBLIC	$T6713
PUBLIC	__real@c0b00000
PUBLIC	__real@bf000000
PUBLIC	__real@40e00000
PUBLIC	$T6694
PUBLIC	$T6714
PUBLIC	$T6715
PUBLIC	__real@40000000
PUBLIC	$T6693
PUBLIC	$T6716
PUBLIC	$T6717
PUBLIC	$T6692
PUBLIC	$T6718
PUBLIC	$T6719
PUBLIC	__real@c0b9999a
PUBLIC	__real@c0b1999a
PUBLIC	__real@41f80000
PUBLIC	$T6691
PUBLIC	$T6720
PUBLIC	__real@3f933333
PUBLIC	$T6721
PUBLIC	__real@40400000
PUBLIC	$T6690
PUBLIC	$T6722
PUBLIC	$T6723
PUBLIC	__real@c0400000
PUBLIC	$T6689
PUBLIC	$T6724
PUBLIC	$T6725
PUBLIC	__real@3f3851ec
PUBLIC	$T6688
PUBLIC	$T6726
PUBLIC	$T6727
PUBLIC	__real@be0f5c29
PUBLIC	$T6687
PUBLIC	$T6728
PUBLIC	$T6729
PUBLIC	__real@bf4ccccd
PUBLIC	$T6686
PUBLIC	$T6730
PUBLIC	$T6731
PUBLIC	$T6685
PUBLIC	$T6732
PUBLIC	$T6733
PUBLIC	__real@40accccd
PUBLIC	$T6684
PUBLIC	$T6734
PUBLIC	$T6735
PUBLIC	__real@40cccccd
PUBLIC	__real@41900000
PUBLIC	$T6683
PUBLIC	$T6736
PUBLIC	__real@3fa66666
PUBLIC	$T6737
PUBLIC	__real@c0d66666
PUBLIC	$T6682
PUBLIC	$T6738
PUBLIC	__real@3e99999a
PUBLIC	$T6739
PUBLIC	__real@c0c00000
PUBLIC	__real@42000000
PUBLIC	$T6681
PUBLIC	$T6740
PUBLIC	__real@3fd9999a
PUBLIC	$T6741
PUBLIC	__real@3f000000
PUBLIC	__real@c0833333
PUBLIC	$T6680
PUBLIC	$T6742
PUBLIC	__real@3fc00000
PUBLIC	__real@3f333333
PUBLIC	__real@3e4ccccd
PUBLIC	$T6743
PUBLIC	__real@41e80000
PUBLIC	$T6679
PUBLIC	$T6744
PUBLIC	$T6745
PUBLIC	__real@bf333333
PUBLIC	__real@c09ccccd
PUBLIC	__real@41d80000
PUBLIC	$T6678
PUBLIC	$T6746
PUBLIC	__real@3e2e147b
PUBLIC	__real@3d8f5c29
PUBLIC	__real@3dcccccd
PUBLIC	__real@3f99999a
PUBLIC	$T6747
PUBLIC	__real@4059999a
PUBLIC	__real@c059999a
PUBLIC	__real@41b80000
PUBLIC	__real@40200000
PUBLIC	$T6677
PUBLIC	$T6748
PUBLIC	__real@3da3d70a
PUBLIC	__real@3f8ccccd
PUBLIC	__real@3f4ccccd
PUBLIC	$T6749
PUBLIC	__real@40d00000
PUBLIC	__real@41b00000
PUBLIC	__real@3eb33333
PUBLIC	$T6676
PUBLIC	$T6750
PUBLIC	__real@3f59999a
PUBLIC	$T6751
PUBLIC	__real@3f400000
PUBLIC	__real@408ccccd
PUBLIC	$T6675
PUBLIC	$T6752
PUBLIC	__real@3f19999a
PUBLIC	__real@3ecccccd
PUBLIC	__real@3fe66666
PUBLIC	__$ArrayPad$
PUBLIC	?create_scene@@YAPEAUPrimitive@@AEAI@Z		; create_scene
EXTRN	memset:PROC
EXTRN	malloc:PROC
EXTRN	__chkstk:PROC
pdata	SEGMENT
$pdata$?create_scene@@YAPEAUPrimitive@@AEAI@Z DD imagerel $LN12
	DD	imagerel $LN12+9282
	DD	imagerel $unwind$?create_scene@@YAPEAUPrimitive@@AEAI@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?create_scene@@YAPEAUPrimitive@@AEAI@Z DD 043d19H
	DD	05f50114H
	DD	060067007H
	DD	imagerel __GSHandlerCheck
	DD	02f90H
xdata	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@c0900000
CONST	SEGMENT
__real@c0900000 DD 0c0900000r			; -4.5
CONST	ENDS
;	COMDAT __real@c089999a
CONST	SEGMENT
__real@c089999a DD 0c089999ar			; -4.3
CONST	ENDS
;	COMDAT __real@40eccccd
CONST	SEGMENT
__real@40eccccd DD 040eccccdr			; 7.4
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@41400000
CONST	SEGMENT
__real@41400000 DD 041400000r			; 12
CONST	ENDS
;	COMDAT __real@bfc00000
CONST	SEGMENT
__real@bfc00000 DD 0bfc00000r			; -1.5
CONST	ENDS
;	COMDAT __real@c0733333
CONST	SEGMENT
__real@c0733333 DD 0c0733333r			; -3.8
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@c0b00000
CONST	SEGMENT
__real@c0b00000 DD 0c0b00000r			; -5.5
CONST	ENDS
;	COMDAT __real@bf000000
CONST	SEGMENT
__real@bf000000 DD 0bf000000r			; -0.5
CONST	ENDS
;	COMDAT __real@40e00000
CONST	SEGMENT
__real@40e00000 DD 040e00000r			; 7
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@c0b9999a
CONST	SEGMENT
__real@c0b9999a DD 0c0b9999ar			; -5.8
CONST	ENDS
;	COMDAT __real@c0b1999a
CONST	SEGMENT
__real@c0b1999a DD 0c0b1999ar			; -5.55
CONST	ENDS
;	COMDAT __real@41f80000
CONST	SEGMENT
__real@41f80000 DD 041f80000r			; 31
CONST	ENDS
;	COMDAT __real@3f933333
CONST	SEGMENT
__real@3f933333 DD 03f933333r			; 1.15
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@c0400000
CONST	SEGMENT
__real@c0400000 DD 0c0400000r			; -3
CONST	ENDS
;	COMDAT __real@3f3851ec
CONST	SEGMENT
__real@3f3851ec DD 03f3851ecr			; 0.72
CONST	ENDS
;	COMDAT __real@be0f5c29
CONST	SEGMENT
__real@be0f5c29 DD 0be0f5c29r			; -0.14
CONST	ENDS
;	COMDAT __real@bf4ccccd
CONST	SEGMENT
__real@bf4ccccd DD 0bf4ccccdr			; -0.8
CONST	ENDS
;	COMDAT __real@40accccd
CONST	SEGMENT
__real@40accccd DD 040accccdr			; 5.4
CONST	ENDS
;	COMDAT __real@40cccccd
CONST	SEGMENT
__real@40cccccd DD 040cccccdr			; 6.4
CONST	ENDS
;	COMDAT __real@41900000
CONST	SEGMENT
__real@41900000 DD 041900000r			; 18
CONST	ENDS
;	COMDAT __real@3fa66666
CONST	SEGMENT
__real@3fa66666 DD 03fa66666r			; 1.3
CONST	ENDS
;	COMDAT __real@c0d66666
CONST	SEGMENT
__real@c0d66666 DD 0c0d66666r			; -6.7
CONST	ENDS
;	COMDAT __real@3e99999a
CONST	SEGMENT
__real@3e99999a DD 03e99999ar			; 0.3
CONST	ENDS
;	COMDAT __real@c0c00000
CONST	SEGMENT
__real@c0c00000 DD 0c0c00000r			; -6
CONST	ENDS
;	COMDAT __real@42000000
CONST	SEGMENT
__real@42000000 DD 042000000r			; 32
CONST	ENDS
;	COMDAT __real@3fd9999a
CONST	SEGMENT
__real@3fd9999a DD 03fd9999ar			; 1.7
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@c0833333
CONST	SEGMENT
__real@c0833333 DD 0c0833333r			; -4.1
CONST	ENDS
;	COMDAT __real@3fc00000
CONST	SEGMENT
__real@3fc00000 DD 03fc00000r			; 1.5
CONST	ENDS
;	COMDAT __real@3f333333
CONST	SEGMENT
__real@3f333333 DD 03f333333r			; 0.7
CONST	ENDS
;	COMDAT __real@3e4ccccd
CONST	SEGMENT
__real@3e4ccccd DD 03e4ccccdr			; 0.2
CONST	ENDS
;	COMDAT __real@41e80000
CONST	SEGMENT
__real@41e80000 DD 041e80000r			; 29
CONST	ENDS
;	COMDAT __real@bf333333
CONST	SEGMENT
__real@bf333333 DD 0bf333333r			; -0.7
CONST	ENDS
;	COMDAT __real@c09ccccd
CONST	SEGMENT
__real@c09ccccd DD 0c09ccccdr			; -4.9
CONST	ENDS
;	COMDAT __real@41d80000
CONST	SEGMENT
__real@41d80000 DD 041d80000r			; 27
CONST	ENDS
;	COMDAT __real@3e2e147b
CONST	SEGMENT
__real@3e2e147b DD 03e2e147br			; 0.17
CONST	ENDS
;	COMDAT __real@3d8f5c29
CONST	SEGMENT
__real@3d8f5c29 DD 03d8f5c29r			; 0.07
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT __real@3f99999a
CONST	SEGMENT
__real@3f99999a DD 03f99999ar			; 1.2
CONST	ENDS
;	COMDAT __real@4059999a
CONST	SEGMENT
__real@4059999a DD 04059999ar			; 3.4
CONST	ENDS
;	COMDAT __real@c059999a
CONST	SEGMENT
__real@c059999a DD 0c059999ar			; -3.4
CONST	ENDS
;	COMDAT __real@41b80000
CONST	SEGMENT
__real@41b80000 DD 041b80000r			; 23
CONST	ENDS
;	COMDAT __real@40200000
CONST	SEGMENT
__real@40200000 DD 040200000r			; 2.5
CONST	ENDS
;	COMDAT __real@3da3d70a
CONST	SEGMENT
__real@3da3d70a DD 03da3d70ar			; 0.08
CONST	ENDS
;	COMDAT __real@3f8ccccd
CONST	SEGMENT
__real@3f8ccccd DD 03f8ccccdr			; 1.1
CONST	ENDS
;	COMDAT __real@3f4ccccd
CONST	SEGMENT
__real@3f4ccccd DD 03f4ccccdr			; 0.8
CONST	ENDS
;	COMDAT __real@40d00000
CONST	SEGMENT
__real@40d00000 DD 040d00000r			; 6.5
CONST	ENDS
;	COMDAT __real@41b00000
CONST	SEGMENT
__real@41b00000 DD 041b00000r			; 22
CONST	ENDS
;	COMDAT __real@3eb33333
CONST	SEGMENT
__real@3eb33333 DD 03eb33333r			; 0.35
CONST	ENDS
;	COMDAT __real@3f59999a
CONST	SEGMENT
__real@3f59999a DD 03f59999ar			; 0.85
CONST	ENDS
;	COMDAT __real@3f400000
CONST	SEGMENT
__real@3f400000 DD 03f400000r			; 0.75
CONST	ENDS
;	COMDAT __real@408ccccd
CONST	SEGMENT
__real@408ccccd DD 0408ccccdr			; 4.4
CONST	ENDS
;	COMDAT __real@3f19999a
CONST	SEGMENT
__real@3f19999a DD 03f19999ar			; 0.6
CONST	ENDS
;	COMDAT __real@3ecccccd
CONST	SEGMENT
__real@3ecccccd DD 03ecccccdr			; 0.4
CONST	ENDS
;	COMDAT __real@3fe66666
CONST	SEGMENT
__real@3fe66666 DD 03fe66666r			; 1.8
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
_TEXT	SEGMENT
curr_prim$ = 80
primitive_list$ = 88
$T6511 = 96
$T6512 = 144
$T6513 = 240
$T6514 = 288
$T6515 = 384
$T6516 = 432
$T6517 = 528
$T6518 = 576
$T6519 = 672
$T6520 = 720
$T6521 = 816
$T6522 = 864
$T6523 = 960
$T6524 = 1008
$T6525 = 1104
$T6526 = 1152
$T6527 = 1248
$T6528 = 1296
$T6529 = 1392
$T6530 = 1440
$T6531 = 1536
$T6532 = 1584
$T6533 = 1680
$T6534 = 1728
$T6535 = 1824
$T6536 = 1872
$T6537 = 1968
$T6538 = 2016
$T6539 = 2112
$T6540 = 2160
$T6541 = 2256
$T6542 = 2304
$T6543 = 2400
$T6544 = 2448
$T6550 = 2544
$T6551 = 2592
$T6552 = 2688
$T6553 = 2736
$T6554 = 2832
$T6555 = 2880
$T6556 = 2976
$T6557 = 3024
$T6558 = 3120
$T6559 = 3168
$T6560 = 3264
$T6561 = 3312
$T6562 = 3408
$T6563 = 3456
$T6564 = 3552
$T6565 = 3600
x$6566 = 3696
y$6570 = 3700
$T6574 = 3704
$T6575 = 3744
$T6623 = 3848
$T6624 = 3888
$T6625 = 3984
$T6626 = 4024
$T6627 = 4120
$T6628 = 4160
$T6629 = 4256
$T6630 = 4296
$T6631 = 4392
$T6632 = 4432
$T6633 = 4528
$T6634 = 4568
$T6635 = 4664
$T6636 = 4704
$T6637 = 4800
$T6638 = 4840
$T6639 = 4936
$T6640 = 4976
$T6641 = 5072
$T6642 = 5112
$T6643 = 5208
$T6644 = 5248
$T6645 = 5344
$T6646 = 5384
$T6647 = 5480
$T6648 = 5520
$T6649 = 5616
$T6650 = 5656
$T6651 = 5752
$T6652 = 5792
$T6653 = 5888
$T6654 = 5928
$T6655 = 6024
$T6656 = 6064
$T6657 = 6160
$T6658 = 6200
$T6659 = 6296
$T6660 = 6336
$T6661 = 6432
$T6662 = 6472
$T6663 = 6568
$T6664 = 6608
$T6665 = 6704
$T6666 = 6744
$T6667 = 6840
$T6668 = 6880
$T6669 = 6976
$T6670 = 7016
$T6671 = 7112
$T6672 = 7152
$T6673 = 7248
$T6674 = 7288
$T6675 = 7392
$T6676 = 7440
$T6677 = 7488
$T6678 = 7536
$T6679 = 7584
$T6680 = 7632
$T6681 = 7680
$T6682 = 7728
$T6683 = 7776
$T6684 = 7824
$T6685 = 7872
$T6686 = 7920
$T6687 = 7968
$T6688 = 8016
$T6689 = 8064
$T6690 = 8112
$T6691 = 8160
$T6692 = 8208
$T6693 = 8256
$T6694 = 8304
$T6695 = 8352
$T6696 = 8400
$T6697 = 8448
$T6698 = 8496
$T6699 = 8544
$T6700 = 8592
$T6701 = 8640
$T6702 = 8736
$T6703 = 8776
$T6704 = 8872
$T6705 = 8912
$T6706 = 9008
$T6707 = 9048
$T6708 = 9144
$T6709 = 9184
$T6710 = 9280
$T6711 = 9320
$T6712 = 9416
$T6713 = 9456
$T6714 = 9552
$T6715 = 9592
$T6716 = 9688
$T6717 = 9728
$T6718 = 9824
$T6719 = 9864
$T6720 = 9960
$T6721 = 10000
$T6722 = 10096
$T6723 = 10136
$T6724 = 10232
$T6725 = 10272
$T6726 = 10368
$T6727 = 10408
$T6728 = 10504
$T6729 = 10544
$T6730 = 10640
$T6731 = 10680
$T6732 = 10776
$T6733 = 10816
$T6734 = 10912
$T6735 = 10952
$T6736 = 11048
$T6737 = 11088
$T6738 = 11184
$T6739 = 11224
$T6740 = 11320
$T6741 = 11360
$T6742 = 11456
$T6743 = 11496
$T6744 = 11592
$T6745 = 11632
$T6746 = 11728
$T6747 = 11768
$T6748 = 11864
$T6749 = 11904
$T6750 = 12000
$T6751 = 12040
$T6752 = 12136
__$ArrayPad$ = 12176
n_primitives$ = 12224
?create_scene@@YAPEAUPrimitive@@AEAI@Z PROC		; create_scene
; Line 49
$LN12:
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	mov	eax, 12200				; 00002fa8H
	call	__chkstk
	sub	rsp, rax
	mov	rdi, rsp
	mov	ecx, 3050				; 00000beaH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+12224]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 50
	mov	DWORD PTR curr_prim$[rsp], 0
; Line 53
	xor	eax, eax
	cmp	eax, 1
	je	$LN9@create_sce
; Line 55
	mov	rax, QWORD PTR n_primitives$[rsp]
	mov	DWORD PTR [rax], 17
; Line 56
	mov	rax, QWORD PTR n_primitives$[rsp]
	mov	eax, DWORD PTR [rax]
	imul	rax, 96					; 00000060H
	mov	rcx, rax
	call	malloc
	mov	QWORD PTR primitive_list$[rsp], rax
; Line 57
	mov	rax, QWORD PTR n_primitives$[rsp]
	mov	eax, DWORD PTR [rax]
	imul	rax, 96					; 00000060H
	mov	r8, rax
	xor	edx, edx
	mov	rcx, QWORD PTR primitive_list$[rsp]
	call	memset
; Line 61
	movss	xmm0, DWORD PTR __real@3fe66666
	movss	DWORD PTR [rsp+64], xmm0
	movss	xmm0, DWORD PTR __real@3ecccccd
	movss	DWORD PTR [rsp+56], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+48], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+40], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3f19999a
	movss	xmm2, DWORD PTR __real@3f19999a
	movss	xmm1, DWORD PTR __real@3f19999a
	lea	rcx, QWORD PTR $T6623[rsp]
	call	?create_material@@YA?AUMaterial@@MMMMMMMM@Z ; create_material
	lea	rcx, QWORD PTR $T6752[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6511[rsp]
	lea	rcx, QWORD PTR $T6752[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6675[rsp]
	lea	rcx, QWORD PTR $T6511[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	movss	xmm0, DWORD PTR __real@408ccccd
	movss	DWORD PTR [rsp+48], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+40], xmm0
	movss	xmm0, DWORD PTR __real@3f400000
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	xor	r8d, r8d
	lea	rdx, QWORD PTR $T6675[rsp]
	lea	rcx, QWORD PTR $T6624[rsp]
	call	?create_plane@@YA?AUPrimitive@@UMaterial@@IMMMM@Z ; create_plane
	lea	rcx, QWORD PTR $T6751[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 96					; 00000060H
	rep movsb
	lea	rax, QWORD PTR $T6512[rsp]
	lea	rcx, QWORD PTR $T6751[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 96					; 00000060H
	rep movsb
	movsxd	rax, DWORD PTR curr_prim$[rsp]
	imul	rax, 96					; 00000060H
	mov	rcx, QWORD PTR primitive_list$[rsp]
	lea	rdx, QWORD PTR $T6512[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, rdx
	mov	ecx, 96					; 00000060H
	rep movsb
	mov	eax, DWORD PTR curr_prim$[rsp]
	inc	eax
	mov	DWORD PTR curr_prim$[rsp], eax
; Line 63
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+64], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+56], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+48], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+40], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3f59999a
	movss	xmm2, DWORD PTR __real@3f59999a
	movss	xmm1, DWORD PTR __real@3f59999a
	lea	rcx, QWORD PTR $T6625[rsp]
	call	?create_material@@YA?AUMaterial@@MMMMMMMM@Z ; create_material
	lea	rcx, QWORD PTR $T6750[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6513[rsp]
	lea	rcx, QWORD PTR $T6750[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6676[rsp]
	lea	rcx, QWORD PTR $T6513[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	movss	xmm0, DWORD PTR __real@3eb33333
	movss	DWORD PTR [rsp+48], xmm0
	movss	xmm0, DWORD PTR __real@41b00000
	movss	DWORD PTR [rsp+40], xmm0
	movss	xmm0, DWORD PTR __real@40d00000
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	mov	r8d, 1
	lea	rdx, QWORD PTR $T6676[rsp]
	lea	rcx, QWORD PTR $T6626[rsp]
	call	?create_sphere@@YA?AUPrimitive@@UMaterial@@IMMMM@Z ; create_sphere
	lea	rcx, QWORD PTR $T6749[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 96					; 00000060H
	rep movsb
	lea	rax, QWORD PTR $T6514[rsp]
	lea	rcx, QWORD PTR $T6749[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 96					; 00000060H
	rep movsb
	movsxd	rax, DWORD PTR curr_prim$[rsp]
	imul	rax, 96					; 00000060H
	mov	rcx, QWORD PTR primitive_list$[rsp]
	lea	rdx, QWORD PTR $T6514[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, rdx
	mov	ecx, 96					; 00000060H
	rep movsb
	mov	eax, DWORD PTR curr_prim$[rsp]
	inc	eax
	mov	DWORD PTR curr_prim$[rsp], eax
; Line 65
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+64], xmm0
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR [rsp+56], xmm0
	movss	xmm0, DWORD PTR __real@3f8ccccd
	movss	DWORD PTR [rsp+48], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+40], xmm0
	movss	xmm0, DWORD PTR __real@3ecccccd
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3da3d70a
	movss	xmm2, DWORD PTR __real@3da3d70a
	movss	xmm1, DWORD PTR __real@3da3d70a
	lea	rcx, QWORD PTR $T6627[rsp]
	call	?create_material@@YA?AUMaterial@@MMMMMMMM@Z ; create_material
	lea	rcx, QWORD PTR $T6748[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6515[rsp]
	lea	rcx, QWORD PTR $T6748[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6677[rsp]
	lea	rcx, QWORD PTR $T6515[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	movss	xmm0, DWORD PTR __real@40200000
	movss	DWORD PTR [rsp+48], xmm0
	movss	xmm0, DWORD PTR __real@41b80000
	movss	DWORD PTR [rsp+40], xmm0
	movss	xmm0, DWORD PTR __real@c059999a
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@4059999a
	xor	r8d, r8d
	lea	rdx, QWORD PTR $T6677[rsp]
	lea	rcx, QWORD PTR $T6628[rsp]
	call	?create_sphere@@YA?AUPrimitive@@UMaterial@@IMMMM@Z ; create_sphere
	lea	rcx, QWORD PTR $T6747[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 96					; 00000060H
	rep movsb
	lea	rax, QWORD PTR $T6516[rsp]
	lea	rcx, QWORD PTR $T6747[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 96					; 00000060H
	rep movsb
	movsxd	rax, DWORD PTR curr_prim$[rsp]
	imul	rax, 96					; 00000060H
	mov	rcx, QWORD PTR primitive_list$[rsp]
	lea	rdx, QWORD PTR $T6516[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, rdx
	mov	ecx, 96					; 00000060H
	rep movsb
	mov	eax, DWORD PTR curr_prim$[rsp]
	inc	eax
	mov	DWORD PTR curr_prim$[rsp], eax
; Line 67
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+64], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+56], xmm0
	movss	xmm0, DWORD PTR __real@3f99999a
	movss	DWORD PTR [rsp+48], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+40], xmm0
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3d8f5c29
	movss	xmm2, DWORD PTR __real@3e2e147b
	movss	xmm1, DWORD PTR __real@3d8f5c29
	lea	rcx, QWORD PTR $T6629[rsp]
	call	?create_material@@YA?AUMaterial@@MMMMMMMM@Z ; create_material
	lea	rcx, QWORD PTR $T6746[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6517[rsp]
	lea	rcx, QWORD PTR $T6746[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6678[rsp]
	lea	rcx, QWORD PTR $T6517[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+48], xmm0
	movss	xmm0, DWORD PTR __real@41d80000
	movss	DWORD PTR [rsp+40], xmm0
	movss	xmm0, DWORD PTR __real@c09ccccd
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@bf333333
	xor	r8d, r8d
	lea	rdx, QWORD PTR $T6678[rsp]
	lea	rcx, QWORD PTR $T6630[rsp]
	call	?create_sphere@@YA?AUPrimitive@@UMaterial@@IMMMM@Z ; create_sphere
	lea	rcx, QWORD PTR $T6745[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 96					; 00000060H
	rep movsb
	lea	rax, QWORD PTR $T6518[rsp]
	lea	rcx, QWORD PTR $T6745[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 96					; 00000060H
	rep movsb
	movsxd	rax, DWORD PTR curr_prim$[rsp]
	imul	rax, 96					; 00000060H
	mov	rcx, QWORD PTR primitive_list$[rsp]
	lea	rdx, QWORD PTR $T6518[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, rdx
	mov	ecx, 96					; 00000060H
	rep movsb
	mov	eax, DWORD PTR curr_prim$[rsp]
	inc	eax
	mov	DWORD PTR curr_prim$[rsp], eax
; Line 69
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+64], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+56], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+48], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+40], xmm0
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T6631[rsp]
	call	?create_material@@YA?AUMaterial@@MMMMMMMM@Z ; create_material
	lea	rcx, QWORD PTR $T6744[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6519[rsp]
	lea	rcx, QWORD PTR $T6744[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6679[rsp]
	lea	rcx, QWORD PTR $T6519[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	movss	xmm0, DWORD PTR __real@40200000
	movss	DWORD PTR [rsp+48], xmm0
	movss	xmm0, DWORD PTR __real@41e80000
	movss	DWORD PTR [rsp+40], xmm0
	movss	xmm0, DWORD PTR __real@c059999a
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@c059999a
	xor	r8d, r8d
	lea	rdx, QWORD PTR $T6679[rsp]
	lea	rcx, QWORD PTR $T6632[rsp]
	call	?create_sphere@@YA?AUPrimitive@@UMaterial@@IMMMM@Z ; create_sphere
	lea	rcx, QWORD PTR $T6743[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 96					; 00000060H
	rep movsb
	lea	rax, QWORD PTR $T6520[rsp]
	lea	rcx, QWORD PTR $T6743[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 96					; 00000060H
	rep movsb
	movsxd	rax, DWORD PTR curr_prim$[rsp]
	imul	rax, 96					; 00000060H
	mov	rcx, QWORD PTR primitive_list$[rsp]
	lea	rdx, QWORD PTR $T6520[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, rdx
	mov	ecx, 96					; 00000060H
	rep movsb
	mov	eax, DWORD PTR curr_prim$[rsp]
	inc	eax
	mov	DWORD PTR curr_prim$[rsp], eax
; Line 71
	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR [rsp+64], xmm0
	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR [rsp+56], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+48], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+40], xmm0
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3f333333
	movss	xmm2, DWORD PTR __real@3f333333
	movss	xmm1, DWORD PTR __real@3fc00000
	lea	rcx, QWORD PTR $T6633[rsp]
	call	?create_material@@YA?AUMaterial@@MMMMMMMM@Z ; create_material
	lea	rcx, QWORD PTR $T6742[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6521[rsp]
	lea	rcx, QWORD PTR $T6742[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6680[rsp]
	lea	rcx, QWORD PTR $T6521[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	movss	xmm0, DWORD PTR __real@3fc00000
	movss	DWORD PTR [rsp+48], xmm0
	movss	xmm0, DWORD PTR __real@41e80000
	movss	DWORD PTR [rsp+40], xmm0
	movss	xmm0, DWORD PTR __real@c0833333
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3f000000
	xor	r8d, r8d
	lea	rdx, QWORD PTR $T6680[rsp]
	lea	rcx, QWORD PTR $T6634[rsp]
	call	?create_sphere@@YA?AUPrimitive@@UMaterial@@IMMMM@Z ; create_sphere
	lea	rcx, QWORD PTR $T6741[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 96					; 00000060H
	rep movsb
	lea	rax, QWORD PTR $T6522[rsp]
	lea	rcx, QWORD PTR $T6741[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 96					; 00000060H
	rep movsb
	movsxd	rax, DWORD PTR curr_prim$[rsp]
	imul	rax, 96					; 00000060H
	mov	rcx, QWORD PTR primitive_list$[rsp]
	lea	rdx, QWORD PTR $T6522[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, rdx
	mov	ecx, 96					; 00000060H
	rep movsb
	mov	eax, DWORD PTR curr_prim$[rsp]
	inc	eax
	mov	DWORD PTR curr_prim$[rsp], eax
; Line 73
	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR [rsp+64], xmm0
	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR [rsp+56], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+48], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+40], xmm0
	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3fd9999a
	movss	xmm2, DWORD PTR __real@3f333333
	movss	xmm1, DWORD PTR __real@3f333333
	lea	rcx, QWORD PTR $T6635[rsp]
	call	?create_material@@YA?AUMaterial@@MMMMMMMM@Z ; create_material
	lea	rcx, QWORD PTR $T6740[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6523[rsp]
	lea	rcx, QWORD PTR $T6740[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6681[rsp]
	lea	rcx, QWORD PTR $T6523[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	movss	xmm0, DWORD PTR __real@3fc00000
	movss	DWORD PTR [rsp+48], xmm0
	movss	xmm0, DWORD PTR __real@42000000
	movss	DWORD PTR [rsp+40], xmm0
	movss	xmm0, DWORD PTR __real@c0833333
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@c0c00000
	xor	r8d, r8d
	lea	rdx, QWORD PTR $T6681[rsp]
	lea	rcx, QWORD PTR $T6636[rsp]
	call	?create_sphere@@YA?AUPrimitive@@UMaterial@@IMMMM@Z ; create_sphere
	lea	rcx, QWORD PTR $T6739[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 96					; 00000060H
	rep movsb
	lea	rax, QWORD PTR $T6524[rsp]
	lea	rcx, QWORD PTR $T6739[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 96					; 00000060H
	rep movsb
	movsxd	rax, DWORD PTR curr_prim$[rsp]
	imul	rax, 96					; 00000060H
	mov	rcx, QWORD PTR primitive_list$[rsp]
	lea	rdx, QWORD PTR $T6524[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, rdx
	mov	ecx, 96					; 00000060H
	rep movsb
	mov	eax, DWORD PTR curr_prim$[rsp]
	inc	eax
	mov	DWORD PTR curr_prim$[rsp], eax
; Line 75
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR [rsp+64], xmm0
	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR [rsp+56], xmm0
	movss	xmm0, DWORD PTR __real@3f99999a
	movss	DWORD PTR [rsp+48], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+40], xmm0
	movss	xmm0, DWORD PTR __real@3e99999a
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3d8f5c29
	movss	xmm2, DWORD PTR __real@3e2e147b
	movss	xmm1, DWORD PTR __real@3d8f5c29
	lea	rcx, QWORD PTR $T6637[rsp]
	call	?create_material@@YA?AUMaterial@@MMMMMMMM@Z ; create_material
	lea	rcx, QWORD PTR $T6738[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6525[rsp]
	lea	rcx, QWORD PTR $T6738[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6682[rsp]
	lea	rcx, QWORD PTR $T6525[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+48], xmm0
	movss	xmm0, DWORD PTR __real@41e80000
	movss	DWORD PTR [rsp+40], xmm0
	movss	xmm0, DWORD PTR __real@c09ccccd
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@c0d66666
	xor	r8d, r8d
	lea	rdx, QWORD PTR $T6682[rsp]
	lea	rcx, QWORD PTR $T6638[rsp]
	call	?create_sphere@@YA?AUPrimitive@@UMaterial@@IMMMM@Z ; create_sphere
	lea	rcx, QWORD PTR $T6737[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 96					; 00000060H
	rep movsb
	lea	rax, QWORD PTR $T6526[rsp]
	lea	rcx, QWORD PTR $T6737[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 96					; 00000060H
	rep movsb
	movsxd	rax, DWORD PTR curr_prim$[rsp]
	imul	rax, 96					; 00000060H
	mov	rcx, QWORD PTR primitive_list$[rsp]
	lea	rdx, QWORD PTR $T6526[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, rdx
	mov	ecx, 96					; 00000060H
	rep movsb
	mov	eax, DWORD PTR curr_prim$[rsp]
	inc	eax
	mov	DWORD PTR curr_prim$[rsp], eax
; Line 77
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+64], xmm0
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR [rsp+56], xmm0
	movss	xmm0, DWORD PTR __real@3fa66666
	movss	DWORD PTR [rsp+48], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+40], xmm0
	movss	xmm0, DWORD PTR __real@3f333333
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3da3d70a
	movss	xmm2, DWORD PTR __real@3da3d70a
	movss	xmm1, DWORD PTR __real@3da3d70a
	lea	rcx, QWORD PTR $T6639[rsp]
	call	?create_material@@YA?AUMaterial@@MMMMMMMM@Z ; create_material
	lea	rcx, QWORD PTR $T6736[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6527[rsp]
	lea	rcx, QWORD PTR $T6736[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6683[rsp]
	lea	rcx, QWORD PTR $T6527[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+48], xmm0
	movss	xmm0, DWORD PTR __real@41900000
	movss	DWORD PTR [rsp+40], xmm0
	movss	xmm0, DWORD PTR __real@c09ccccd
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@40cccccd
	xor	r8d, r8d
	lea	rdx, QWORD PTR $T6683[rsp]
	lea	rcx, QWORD PTR $T6640[rsp]
	call	?create_sphere@@YA?AUPrimitive@@UMaterial@@IMMMM@Z ; create_sphere
	lea	rcx, QWORD PTR $T6735[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 96					; 00000060H
	rep movsb
	lea	rax, QWORD PTR $T6528[rsp]
	lea	rcx, QWORD PTR $T6735[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 96					; 00000060H
	rep movsb
	movsxd	rax, DWORD PTR curr_prim$[rsp]
	imul	rax, 96					; 00000060H
	mov	rcx, QWORD PTR primitive_list$[rsp]
	lea	rdx, QWORD PTR $T6528[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, rdx
	mov	ecx, 96					; 00000060H
	rep movsb
	mov	eax, DWORD PTR curr_prim$[rsp]
	inc	eax
	mov	DWORD PTR curr_prim$[rsp], eax
; Line 79
	movss	xmm0, DWORD PTR __real@3fc00000
	movss	DWORD PTR [rsp+64], xmm0
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR [rsp+56], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+48], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+40], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3f19999a
	movss	xmm2, DWORD PTR __real@3f19999a
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T6641[rsp]
	call	?create_material@@YA?AUMaterial@@MMMMMMMM@Z ; create_material
	lea	rcx, QWORD PTR $T6734[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6529[rsp]
	lea	rcx, QWORD PTR $T6734[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6684[rsp]
	lea	rcx, QWORD PTR $T6529[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	movss	xmm0, DWORD PTR __real@40accccd
	movss	DWORD PTR [rsp+48], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+40], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3f333333
	xor	r8d, r8d
	lea	rdx, QWORD PTR $T6684[rsp]
	lea	rcx, QWORD PTR $T6642[rsp]
	call	?create_plane@@YA?AUPrimitive@@UMaterial@@IMMMM@Z ; create_plane
	lea	rcx, QWORD PTR $T6733[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 96					; 00000060H
	rep movsb
	lea	rax, QWORD PTR $T6530[rsp]
	lea	rcx, QWORD PTR $T6733[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 96					; 00000060H
	rep movsb
	movsxd	rax, DWORD PTR curr_prim$[rsp]
	imul	rax, 96					; 00000060H
	mov	rcx, QWORD PTR primitive_list$[rsp]
	lea	rdx, QWORD PTR $T6530[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, rdx
	mov	ecx, 96					; 00000060H
	rep movsb
	mov	eax, DWORD PTR curr_prim$[rsp]
	inc	eax
	mov	DWORD PTR curr_prim$[rsp], eax
; Line 81
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR [rsp+64], xmm0
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR [rsp+56], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+48], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+40], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR __real@3f19999a
	movss	xmm1, DWORD PTR __real@3f333333
	lea	rcx, QWORD PTR $T6643[rsp]
	call	?create_material@@YA?AUMaterial@@MMMMMMMM@Z ; create_material
	lea	rcx, QWORD PTR $T6732[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6531[rsp]
	lea	rcx, QWORD PTR $T6732[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6685[rsp]
	lea	rcx, QWORD PTR $T6531[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	movss	xmm0, DWORD PTR __real@40accccd
	movss	DWORD PTR [rsp+48], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+40], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@bf333333
	xor	r8d, r8d
	lea	rdx, QWORD PTR $T6685[rsp]
	lea	rcx, QWORD PTR $T6644[rsp]
	call	?create_plane@@YA?AUPrimitive@@UMaterial@@IMMMM@Z ; create_plane
	lea	rcx, QWORD PTR $T6731[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 96					; 00000060H
	rep movsb
	lea	rax, QWORD PTR $T6532[rsp]
	lea	rcx, QWORD PTR $T6731[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 96					; 00000060H
	rep movsb
	movsxd	rax, DWORD PTR curr_prim$[rsp]
	imul	rax, 96					; 00000060H
	mov	rcx, QWORD PTR primitive_list$[rsp]
	lea	rdx, QWORD PTR $T6532[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, rdx
	mov	ecx, 96					; 00000060H
	rep movsb
	mov	eax, DWORD PTR curr_prim$[rsp]
	inc	eax
	mov	DWORD PTR curr_prim$[rsp], eax
; Line 83
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR [rsp+64], xmm0
	movss	xmm0, DWORD PTR __real@3f99999a
	movss	DWORD PTR [rsp+56], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+48], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+40], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T6645[rsp]
	call	?create_material@@YA?AUMaterial@@MMMMMMMM@Z ; create_material
	lea	rcx, QWORD PTR $T6730[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6533[rsp]
	lea	rcx, QWORD PTR $T6730[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6686[rsp]
	lea	rcx, QWORD PTR $T6533[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	movss	xmm0, DWORD PTR __real@40accccd
	movss	DWORD PTR [rsp+48], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+40], xmm0
	movss	xmm0, DWORD PTR __real@bf4ccccd
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	xor	r8d, r8d
	lea	rdx, QWORD PTR $T6686[rsp]
	lea	rcx, QWORD PTR $T6646[rsp]
	call	?create_plane@@YA?AUPrimitive@@UMaterial@@IMMMM@Z ; create_plane
	lea	rcx, QWORD PTR $T6729[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 96					; 00000060H
	rep movsb
	lea	rax, QWORD PTR $T6534[rsp]
	lea	rcx, QWORD PTR $T6729[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 96					; 00000060H
	rep movsb
	movsxd	rax, DWORD PTR curr_prim$[rsp]
	imul	rax, 96					; 00000060H
	mov	rcx, QWORD PTR primitive_list$[rsp]
	lea	rdx, QWORD PTR $T6534[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, rdx
	mov	ecx, 96					; 00000060H
	rep movsb
	mov	eax, DWORD PTR curr_prim$[rsp]
	inc	eax
	mov	DWORD PTR curr_prim$[rsp], eax
; Line 85
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR [rsp+64], xmm0
	movss	xmm0, DWORD PTR __real@3f99999a
	movss	DWORD PTR [rsp+56], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+48], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+40], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3fc00000
	movss	xmm2, DWORD PTR __real@3fc00000
	movss	xmm1, DWORD PTR __real@3fc00000
	lea	rcx, QWORD PTR $T6647[rsp]
	call	?create_material@@YA?AUMaterial@@MMMMMMMM@Z ; create_material
	lea	rcx, QWORD PTR $T6728[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6535[rsp]
	lea	rcx, QWORD PTR $T6728[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6687[rsp]
	lea	rcx, QWORD PTR $T6535[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	movss	xmm0, DWORD PTR __real@40accccd
	movss	DWORD PTR [rsp+48], xmm0
	movss	xmm0, DWORD PTR __real@be0f5c29
	movss	DWORD PTR [rsp+40], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	xor	r8d, r8d
	lea	rdx, QWORD PTR $T6687[rsp]
	lea	rcx, QWORD PTR $T6648[rsp]
	call	?create_plane@@YA?AUPrimitive@@UMaterial@@IMMMM@Z ; create_plane
	lea	rcx, QWORD PTR $T6727[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 96					; 00000060H
	rep movsb
	lea	rax, QWORD PTR $T6536[rsp]
	lea	rcx, QWORD PTR $T6727[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 96					; 00000060H
	rep movsb
	movsxd	rax, DWORD PTR curr_prim$[rsp]
	imul	rax, 96					; 00000060H
	mov	rcx, QWORD PTR primitive_list$[rsp]
	lea	rdx, QWORD PTR $T6536[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, rdx
	mov	ecx, 96					; 00000060H
	rep movsb
	mov	eax, DWORD PTR curr_prim$[rsp]
	inc	eax
	mov	DWORD PTR curr_prim$[rsp], eax
; Line 87
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+64], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+56], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+48], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+40], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3dcccccd
	movss	xmm2, DWORD PTR __real@3dcccccd
	movss	xmm1, DWORD PTR __real@3dcccccd
	lea	rcx, QWORD PTR $T6649[rsp]
	call	?create_material@@YA?AUMaterial@@MMMMMMMM@Z ; create_material
	lea	rcx, QWORD PTR $T6726[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6537[rsp]
	lea	rcx, QWORD PTR $T6726[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6688[rsp]
	lea	rcx, QWORD PTR $T6537[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	movss	xmm0, DWORD PTR __real@40accccd
	movss	DWORD PTR [rsp+48], xmm0
	movss	xmm0, DWORD PTR __real@3f3851ec
	movss	DWORD PTR [rsp+40], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	xor	r8d, r8d
	lea	rdx, QWORD PTR $T6688[rsp]
	lea	rcx, QWORD PTR $T6650[rsp]
	call	?create_plane@@YA?AUPrimitive@@UMaterial@@IMMMM@Z ; create_plane
	lea	rcx, QWORD PTR $T6725[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 96					; 00000060H
	rep movsb
	lea	rax, QWORD PTR $T6538[rsp]
	lea	rcx, QWORD PTR $T6725[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 96					; 00000060H
	rep movsb
	movsxd	rax, DWORD PTR curr_prim$[rsp]
	imul	rax, 96					; 00000060H
	mov	rcx, QWORD PTR primitive_list$[rsp]
	lea	rdx, QWORD PTR $T6538[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, rdx
	mov	ecx, 96					; 00000060H
	rep movsb
	mov	eax, DWORD PTR curr_prim$[rsp]
	inc	eax
	mov	DWORD PTR curr_prim$[rsp], eax
; Line 89
	movss	xmm0, DWORD PTR __real@3fe66666
	movss	DWORD PTR [rsp+64], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+56], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+48], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+40], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3f59999a
	movss	xmm2, DWORD PTR __real@3f59999a
	movss	xmm1, DWORD PTR __real@3f59999a
	lea	rcx, QWORD PTR $T6651[rsp]
	call	?create_material@@YA?AUMaterial@@MMMMMMMM@Z ; create_material
	lea	rcx, QWORD PTR $T6724[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6539[rsp]
	lea	rcx, QWORD PTR $T6724[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6689[rsp]
	lea	rcx, QWORD PTR $T6539[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	movss	xmm0, DWORD PTR __real@3eb33333
	movss	DWORD PTR [rsp+48], xmm0
	movss	xmm0, DWORD PTR __real@41b00000
	movss	DWORD PTR [rsp+40], xmm0
	movss	xmm0, DWORD PTR __real@40d00000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@c0400000
	mov	r8d, 1
	lea	rdx, QWORD PTR $T6689[rsp]
	lea	rcx, QWORD PTR $T6652[rsp]
	call	?create_sphere@@YA?AUPrimitive@@UMaterial@@IMMMM@Z ; create_sphere
	lea	rcx, QWORD PTR $T6723[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 96					; 00000060H
	rep movsb
	lea	rax, QWORD PTR $T6540[rsp]
	lea	rcx, QWORD PTR $T6723[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 96					; 00000060H
	rep movsb
	movsxd	rax, DWORD PTR curr_prim$[rsp]
	imul	rax, 96					; 00000060H
	mov	rcx, QWORD PTR primitive_list$[rsp]
	lea	rdx, QWORD PTR $T6540[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, rdx
	mov	ecx, 96					; 00000060H
	rep movsb
	mov	eax, DWORD PTR curr_prim$[rsp]
	inc	eax
	mov	DWORD PTR curr_prim$[rsp], eax
; Line 91
	movss	xmm0, DWORD PTR __real@3fe66666
	movss	DWORD PTR [rsp+64], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+56], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+48], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+40], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3f59999a
	movss	xmm2, DWORD PTR __real@3f59999a
	movss	xmm1, DWORD PTR __real@3f59999a
	lea	rcx, QWORD PTR $T6653[rsp]
	call	?create_material@@YA?AUMaterial@@MMMMMMMM@Z ; create_material
	lea	rcx, QWORD PTR $T6722[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6541[rsp]
	lea	rcx, QWORD PTR $T6722[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6690[rsp]
	lea	rcx, QWORD PTR $T6541[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	movss	xmm0, DWORD PTR __real@3eb33333
	movss	DWORD PTR [rsp+48], xmm0
	movss	xmm0, DWORD PTR __real@41b00000
	movss	DWORD PTR [rsp+40], xmm0
	movss	xmm0, DWORD PTR __real@40d00000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@40400000
	mov	r8d, 1
	lea	rdx, QWORD PTR $T6690[rsp]
	lea	rcx, QWORD PTR $T6654[rsp]
	call	?create_sphere@@YA?AUPrimitive@@UMaterial@@IMMMM@Z ; create_sphere
	lea	rcx, QWORD PTR $T6721[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 96					; 00000060H
	rep movsb
	lea	rax, QWORD PTR $T6542[rsp]
	lea	rcx, QWORD PTR $T6721[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 96					; 00000060H
	rep movsb
	movsxd	rax, DWORD PTR curr_prim$[rsp]
	imul	rax, 96					; 00000060H
	mov	rcx, QWORD PTR primitive_list$[rsp]
	lea	rdx, QWORD PTR $T6542[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, rdx
	mov	ecx, 96					; 00000060H
	rep movsb
	mov	eax, DWORD PTR curr_prim$[rsp]
	inc	eax
	mov	DWORD PTR curr_prim$[rsp], eax
; Line 93
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+64], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+56], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+48], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+40], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3eb33333
	movss	xmm2, DWORD PTR __real@3eb33333
	movss	xmm1, DWORD PTR __real@3f933333
	lea	rcx, QWORD PTR $T6655[rsp]
	call	?create_material@@YA?AUMaterial@@MMMMMMMM@Z ; create_material
	lea	rcx, QWORD PTR $T6720[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6543[rsp]
	lea	rcx, QWORD PTR $T6720[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6691[rsp]
	lea	rcx, QWORD PTR $T6543[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	movss	xmm0, DWORD PTR __real@3eb33333
	movss	DWORD PTR [rsp+48], xmm0
	movss	xmm0, DWORD PTR __real@41f80000
	movss	DWORD PTR [rsp+40], xmm0
	movss	xmm0, DWORD PTR __real@c0b1999a
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@c0b9999a
	mov	r8d, 1
	lea	rdx, QWORD PTR $T6691[rsp]
	lea	rcx, QWORD PTR $T6656[rsp]
	call	?create_sphere@@YA?AUPrimitive@@UMaterial@@IMMMM@Z ; create_sphere
	lea	rcx, QWORD PTR $T6719[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 96					; 00000060H
	rep movsb
	lea	rax, QWORD PTR $T6544[rsp]
	lea	rcx, QWORD PTR $T6719[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 96					; 00000060H
	rep movsb
	movsxd	rax, DWORD PTR curr_prim$[rsp]
	imul	rax, 96					; 00000060H
	mov	rcx, QWORD PTR primitive_list$[rsp]
	lea	rdx, QWORD PTR $T6544[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, rdx
	mov	ecx, 96					; 00000060H
	rep movsb
	mov	eax, DWORD PTR curr_prim$[rsp]
	inc	eax
	mov	DWORD PTR curr_prim$[rsp], eax
	jmp	$LN8@create_sce
$LN9@create_sce:
; Line 95
	xor	eax, eax
	test	eax, eax
	je	$LN7@create_sce
; Line 96
	mov	rax, QWORD PTR n_primitives$[rsp]
	mov	DWORD PTR [rax], 64			; 00000040H
; Line 97
	mov	rax, QWORD PTR n_primitives$[rsp]
	mov	eax, DWORD PTR [rax]
	imul	rax, 96					; 00000060H
	mov	rcx, rax
	call	malloc
	mov	QWORD PTR primitive_list$[rsp], rax
; Line 98
	mov	rax, QWORD PTR n_primitives$[rsp]
	mov	eax, DWORD PTR [rax]
	imul	rax, 96					; 00000060H
	mov	r8, rax
	xor	edx, edx
	mov	rcx, QWORD PTR primitive_list$[rsp]
	call	memset
; Line 101
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR [rsp+64], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+56], xmm0
	movss	xmm0, DWORD PTR __real@3fc00000
	movss	DWORD PTR [rsp+48], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+40], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3e99999a
	movss	xmm2, DWORD PTR __real@3e99999a
	movss	xmm1, DWORD PTR __real@3ecccccd
	lea	rcx, QWORD PTR $T6657[rsp]
	call	?create_material@@YA?AUMaterial@@MMMMMMMM@Z ; create_material
	lea	rcx, QWORD PTR $T6718[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6550[rsp]
	lea	rcx, QWORD PTR $T6718[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6692[rsp]
	lea	rcx, QWORD PTR $T6550[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	movss	xmm0, DWORD PTR __real@408ccccd
	movss	DWORD PTR [rsp+48], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+40], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	xor	r8d, r8d
	lea	rdx, QWORD PTR $T6692[rsp]
	lea	rcx, QWORD PTR $T6658[rsp]
	call	?create_plane@@YA?AUPrimitive@@UMaterial@@IMMMM@Z ; create_plane
	lea	rcx, QWORD PTR $T6717[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 96					; 00000060H
	rep movsb
	lea	rax, QWORD PTR $T6551[rsp]
	lea	rcx, QWORD PTR $T6717[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 96					; 00000060H
	rep movsb
	movsxd	rax, DWORD PTR curr_prim$[rsp]
	imul	rax, 96					; 00000060H
	mov	rcx, QWORD PTR primitive_list$[rsp]
	lea	rdx, QWORD PTR $T6551[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, rdx
	mov	ecx, 96					; 00000060H
	rep movsb
	mov	eax, DWORD PTR curr_prim$[rsp]
	inc	eax
	mov	DWORD PTR curr_prim$[rsp], eax
; Line 103
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR [rsp+64], xmm0
	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR [rsp+56], xmm0
	movss	xmm0, DWORD PTR __real@3fa66666
	movss	DWORD PTR [rsp+48], xmm0
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR [rsp+40], xmm0
	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR __real@3f333333
	movss	xmm1, DWORD PTR __real@3f333333
	lea	rcx, QWORD PTR $T6659[rsp]
	call	?create_material@@YA?AUMaterial@@MMMMMMMM@Z ; create_material
	lea	rcx, QWORD PTR $T6716[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6552[rsp]
	lea	rcx, QWORD PTR $T6716[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6693[rsp]
	lea	rcx, QWORD PTR $T6552[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	movss	xmm0, DWORD PTR __real@40200000
	movss	DWORD PTR [rsp+48], xmm0
	movss	xmm0, DWORD PTR __real@40400000
	movss	DWORD PTR [rsp+40], xmm0
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@40000000
	xor	r8d, r8d
	lea	rdx, QWORD PTR $T6693[rsp]
	lea	rcx, QWORD PTR $T6660[rsp]
	call	?create_sphere@@YA?AUPrimitive@@UMaterial@@IMMMM@Z ; create_sphere
	lea	rcx, QWORD PTR $T6715[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 96					; 00000060H
	rep movsb
	lea	rax, QWORD PTR $T6553[rsp]
	lea	rcx, QWORD PTR $T6715[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 96					; 00000060H
	rep movsb
	movsxd	rax, DWORD PTR curr_prim$[rsp]
	imul	rax, 96					; 00000060H
	mov	rcx, QWORD PTR primitive_list$[rsp]
	lea	rdx, QWORD PTR $T6553[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, rdx
	mov	ecx, 96					; 00000060H
	rep movsb
	mov	eax, DWORD PTR curr_prim$[rsp]
	inc	eax
	mov	DWORD PTR curr_prim$[rsp], eax
; Line 105
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR [rsp+64], xmm0
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [rsp+56], xmm0
	movss	xmm0, DWORD PTR __real@3fa66666
	movss	DWORD PTR [rsp+48], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+40], xmm0
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR __real@3f333333
	movss	xmm1, DWORD PTR __real@3f333333
	lea	rcx, QWORD PTR $T6661[rsp]
	call	?create_material@@YA?AUMaterial@@MMMMMMMM@Z ; create_material
	lea	rcx, QWORD PTR $T6714[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6554[rsp]
	lea	rcx, QWORD PTR $T6714[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6694[rsp]
	lea	rcx, QWORD PTR $T6554[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [rsp+48], xmm0
	movss	xmm0, DWORD PTR __real@40e00000
	movss	DWORD PTR [rsp+40], xmm0
	movss	xmm0, DWORD PTR __real@bf000000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@c0b00000
	xor	r8d, r8d
	lea	rdx, QWORD PTR $T6694[rsp]
	lea	rcx, QWORD PTR $T6662[rsp]
	call	?create_sphere@@YA?AUPrimitive@@UMaterial@@IMMMM@Z ; create_sphere
	lea	rcx, QWORD PTR $T6713[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 96					; 00000060H
	rep movsb
	lea	rax, QWORD PTR $T6555[rsp]
	lea	rcx, QWORD PTR $T6713[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 96					; 00000060H
	rep movsb
	movsxd	rax, DWORD PTR curr_prim$[rsp]
	imul	rax, 96					; 00000060H
	mov	rcx, QWORD PTR primitive_list$[rsp]
	lea	rdx, QWORD PTR $T6555[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, rdx
	mov	ecx, 96					; 00000060H
	rep movsb
	mov	eax, DWORD PTR curr_prim$[rsp]
	inc	eax
	mov	DWORD PTR curr_prim$[rsp], eax
; Line 107
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR [rsp+64], xmm0
	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR [rsp+56], xmm0
	movss	xmm0, DWORD PTR __real@3fc00000
	movss	DWORD PTR [rsp+48], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+40], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3ecccccd
	movss	xmm2, DWORD PTR __real@3ecccccd
	movss	xmm1, DWORD PTR __real@3ecccccd
	lea	rcx, QWORD PTR $T6663[rsp]
	call	?create_material@@YA?AUMaterial@@MMMMMMMM@Z ; create_material
	lea	rcx, QWORD PTR $T6712[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6556[rsp]
	lea	rcx, QWORD PTR $T6712[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6695[rsp]
	lea	rcx, QWORD PTR $T6556[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [rsp+48], xmm0
	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR [rsp+40], xmm0
	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	mov	r8d, 1
	lea	rdx, QWORD PTR $T6695[rsp]
	lea	rcx, QWORD PTR $T6664[rsp]
	call	?create_sphere@@YA?AUPrimitive@@UMaterial@@IMMMM@Z ; create_sphere
	lea	rcx, QWORD PTR $T6711[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 96					; 00000060H
	rep movsb
	lea	rax, QWORD PTR $T6557[rsp]
	lea	rcx, QWORD PTR $T6711[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 96					; 00000060H
	rep movsb
	movsxd	rax, DWORD PTR curr_prim$[rsp]
	imul	rax, 96					; 00000060H
	mov	rcx, QWORD PTR primitive_list$[rsp]
	lea	rdx, QWORD PTR $T6557[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, rdx
	mov	ecx, 96					; 00000060H
	rep movsb
	mov	eax, DWORD PTR curr_prim$[rsp]
	inc	eax
	mov	DWORD PTR curr_prim$[rsp], eax
; Line 109
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR [rsp+64], xmm0
	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR [rsp+56], xmm0
	movss	xmm0, DWORD PTR __real@3fc00000
	movss	DWORD PTR [rsp+48], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+40], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3f4ccccd
	movss	xmm2, DWORD PTR __real@3f19999a
	movss	xmm1, DWORD PTR __real@3f19999a
	lea	rcx, QWORD PTR $T6665[rsp]
	call	?create_material@@YA?AUMaterial@@MMMMMMMM@Z ; create_material
	lea	rcx, QWORD PTR $T6710[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6558[rsp]
	lea	rcx, QWORD PTR $T6710[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6696[rsp]
	lea	rcx, QWORD PTR $T6558[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [rsp+48], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+40], xmm0
	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@c0400000
	mov	r8d, 1
	lea	rdx, QWORD PTR $T6696[rsp]
	lea	rcx, QWORD PTR $T6666[rsp]
	call	?create_sphere@@YA?AUPrimitive@@UMaterial@@IMMMM@Z ; create_sphere
	lea	rcx, QWORD PTR $T6709[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 96					; 00000060H
	rep movsb
	lea	rax, QWORD PTR $T6559[rsp]
	lea	rcx, QWORD PTR $T6709[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 96					; 00000060H
	rep movsb
	movsxd	rax, DWORD PTR curr_prim$[rsp]
	imul	rax, 96					; 00000060H
	mov	rcx, QWORD PTR primitive_list$[rsp]
	lea	rdx, QWORD PTR $T6559[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, rdx
	mov	ecx, 96					; 00000060H
	rep movsb
	mov	eax, DWORD PTR curr_prim$[rsp]
	inc	eax
	mov	DWORD PTR curr_prim$[rsp], eax
; Line 111
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR [rsp+64], xmm0
	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR [rsp+56], xmm0
	movss	xmm0, DWORD PTR __real@3fc00000
	movss	DWORD PTR [rsp+48], xmm0
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR [rsp+40], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3ecccccd
	movss	xmm2, DWORD PTR __real@3ecccccd
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T6667[rsp]
	call	?create_material@@YA?AUMaterial@@MMMMMMMM@Z ; create_material
	lea	rcx, QWORD PTR $T6708[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6560[rsp]
	lea	rcx, QWORD PTR $T6708[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6697[rsp]
	lea	rcx, QWORD PTR $T6560[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	movss	xmm0, DWORD PTR __real@3fc00000
	movss	DWORD PTR [rsp+48], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+40], xmm0
	movss	xmm0, DWORD PTR __real@c0733333
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@bfc00000
	xor	r8d, r8d
	lea	rdx, QWORD PTR $T6697[rsp]
	lea	rcx, QWORD PTR $T6668[rsp]
	call	?create_sphere@@YA?AUPrimitive@@UMaterial@@IMMMM@Z ; create_sphere
	lea	rcx, QWORD PTR $T6707[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 96					; 00000060H
	rep movsb
	lea	rax, QWORD PTR $T6561[rsp]
	lea	rcx, QWORD PTR $T6707[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 96					; 00000060H
	rep movsb
	movsxd	rax, DWORD PTR curr_prim$[rsp]
	imul	rax, 96					; 00000060H
	mov	rcx, QWORD PTR primitive_list$[rsp]
	lea	rdx, QWORD PTR $T6561[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, rdx
	mov	ecx, 96					; 00000060H
	rep movsb
	mov	eax, DWORD PTR curr_prim$[rsp]
	inc	eax
	mov	DWORD PTR curr_prim$[rsp], eax
; Line 113
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+64], xmm0
	movss	xmm0, DWORD PTR __real@3f19999a
	movss	DWORD PTR [rsp+56], xmm0
	movss	xmm0, DWORD PTR __real@3fc00000
	movss	DWORD PTR [rsp+48], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+40], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3f000000
	movss	xmm2, DWORD PTR __real@3e99999a
	movss	xmm1, DWORD PTR __real@3f000000
	lea	rcx, QWORD PTR $T6669[rsp]
	call	?create_material@@YA?AUMaterial@@MMMMMMMM@Z ; create_material
	lea	rcx, QWORD PTR $T6706[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6562[rsp]
	lea	rcx, QWORD PTR $T6706[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6698[rsp]
	lea	rcx, QWORD PTR $T6562[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	movss	xmm0, DWORD PTR __real@41400000
	movss	DWORD PTR [rsp+48], xmm0
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [rsp+40], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3ecccccd
	xor	r8d, r8d
	lea	rdx, QWORD PTR $T6698[rsp]
	lea	rcx, QWORD PTR $T6670[rsp]
	call	?create_plane@@YA?AUPrimitive@@UMaterial@@IMMMM@Z ; create_plane
	lea	rcx, QWORD PTR $T6705[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 96					; 00000060H
	rep movsb
	lea	rax, QWORD PTR $T6563[rsp]
	lea	rcx, QWORD PTR $T6705[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 96					; 00000060H
	rep movsb
	movsxd	rax, DWORD PTR curr_prim$[rsp]
	imul	rax, 96					; 00000060H
	mov	rcx, QWORD PTR primitive_list$[rsp]
	lea	rdx, QWORD PTR $T6563[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, rdx
	mov	ecx, 96					; 00000060H
	rep movsb
	mov	eax, DWORD PTR curr_prim$[rsp]
	inc	eax
	mov	DWORD PTR curr_prim$[rsp], eax
; Line 115
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+64], xmm0
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [rsp+56], xmm0
	movss	xmm0, DWORD PTR __real@3fc00000
	movss	DWORD PTR [rsp+48], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+40], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3f333333
	movss	xmm2, DWORD PTR __real@3f333333
	movss	xmm1, DWORD PTR __real@3ecccccd
	lea	rcx, QWORD PTR $T6671[rsp]
	call	?create_material@@YA?AUMaterial@@MMMMMMMM@Z ; create_material
	lea	rcx, QWORD PTR $T6704[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6564[rsp]
	lea	rcx, QWORD PTR $T6704[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6699[rsp]
	lea	rcx, QWORD PTR $T6564[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	movss	xmm0, DWORD PTR __real@40eccccd
	movss	DWORD PTR [rsp+48], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+40], xmm0
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	xor	r8d, r8d
	lea	rdx, QWORD PTR $T6699[rsp]
	lea	rcx, QWORD PTR $T6672[rsp]
	call	?create_plane@@YA?AUPrimitive@@UMaterial@@IMMMM@Z ; create_plane
	lea	rcx, QWORD PTR $T6703[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 96					; 00000060H
	rep movsb
	lea	rax, QWORD PTR $T6565[rsp]
	lea	rcx, QWORD PTR $T6703[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 96					; 00000060H
	rep movsb
	movsxd	rax, DWORD PTR curr_prim$[rsp]
	imul	rax, 96					; 00000060H
	mov	rcx, QWORD PTR primitive_list$[rsp]
	lea	rdx, QWORD PTR $T6565[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, rdx
	mov	ecx, 96					; 00000060H
	rep movsb
	mov	eax, DWORD PTR curr_prim$[rsp]
	inc	eax
	mov	DWORD PTR curr_prim$[rsp], eax
; Line 117
	mov	DWORD PTR x$6566[rsp], 0
	jmp	SHORT $LN6@create_sce
$LN5@create_sce:
	mov	eax, DWORD PTR x$6566[rsp]
	inc	eax
	mov	DWORD PTR x$6566[rsp], eax
$LN6@create_sce:
	cmp	DWORD PTR x$6566[rsp], 8
	jge	$LN4@create_sce
; Line 118
	mov	DWORD PTR y$6570[rsp], 0
	jmp	SHORT $LN3@create_sce
$LN2@create_sce:
	mov	eax, DWORD PTR y$6570[rsp]
	inc	eax
	mov	DWORD PTR y$6570[rsp], eax
$LN3@create_sce:
	cmp	DWORD PTR y$6570[rsp], 7
	jge	$LN1@create_sce
; Line 120
	movss	xmm0, DWORD PTR __real@3f19999a
	movss	DWORD PTR [rsp+64], xmm0
	movss	xmm0, DWORD PTR __real@3f19999a
	movss	DWORD PTR [rsp+56], xmm0
	movss	xmm0, DWORD PTR __real@3fc00000
	movss	DWORD PTR [rsp+48], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+40], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3ecccccd
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3e99999a
	lea	rcx, QWORD PTR $T6673[rsp]
	call	?create_material@@YA?AUMaterial@@MMMMMMMM@Z ; create_material
	lea	rcx, QWORD PTR $T6702[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR $T6574[rsp]
	lea	rcx, QWORD PTR $T6702[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	movd	xmm0, DWORD PTR y$6570[rsp]
	cvtdq2ps xmm0, xmm0
	mulss	xmm0, DWORD PTR __real@3fc00000
	movss	xmm1, DWORD PTR __real@c089999a
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movd	xmm1, DWORD PTR x$6566[rsp]
	cvtdq2ps xmm1, xmm1
	mulss	xmm1, DWORD PTR __real@3fc00000
	movss	xmm2, DWORD PTR __real@c0900000
	addss	xmm2, xmm1
	movaps	xmm1, xmm2
	lea	rax, QWORD PTR $T6700[rsp]
	lea	rcx, QWORD PTR $T6574[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
	movss	xmm2, DWORD PTR __real@3e99999a
	movss	DWORD PTR [rsp+48], xmm2
	movss	xmm2, DWORD PTR __real@41200000
	movss	DWORD PTR [rsp+40], xmm2
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	xor	r8d, r8d
	lea	rdx, QWORD PTR $T6700[rsp]
	lea	rcx, QWORD PTR $T6674[rsp]
	call	?create_sphere@@YA?AUPrimitive@@UMaterial@@IMMMM@Z ; create_sphere
	lea	rcx, QWORD PTR $T6701[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 96					; 00000060H
	rep movsb
	lea	rax, QWORD PTR $T6575[rsp]
	lea	rcx, QWORD PTR $T6701[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 96					; 00000060H
	rep movsb
	movsxd	rax, DWORD PTR curr_prim$[rsp]
	imul	rax, 96					; 00000060H
	mov	rcx, QWORD PTR primitive_list$[rsp]
	lea	rdx, QWORD PTR $T6575[rsp]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, rdx
	mov	ecx, 96					; 00000060H
	rep movsb
	mov	eax, DWORD PTR curr_prim$[rsp]
	inc	eax
	mov	DWORD PTR curr_prim$[rsp], eax
; Line 121
	jmp	$LN2@create_sce
$LN1@create_sce:
	jmp	$LN5@create_sce
$LN4@create_sce:
$LN7@create_sce:
$LN8@create_sce:
; Line 124
	mov	rax, QWORD PTR primitive_list$[rsp]
; Line 125
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 12200				; 00002fa8H
	pop	rdi
	pop	rsi
	ret	0
?create_scene@@YAPEAUPrimitive@@AEAI@Z ENDP		; create_scene
_TEXT	ENDS
END

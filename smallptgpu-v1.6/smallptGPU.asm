; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?camera@@3UCamera@@A				; camera
PUBLIC	?sphereCount@@3IA				; sphereCount
PUBLIC	?spheres@@3PEAUSphere@@EA			; spheres
PUBLIC	?useGPU@@3HA					; useGPU
PUBLIC	?useOpenCL@@3HA					; useOpenCL
PUBLIC	?currentSample@@3HA				; currentSample
_BSS	SEGMENT
?camera@@3UCamera@@A DB 03cH DUP (?)			; camera
?sphereCount@@3IA DD 01H DUP (?)			; sphereCount
?spheres@@3PEAUSphere@@EA DQ 01H DUP (?)		; spheres
forceWorkSize DD 01H DUP (?)
?currentSample@@3HA DD 01H DUP (?)			; currentSample
_BSS	ENDS
CONST	SEGMENT
$SG9417	DB	'rendering_kernel.cl', 00H
$SG9467	DB	'r', 00H
	ORG $+2
$SG9428	DB	'Failed to release OpenCL color buffer: %d', 0aH, 00H
	ORG $+5
$SG9430	DB	'Failed to release OpenCL pixel buffer: %d', 0aH, 00H
	ORG $+5
$SG9432	DB	'Failed to release OpenCL seed buffer: %d', 0aH, 00H
	ORG $+6
$SG9454	DB	'Failed to create OpenCL output buffer: %d', 0aH, 00H
	ORG $+5
$SG9457	DB	'Failed to create OpenCL pixel buffer: %d', 0aH, 00H
	ORG $+6
$SG9460	DB	'Failed to create OpenCL seed buffer: %d', 0aH, 00H
	ORG $+7
$SG9462	DB	'Failed to write the OpenCL seeds buffer: %d', 0aH, 00H
	ORG $+3
$SG9469	DB	'Failed to open file ''%s''', 0aH, 00H
	ORG $+6
$SG9471	DB	'Failed to seek file ''%s''', 0aH, 00H
	ORG $+6
$SG9474	DB	'Failed to check position on file ''%s''', 0aH, 00H
	ORG $+1
$SG9479	DB	'Failed to allocate memory for file ''%s''', 0aH, 00H
	ORG $+7
$SG9480	DB	'Reading file ''%s'' (size %ld bytes)', 0aH, 00H
	ORG $+4
$SG9485	DB	'Failed to read file ''%s'' (read %ld)', 0aH, 00H
	ORG $+3
$SG9495	DB	'Failed to get OpenCL platforms', 0aH, 00H
$SG9501	DB	'Failed to get OpenCL platform IDs', 0aH, 00H
	ORG $+5
$SG9508	DB	'Failed to get OpenCL platform IDs', 0aH, 00H
	ORG $+5
$SG9509	DB	'OpenCL Platform %d: %s', 0aH, 00H
$SG9513	DB	'Failed to get OpenCL device IDs', 0aH, 00H
	ORG $+7
$SG9523	DB	'Failed to get OpenCL device info: %d', 0aH, 00H
	ORG $+2
$SG9530	DB	'TYPE_ALL', 00H
	ORG $+7
$SG9532	DB	'TYPE_DEFAULT', 00H
	ORG $+3
$SG9534	DB	'TYPE_CPU', 00H
	ORG $+7
$SG9537	DB	'TYPE_GPU', 00H
	ORG $+7
$SG9540	DB	'TYPE_UNKNOWN', 00H
	ORG $+3
$SG9541	DB	'OpenCL Device %d: Type = %s', 0aH, 00H
	ORG $+3
$SG9545	DB	'Failed to get OpenCL device info: %d', 0aH, 00H
	ORG $+2
$SG9546	DB	'OpenCL Device %d: Name = %s', 0aH, 00H
	ORG $+3
$SG9550	DB	'Failed to get OpenCL device info: %d', 0aH, 00H
	ORG $+2
$SG9551	DB	'OpenCL Device %d: Compute units = %u', 0aH, 00H
	ORG $+2
$SG9555	DB	'Failed to get OpenCL device info: %d', 0aH, 00H
	ORG $+2
$SG9557	DB	'OpenCL Device %d: Max. work group size = %d', 0aH, 00H
	ORG $+3
$SG9559	DB	'Unable to select an appropriate device', 0aH, 00H
$SG9564	DB	'Failed to open OpenCL context', 0aH, 00H
	ORG $+1
$SG9567	DB	'Failed to get OpenCL context info: %d', 0aH, 00H
	ORG $+1
$SG9575	DB	'Failed to get OpenCL device info: %d', 0aH, 00H
	ORG $+2
$SG9582	DB	'TYPE_ALL', 00H
	ORG $+7
$SG9584	DB	'TYPE_DEFAULT', 00H
	ORG $+3
$SG9586	DB	'TYPE_CPU', 00H
	ORG $+7
$SG9588	DB	'TYPE_GPU', 00H
	ORG $+7
$SG9590	DB	'TYPE_UNKNOWN', 00H
	ORG $+3
$SG9591	DB	'[SELECTED] OpenCL Device %d: Type = %s', 0aH, 00H
$SG9595	DB	'Failed to get OpenCL device info: %d', 0aH, 00H
	ORG $+2
$SG9596	DB	'[SELECTED] OpenCL Device %d: Name = %s', 0aH, 00H
$SG9600	DB	'Failed to get OpenCL device info: %d', 0aH, 00H
	ORG $+2
$SG9601	DB	'[SELECTED] OpenCL Device %d: Compute units = %u', 0aH, 00H
	ORG $+7
$SG9605	DB	'Failed to get OpenCL device info: %d', 0aH, 00H
	ORG $+2
$SG9607	DB	'[SELECTED] OpenCL Device %d: Max. work group size = %d', 0aH
	DB	00H
$SG9610	DB	'Failed to create OpenCL command queue: %d', 0aH, 00H
	ORG $+5
$SG9613	DB	'Failed to create OpenCL scene buffer: %d', 0aH, 00H
	ORG $+6
$SG9616	DB	'Failed to write the OpenCL scene buffer: %d', 0aH, 00H
	ORG $+3
$SG9619	DB	'Failed to create OpenCL camera buffer: %d', 0aH, 00H
	ORG $+5
$SG9622	DB	'Failed to write the OpenCL camera buffer: %d', 0aH, 00H
	ORG $+2
$SG9625	DB	'Failed to open OpenCL kernel sources: %d', 0aH, 00H
	ORG $+2
$SG9626	DB	'-I. ', 00H
	ORG $+7
$SG9628	DB	'Failed to build OpenCL kernel: %d', 0aH, 00H
	ORG $+5
$SG9631	DB	'Failed to get OpenCL kernel info size: %d', 0aH, 00H
	ORG $+5
$SG9635	DB	'Failed to get OpenCL kernel info: %d', 0aH, 00H
	ORG $+2
$SG9636	DB	'OpenCL Programm Build Log: %s', 0aH, 00H
	ORG $+1
$SG9637	DB	'RadianceGPU', 00H
	ORG $+4
$SG9639	DB	'Failed to create OpenCL kernel: %d', 0aH, 00H
	ORG $+4
$SG9643	DB	'Failed to get OpenCL kernel work group size info: %d', 0aH
	DB	00H
	ORG $+2
$SG9645	DB	'OpenCL Device 0: kernel work group size = %d', 0aH, 00H
	ORG $+2
$SG9647	DB	'OpenCL Device 0: forced kernel work group size = %d', 0aH
	DB	00H
	ORG $+3
$SG9655	DB	'Failed to enqueue OpenCL work: %d', 0aH, 00H
	ORG $+5
$SG9664	DB	'Failed to set OpenCL arg. #1: %d', 0aH, 00H
	ORG $+6
$SG9668	DB	'Failed to set OpenCL arg. #2: %d', 0aH, 00H
	ORG $+6
$SG9672	DB	'Failed to set OpenCL arg. #3: %d', 0aH, 00H
	ORG $+6
$SG9676	DB	'Failed to set OpenCL arg. #4: %d', 0aH, 00H
	ORG $+6
$SG9680	DB	'Failed to set OpenCL arg. #5: %d', 0aH, 00H
	ORG $+6
$SG9684	DB	'Failed to set OpenCL arg. #6: %d', 0aH, 00H
	ORG $+6
$SG9688	DB	'Failed to set OpenCL arg. #7: %d', 0aH, 00H
	ORG $+6
$SG9692	DB	'Failed to set OpenCL arg. #8: %d', 0aH, 00H
	ORG $+6
$SG9696	DB	'Failed to set OpenCL arg. #9: %d', 0aH, 00H
	ORG $+6
$SG9708	DB	'Failed to read the OpenCL pixel buffer: %d', 0aH, 00H
	ORG $+4
$SG9712	DB	'Rendering time %.3f sec (pass %d)  Sample/sec  %.1fK', 0aH
	DB	00H
	ORG $+2
$SG9718	DB	'Failed to write the OpenCL scene buffer: %d', 0aH, 00H
	ORG $+3
$SG9727	DB	'Failed to write the OpenCL camera buffer: %d', 0aH, 00H
	ORG $+2
$SG9733	DB	'SmallPT GPU V1.6 (Written by David Bucciarelli)', 00H
CONST	ENDS
_DATA	SEGMENT
CornellSpheres DD 0461c4000r			; 10000
	DD	0461c4400r			; 10001
	DD	042233333r			; 40.8
	DD	042a33333r			; 81.6
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f400000r			; 0.75
	DD	03e800000r			; 0.25
	DD	03e800000r			; 0.25
	DD	00H
	DD	0461c4000r			; 10000
	DD	0c61ab400r			; -9901
	DD	042233333r			; 40.8
	DD	042a33333r			; 81.6
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03e800000r			; 0.25
	DD	03e800000r			; 0.25
	DD	03f400000r			; 0.75
	DD	00H
	DD	0461c4000r			; 10000
	DD	042480000r			; 50
	DD	042233333r			; 40.8
	DD	0461c4000r			; 10000
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f400000r			; 0.75
	DD	03f400000r			; 0.75
	DD	03f400000r			; 0.75
	DD	00H
	DD	0461c4000r			; 10000
	DD	042480000r			; 50
	DD	042233333r			; 40.8
	DD	0c6180800r			; -9730
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	00H
	DD	0461c4000r			; 10000
	DD	042480000r			; 50
	DD	0461c4000r			; 10000
	DD	042a33333r			; 81.6
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f400000r			; 0.75
	DD	03f400000r			; 0.75
	DD	03f400000r			; 0.75
	DD	00H
	DD	0461c4000r			; 10000
	DD	042480000r			; 50
	DD	0c61af99ar			; -9918.4
	DD	042a33333r			; 81.6
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f400000r			; 0.75
	DD	03f400000r			; 0.75
	DD	03f400000r			; 0.75
	DD	00H
	DD	041840000r			; 16.5
	DD	041d80000r			; 27
	DD	041840000r			; 16.5
	DD	0423c0000r			; 47
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f666666r			; 0.9
	DD	03f666666r			; 0.9
	DD	03f666666r			; 0.9
	DD	01H
	DD	041840000r			; 16.5
	DD	042920000r			; 73
	DD	041840000r			; 16.5
	DD	0429c0000r			; 78
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f666666r			; 0.9
	DD	03f666666r			; 0.9
	DD	03f666666r			; 0.9
	DD	02H
	DD	040e00000r			; 7
	DD	042480000r			; 50
	DD	042853333r			; 66.6
	DD	042a33333r			; 81.6
	DD	041400000r			; 12
	DD	041400000r			; 12
	DD	041400000r			; 12
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	00H
?useGPU@@3HA DD	01H					; useGPU
?useOpenCL@@3HA DD 01H					; useOpenCL
workGroupSize DD 01H
kernelFileName DQ FLAT:$SG9417
_DATA	ENDS
PUBLIC	__real@408f400000000000
PUBLIC	__real@3f000000
PUBLIC	__real@42c80000
PUBLIC	?UpdateRenderingGPU@@YAXXZ			; UpdateRenderingGPU
EXTRN	__imp_sprintf:PROC
EXTRN	?captionBuffer@@3PADA:BYTE			; captionBuffer
EXTRN	clEnqueueReadBuffer:PROC
EXTRN	?pixels@@3PEAIEA:QWORD				; pixels
EXTRN	clFinish:PROC
EXTRN	?height@@3HA:DWORD				; height
EXTRN	?width@@3HA:DWORD				; width
EXTRN	__imp_exit:PROC
EXTRN	__imp_fprintf:PROC
EXTRN	__imp___iob_func:PROC
EXTRN	clSetKernelArg:PROC
EXTRN	?WallClockTime@@YANXZ:PROC			; WallClockTime
EXTRN	_fltused:DWORD
EXTRN	_RTC_Shutdown:PROC
EXTRN	_RTC_InitBase:PROC
_BSS	SEGMENT
commandQueue DQ	01H DUP (?)
pixelBuffer DQ	01H DUP (?)
cameraBuffer DQ	01H DUP (?)
sphereBuffer DQ	01H DUP (?)
seedBuffer DQ	01H DUP (?)
kernel	DQ	01H DUP (?)
colorBuffer DQ	01H DUP (?)
_BSS	ENDS
pdata	SEGMENT
$pdata$?UpdateRenderingGPU@@YAXXZ DD imagerel $LN20
	DD	imagerel $LN20+1269
	DD	imagerel $unwind$?UpdateRenderingGPU@@YAXXZ
pdata	ENDS
xdata	SEGMENT
$unwind$?UpdateRenderingGPU@@YAXXZ DD 031801H
	DD	0120109H
	DD	07002H
xdata	ENDS
;	COMDAT __real@408f400000000000
; File c:\users\mark\documents\smallptgpu-v1.6\smallptgpu.cpp
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
startTime$ = 80
startSampleCount$ = 88
status$ = 92
k$9699 = 96
tresholdTime$9700 = 100
elapsedTime$9704 = 104
elapsedTime$ = 112
samples$ = 120
sampleSec$ = 128
tv210 = 136
?UpdateRenderingGPU@@YAXXZ PROC				; UpdateRenderingGPU
; Line 642
$LN20:
	push	rdi
	sub	rsp, 144				; 00000090H
	mov	rdi, rsp
	mov	ecx, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 643
	call	?WallClockTime@@YANXZ			; WallClockTime
	movsdx	QWORD PTR startTime$[rsp], xmm0
; Line 644
	mov	eax, DWORD PTR ?currentSample@@3HA	; currentSample
	mov	DWORD PTR startSampleCount$[rsp], eax
; Line 651
	lea	r9, OFFSET FLAT:colorBuffer
	mov	r8d, 8
	xor	edx, edx
	mov	rcx, QWORD PTR kernel
	call	clSetKernelArg
	mov	DWORD PTR status$[rsp], eax
; Line 652
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN15@UpdateRend
; Line 653
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9664
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 654
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN15@UpdateRend:
; Line 661
	lea	r9, OFFSET FLAT:seedBuffer
	mov	r8d, 8
	mov	edx, 1
	mov	rcx, QWORD PTR kernel
	call	clSetKernelArg
	mov	DWORD PTR status$[rsp], eax
; Line 662
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN14@UpdateRend
; Line 663
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9668
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 664
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN14@UpdateRend:
; Line 671
	lea	r9, OFFSET FLAT:sphereBuffer
	mov	r8d, 8
	mov	edx, 2
	mov	rcx, QWORD PTR kernel
	call	clSetKernelArg
	mov	DWORD PTR status$[rsp], eax
; Line 672
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN13@UpdateRend
; Line 673
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9672
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 674
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN13@UpdateRend:
; Line 681
	lea	r9, OFFSET FLAT:cameraBuffer
	mov	r8d, 8
	mov	edx, 3
	mov	rcx, QWORD PTR kernel
	call	clSetKernelArg
	mov	DWORD PTR status$[rsp], eax
; Line 682
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN12@UpdateRend
; Line 683
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9676
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 684
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN12@UpdateRend:
; Line 691
	lea	r9, OFFSET FLAT:?sphereCount@@3IA	; sphereCount
	mov	r8d, 4
	mov	edx, 4
	mov	rcx, QWORD PTR kernel
	call	clSetKernelArg
	mov	DWORD PTR status$[rsp], eax
; Line 692
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN11@UpdateRend
; Line 693
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9680
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 694
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN11@UpdateRend:
; Line 701
	lea	r9, OFFSET FLAT:?width@@3HA		; width
	mov	r8d, 4
	mov	edx, 5
	mov	rcx, QWORD PTR kernel
	call	clSetKernelArg
	mov	DWORD PTR status$[rsp], eax
; Line 702
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN10@UpdateRend
; Line 703
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9684
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 704
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN10@UpdateRend:
; Line 711
	lea	r9, OFFSET FLAT:?height@@3HA		; height
	mov	r8d, 4
	mov	edx, 6
	mov	rcx, QWORD PTR kernel
	call	clSetKernelArg
	mov	DWORD PTR status$[rsp], eax
; Line 712
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN9@UpdateRend
; Line 713
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9688
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 714
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN9@UpdateRend:
; Line 721
	lea	r9, OFFSET FLAT:?currentSample@@3HA	; currentSample
	mov	r8d, 4
	mov	edx, 7
	mov	rcx, QWORD PTR kernel
	call	clSetKernelArg
	mov	DWORD PTR status$[rsp], eax
; Line 722
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN8@UpdateRend
; Line 723
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9692
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 724
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN8@UpdateRend:
; Line 731
	lea	r9, OFFSET FLAT:pixelBuffer
	mov	r8d, 8
	mov	edx, 8
	mov	rcx, QWORD PTR kernel
	call	clSetKernelArg
	mov	DWORD PTR status$[rsp], eax
; Line 732
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN7@UpdateRend
; Line 733
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9696
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 734
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN7@UpdateRend:
; Line 739
	cmp	DWORD PTR ?currentSample@@3HA, 20	; currentSample
	jge	SHORT $LN6@UpdateRend
; Line 740
	call	?ExecuteKernel@@YAXXZ			; ExecuteKernel
; Line 741
	mov	eax, DWORD PTR ?currentSample@@3HA	; currentSample
	inc	eax
	mov	DWORD PTR ?currentSample@@3HA, eax	; currentSample
; Line 742
	jmp	$LN5@UpdateRend
$LN6@UpdateRend:
; Line 744
	mov	eax, DWORD PTR ?currentSample@@3HA	; currentSample
	sub	eax, 20
	cmp	eax, 100				; 00000064H
	jge	SHORT $LN18@UpdateRend
	mov	eax, DWORD PTR ?currentSample@@3HA	; currentSample
	sub	eax, 20
	mov	DWORD PTR tv210[rsp], eax
	jmp	SHORT $LN19@UpdateRend
$LN18@UpdateRend:
	mov	DWORD PTR tv210[rsp], 100		; 00000064H
$LN19@UpdateRend:
	movd	xmm0, DWORD PTR tv210[rsp]
	cvtdq2ps xmm0, xmm0
	divss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR k$9699[rsp], xmm0
; Line 745
	movss	xmm0, DWORD PTR __real@3f000000
	mulss	xmm0, DWORD PTR k$9699[rsp]
	movss	DWORD PTR tresholdTime$9700[rsp], xmm0
$LN4@UpdateRend:
; Line 747
	call	?ExecuteKernel@@YAXXZ			; ExecuteKernel
; Line 748
	mov	rcx, QWORD PTR commandQueue
	call	clFinish
; Line 749
	mov	eax, DWORD PTR ?currentSample@@3HA	; currentSample
	inc	eax
	mov	DWORD PTR ?currentSample@@3HA, eax	; currentSample
; Line 751
	call	?WallClockTime@@YANXZ			; WallClockTime
	subsd	xmm0, QWORD PTR startTime$[rsp]
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR elapsedTime$9704[rsp], xmm0
; Line 752
	movss	xmm0, DWORD PTR elapsedTime$9704[rsp]
	comiss	xmm0, DWORD PTR tresholdTime$9700[rsp]
	jbe	SHORT $LN2@UpdateRend
; Line 753
	jmp	SHORT $LN3@UpdateRend
$LN2@UpdateRend:
; Line 754
	jmp	SHORT $LN4@UpdateRend
$LN3@UpdateRend:
$LN5@UpdateRend:
; Line 769
	mov	eax, DWORD PTR ?width@@3HA		; width
	imul	eax, DWORD PTR ?height@@3HA		; height
	cdqe
	shl	rax, 2
	mov	QWORD PTR [rsp+64], 0
	mov	QWORD PTR [rsp+56], 0
	mov	DWORD PTR [rsp+48], 0
	mov	rcx, QWORD PTR ?pixels@@3PEAIEA		; pixels
	mov	QWORD PTR [rsp+40], rcx
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 1
	mov	rdx, QWORD PTR pixelBuffer
	mov	rcx, QWORD PTR commandQueue
	call	clEnqueueReadBuffer
	mov	DWORD PTR status$[rsp], eax
; Line 770
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN1@UpdateRend
; Line 771
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9708
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 772
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN1@UpdateRend:
; Line 777
	call	?WallClockTime@@YANXZ			; WallClockTime
	subsd	xmm0, QWORD PTR startTime$[rsp]
	movsdx	QWORD PTR elapsedTime$[rsp], xmm0
; Line 778
	mov	eax, DWORD PTR startSampleCount$[rsp]
	mov	ecx, DWORD PTR ?currentSample@@3HA	; currentSample
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR samples$[rsp], eax
; Line 779
	mov	eax, DWORD PTR samples$[rsp]
	imul	eax, DWORD PTR ?height@@3HA		; height
	imul	eax, DWORD PTR ?width@@3HA		; width
	movd	xmm0, eax
	cvtdq2pd xmm0, xmm0
	divsd	xmm0, QWORD PTR elapsedTime$[rsp]
	movsdx	QWORD PTR sampleSec$[rsp], xmm0
; Line 781
	movsdx	xmm0, QWORD PTR sampleSec$[rsp]
	divsd	xmm0, QWORD PTR __real@408f400000000000
	movsdx	QWORD PTR [rsp+32], xmm0
	mov	r9d, DWORD PTR ?currentSample@@3HA	; currentSample
	movsdx	xmm2, QWORD PTR elapsedTime$[rsp]
	movd	r8, xmm2
	lea	rdx, OFFSET FLAT:$SG9712
	lea	rcx, OFFSET FLAT:?captionBuffer@@3PADA	; captionBuffer
	call	QWORD PTR __imp_sprintf
$LN17@UpdateRend:
; Line 782
	add	rsp, 144				; 00000090H
	pop	rdi
	ret	0
?UpdateRenderingGPU@@YAXXZ ENDP				; UpdateRenderingGPU
_TEXT	ENDS
EXTRN	clEnqueueNDRangeKernel:PROC
EXTRN	_RTC_CheckStackVars:PROC
pdata	SEGMENT
$pdata$?ExecuteKernel@@YAXXZ DD imagerel ?ExecuteKernel@@YAXXZ
	DD	imagerel ?ExecuteKernel@@YAXXZ+305
	DD	imagerel $unwind$?ExecuteKernel@@YAXXZ
pdata	ENDS
xdata	SEGMENT
$unwind$?ExecuteKernel@@YAXXZ DD 031801H
	DD	0140109H
	DD	07002H
xdata	ENDS
CONST	SEGMENT
?ExecuteKernel@@YAXXZ$rtcName$0 DB 067H			; ExecuteKernel
	DB	06cH
	DB	06fH
	DB	062H
	DB	061H
	DB	06cH
	DB	054H
	DB	068H
	DB	072H
	DB	065H
	DB	061H
	DB	064H
	DB	073H
	DB	00H
	ORG $+2
?ExecuteKernel@@YAXXZ$rtcName$1 DB 06cH			; ExecuteKernel
	DB	06fH
	DB	063H
	DB	061H
	DB	06cH
	DB	054H
	DB	068H
	DB	072H
	DB	065H
	DB	061H
	DB	064H
	DB	073H
	DB	00H
	ORG $+3
?ExecuteKernel@@YAXXZ$rtcVarDesc DD 078H		; ExecuteKernel
	DD	08H
	DQ	FLAT:?ExecuteKernel@@YAXXZ$rtcName$1
	DD	058H
	DD	08H
	DQ	FLAT:?ExecuteKernel@@YAXXZ$rtcName$0
	ORG $+96
?ExecuteKernel@@YAXXZ$rtcFrameData DD 02H		; ExecuteKernel
	DD	00H
	DQ	FLAT:?ExecuteKernel@@YAXXZ$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
_TEXT	SEGMENT
globalThreads$ = 88
localThreads$ = 120
status$ = 132
tv66 = 136
tv69 = 144
?ExecuteKernel@@YAXXZ PROC				; ExecuteKernel
; Line 617
	push	rdi
	sub	rsp, 160				; 000000a0H
	mov	rdi, rsp
	mov	ecx, 40					; 00000028H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 620
	mov	eax, DWORD PTR ?width@@3HA		; width
	imul	eax, DWORD PTR ?height@@3HA		; height
	cdqe
	mov	QWORD PTR globalThreads$[rsp], rax
; Line 621
	mov	eax, DWORD PTR workGroupSize
	mov	QWORD PTR tv66[rsp], rax
	xor	edx, edx
	mov	rax, QWORD PTR globalThreads$[rsp]
	mov	rcx, QWORD PTR tv66[rsp]
	div	rcx
	mov	rax, rdx
	test	rax, rax
	je	SHORT $LN2@ExecuteKer
; Line 622
	mov	eax, DWORD PTR workGroupSize
	mov	QWORD PTR tv69[rsp], rax
	xor	edx, edx
	mov	rax, QWORD PTR globalThreads$[rsp]
	mov	rcx, QWORD PTR tv69[rsp]
	div	rcx
	inc	rax
	mov	ecx, DWORD PTR workGroupSize
	imul	rax, rcx
	mov	QWORD PTR globalThreads$[rsp], rax
$LN2@ExecuteKer:
; Line 624
	mov	eax, DWORD PTR workGroupSize
	mov	QWORD PTR localThreads$[rsp], rax
; Line 635
	mov	QWORD PTR [rsp+64], 0
	mov	QWORD PTR [rsp+56], 0
	mov	DWORD PTR [rsp+48], 0
	lea	rax, QWORD PTR localThreads$[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR globalThreads$[rsp]
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 1
	mov	rdx, QWORD PTR kernel
	mov	rcx, QWORD PTR commandQueue
	call	clEnqueueNDRangeKernel
	mov	DWORD PTR status$[rsp], eax
; Line 636
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN1@ExecuteKer
; Line 637
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9655
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 638
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN1@ExecuteKer:
$LN4@ExecuteKer:
; Line 640
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?ExecuteKernel@@YAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 160				; 000000a0H
	pop	rdi
	ret	0
?ExecuteKernel@@YAXXZ ENDP				; ExecuteKernel
_TEXT	ENDS
PUBLIC	?ReInitSceneGPU@@YAXXZ				; ReInitSceneGPU
EXTRN	clEnqueueWriteBuffer:PROC
pdata	SEGMENT
$pdata$?ReInitSceneGPU@@YAXXZ DD imagerel $LN4
	DD	imagerel $LN4+171
	DD	imagerel $unwind$?ReInitSceneGPU@@YAXXZ
pdata	ENDS
xdata	SEGMENT
$unwind$?ReInitSceneGPU@@YAXXZ DD 021501H
	DD	07002b206H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
_TEXT	SEGMENT
status$ = 80
?ReInitSceneGPU@@YAXXZ PROC				; ReInitSceneGPU
; Line 784
$LN4:
	push	rdi
	sub	rsp, 96					; 00000060H
	mov	rdi, rsp
	mov	ecx, 24
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 785
	mov	DWORD PTR ?currentSample@@3HA, 0	; currentSample
; Line 798
	mov	eax, DWORD PTR ?sphereCount@@3IA	; sphereCount
	imul	rax, 44					; 0000002cH
	mov	QWORD PTR [rsp+64], 0
	mov	QWORD PTR [rsp+56], 0
	mov	DWORD PTR [rsp+48], 0
	mov	rcx, QWORD PTR ?spheres@@3PEAUSphere@@EA ; spheres
	mov	QWORD PTR [rsp+40], rcx
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 1
	mov	rdx, QWORD PTR sphereBuffer
	mov	rcx, QWORD PTR commandQueue
	call	clEnqueueWriteBuffer
	mov	DWORD PTR status$[rsp], eax
; Line 799
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN1@ReInitScen
; Line 800
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9718
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 801
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN1@ReInitScen:
$LN3@ReInitScen:
; Line 803
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
?ReInitSceneGPU@@YAXXZ ENDP				; ReInitSceneGPU
_TEXT	ENDS
PUBLIC	?ReInitGPU@@YAXH@Z				; ReInitGPU
EXTRN	?UpdateCamera@@YAXXZ:PROC			; UpdateCamera
pdata	SEGMENT
$pdata$?ReInitGPU@@YAXH@Z DD imagerel $LN6
	DD	imagerel $LN6+201
	DD	imagerel $unwind$?ReInitGPU@@YAXH@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?ReInitGPU@@YAXH@Z DD 021c01H
	DD	07005b209H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
_TEXT	SEGMENT
status$ = 80
reallocBuffers$ = 112
?ReInitGPU@@YAXH@Z PROC					; ReInitGPU
; Line 805
$LN6:
	mov	DWORD PTR [rsp+8], ecx
	push	rdi
	sub	rsp, 96					; 00000060H
	mov	rdi, rsp
	mov	ecx, 24
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+112]
; Line 807
	cmp	DWORD PTR reallocBuffers$[rsp], 0
	je	SHORT $LN3@ReInitGPU
; Line 808
	call	?FreeBuffers@@YAXXZ			; FreeBuffers
; Line 809
	call	?UpdateCamera@@YAXXZ			; UpdateCamera
; Line 810
	call	?AllocateBuffers@@YAXXZ			; AllocateBuffers
; Line 811
	jmp	SHORT $LN2@ReInitGPU
$LN3@ReInitGPU:
; Line 812
	call	?UpdateCamera@@YAXXZ			; UpdateCamera
$LN2@ReInitGPU:
; Line 823
	mov	QWORD PTR [rsp+64], 0
	mov	QWORD PTR [rsp+56], 0
	mov	DWORD PTR [rsp+48], 0
	lea	rax, OFFSET FLAT:?camera@@3UCamera@@A	; camera
	mov	QWORD PTR [rsp+40], rax
	mov	QWORD PTR [rsp+32], 60			; 0000003cH
	xor	r9d, r9d
	mov	r8d, 1
	mov	rdx, QWORD PTR cameraBuffer
	mov	rcx, QWORD PTR commandQueue
	call	clEnqueueWriteBuffer
	mov	DWORD PTR status$[rsp], eax
; Line 824
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN1@ReInitGPU
; Line 825
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9727
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 826
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN1@ReInitGPU:
; Line 829
	mov	DWORD PTR ?currentSample@@3HA, 0	; currentSample
$LN5@ReInitGPU:
; Line 830
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
?ReInitGPU@@YAXH@Z ENDP					; ReInitGPU
_TEXT	ENDS
EXTRN	__imp_free:PROC
EXTRN	clReleaseMemObject:PROC
_BSS	SEGMENT
colors	DQ	01H DUP (?)
seeds	DQ	01H DUP (?)
_BSS	ENDS
pdata	SEGMENT
$pdata$?FreeBuffers@@YAXXZ DD imagerel ?FreeBuffers@@YAXXZ
	DD	imagerel ?FreeBuffers@@YAXXZ+261
	DD	imagerel $unwind$?FreeBuffers@@YAXXZ
pdata	ENDS
xdata	SEGMENT
$unwind$?FreeBuffers@@YAXXZ DD 021501H
	DD	070025206H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
_TEXT	SEGMENT
status$ = 32
?FreeBuffers@@YAXXZ PROC				; FreeBuffers
; Line 76
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 77
	mov	rcx, QWORD PTR colorBuffer
	call	clReleaseMemObject
	mov	DWORD PTR status$[rsp], eax
; Line 78
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN3@FreeBuffer
; Line 79
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9428
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 80
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN3@FreeBuffer:
; Line 83
	mov	rcx, QWORD PTR pixelBuffer
	call	clReleaseMemObject
	mov	DWORD PTR status$[rsp], eax
; Line 84
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN2@FreeBuffer
; Line 85
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9430
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 86
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN2@FreeBuffer:
; Line 89
	mov	rcx, QWORD PTR seedBuffer
	call	clReleaseMemObject
	mov	DWORD PTR status$[rsp], eax
; Line 90
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN1@FreeBuffer
; Line 91
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9432
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 92
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN1@FreeBuffer:
; Line 95
	mov	rcx, QWORD PTR seeds
	call	QWORD PTR __imp_free
; Line 96
	mov	rcx, QWORD PTR colors
	call	QWORD PTR __imp_free
; Line 97
	mov	rcx, QWORD PTR ?pixels@@3PEAIEA		; pixels
	call	QWORD PTR __imp_free
$LN5@FreeBuffer:
; Line 98
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?FreeBuffers@@YAXXZ ENDP				; FreeBuffers
_TEXT	ENDS
EXTRN	clCreateBuffer:PROC
EXTRN	__imp_rand:PROC
EXTRN	__imp_malloc:PROC
_BSS	SEGMENT
context	DQ	01H DUP (?)
_BSS	ENDS
pdata	SEGMENT
$pdata$?AllocateBuffers@@YAXXZ DD imagerel ?AllocateBuffers@@YAXXZ
	DD	imagerel ?AllocateBuffers@@YAXXZ+774
	DD	imagerel $unwind$?AllocateBuffers@@YAXXZ
pdata	ENDS
xdata	SEGMENT
$unwind$?AllocateBuffers@@YAXXZ DD 021801H
	DD	07002f209H
xdata	ENDS
CONST	SEGMENT
?AllocateBuffers@@YAXXZ$rtcName$0 DB 073H		; AllocateBuffers
	DB	074H
	DB	061H
	DB	074H
	DB	075H
	DB	073H
	DB	00H
	ORG $+9
?AllocateBuffers@@YAXXZ$rtcVarDesc DD 064H		; AllocateBuffers
	DD	04H
	DQ	FLAT:?AllocateBuffers@@YAXXZ$rtcName$0
	ORG $+48
?AllocateBuffers@@YAXXZ$rtcFrameData DD 01H		; AllocateBuffers
	DD	00H
	DQ	FLAT:?AllocateBuffers@@YAXXZ$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
_TEXT	SEGMENT
pixelCount$ = 80
i$ = 84
status$ = 100
sizeBytes$ = 116
?AllocateBuffers@@YAXXZ PROC				; AllocateBuffers
; Line 100
	push	rdi
	sub	rsp, 128				; 00000080H
	mov	rdi, rsp
	mov	ecx, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 101
	mov	eax, DWORD PTR ?width@@3HA		; width
	imul	eax, DWORD PTR ?height@@3HA		; height
	mov	DWORD PTR pixelCount$[rsp], eax
; Line 103
	movsxd	rax, DWORD PTR pixelCount$[rsp]
	imul	rax, 12
	mov	rcx, rax
	call	QWORD PTR __imp_malloc
	mov	QWORD PTR colors, rax
; Line 105
	movsxd	rax, DWORD PTR pixelCount$[rsp]
	shl	rax, 2
	shl	rax, 1
	mov	rcx, rax
	call	QWORD PTR __imp_malloc
	mov	QWORD PTR seeds, rax
; Line 106
	mov	DWORD PTR i$[rsp], 0
	jmp	SHORT $LN11@AllocateBu
$LN10@AllocateBu:
	mov	eax, DWORD PTR i$[rsp]
	inc	eax
	mov	DWORD PTR i$[rsp], eax
$LN11@AllocateBu:
	mov	eax, DWORD PTR pixelCount$[rsp]
	shl	eax, 1
	cmp	DWORD PTR i$[rsp], eax
	jge	SHORT $LN9@AllocateBu
; Line 107
	call	QWORD PTR __imp_rand
	movsxd	rcx, DWORD PTR i$[rsp]
	mov	rdx, QWORD PTR seeds
	mov	DWORD PTR [rdx+rcx*4], eax
; Line 108
	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR seeds
	cmp	DWORD PTR [rcx+rax*4], 2
	jae	SHORT $LN8@AllocateBu
; Line 109
	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR seeds
	mov	DWORD PTR [rcx+rax*4], 2
$LN8@AllocateBu:
; Line 110
	jmp	SHORT $LN10@AllocateBu
$LN9@AllocateBu:
; Line 112
	movsxd	rax, DWORD PTR pixelCount$[rsp]
	shl	rax, 2
	mov	rcx, rax
	call	QWORD PTR __imp_malloc
	mov	QWORD PTR ?pixels@@3PEAIEA, rax		; pixels
; Line 114
	mov	DWORD PTR i$[rsp], 0
	jmp	SHORT $LN7@AllocateBu
$LN6@AllocateBu:
	mov	eax, DWORD PTR i$[rsp]
	inc	eax
	mov	DWORD PTR i$[rsp], eax
$LN7@AllocateBu:
	mov	eax, DWORD PTR pixelCount$[rsp]
	cmp	DWORD PTR i$[rsp], eax
	jge	SHORT $LN5@AllocateBu
; Line 115
	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR ?pixels@@3PEAIEA		; pixels
	mov	edx, DWORD PTR i$[rsp]
	mov	DWORD PTR [rcx+rax*4], edx
	jmp	SHORT $LN6@AllocateBu
$LN5@AllocateBu:
; Line 118
	movsxd	rax, DWORD PTR ?width@@3HA		; width
	imul	rax, 12
	movsxd	rcx, DWORD PTR ?height@@3HA		; height
	imul	rax, rcx
	mov	DWORD PTR sizeBytes$[rsp], eax
; Line 124
	mov	eax, DWORD PTR sizeBytes$[rsp]
	lea	rcx, QWORD PTR status$[rsp]
	mov	QWORD PTR [rsp+32], rcx
	xor	r9d, r9d
	mov	r8d, eax
	mov	edx, 1
	mov	rcx, QWORD PTR context
	call	clCreateBuffer
	mov	QWORD PTR colorBuffer, rax
; Line 125
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN4@AllocateBu
; Line 126
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9454
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 127
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN4@AllocateBu:
; Line 130
	movsxd	rax, DWORD PTR ?width@@3HA		; width
	shl	rax, 2
	movsxd	rcx, DWORD PTR ?height@@3HA		; height
	imul	rax, rcx
	mov	DWORD PTR sizeBytes$[rsp], eax
; Line 136
	mov	eax, DWORD PTR sizeBytes$[rsp]
	lea	rcx, QWORD PTR status$[rsp]
	mov	QWORD PTR [rsp+32], rcx
	xor	r9d, r9d
	mov	r8d, eax
	mov	edx, 2
	mov	rcx, QWORD PTR context
	call	clCreateBuffer
	mov	QWORD PTR pixelBuffer, rax
; Line 137
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN3@AllocateBu
; Line 138
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9457
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 139
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN3@AllocateBu:
; Line 142
	movsxd	rax, DWORD PTR ?width@@3HA		; width
	shl	rax, 2
	movsxd	rcx, DWORD PTR ?height@@3HA		; height
	imul	rax, rcx
	shl	rax, 1
	mov	DWORD PTR sizeBytes$[rsp], eax
; Line 148
	mov	eax, DWORD PTR sizeBytes$[rsp]
	lea	rcx, QWORD PTR status$[rsp]
	mov	QWORD PTR [rsp+32], rcx
	xor	r9d, r9d
	mov	r8d, eax
	mov	edx, 1
	mov	rcx, QWORD PTR context
	call	clCreateBuffer
	mov	QWORD PTR seedBuffer, rax
; Line 149
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN2@AllocateBu
; Line 150
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9460
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 151
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN2@AllocateBu:
; Line 162
	mov	eax, DWORD PTR sizeBytes$[rsp]
	mov	QWORD PTR [rsp+64], 0
	mov	QWORD PTR [rsp+56], 0
	mov	DWORD PTR [rsp+48], 0
	mov	rcx, QWORD PTR seeds
	mov	QWORD PTR [rsp+40], rcx
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 1
	mov	rdx, QWORD PTR seedBuffer
	mov	rcx, QWORD PTR commandQueue
	call	clEnqueueWriteBuffer
	mov	DWORD PTR status$[rsp], eax
; Line 163
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN1@AllocateBu
; Line 164
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9462
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 165
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN1@AllocateBu:
$LN13@AllocateBu:
; Line 167
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?AllocateBuffers@@YAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 128				; 00000080H
	pop	rdi
	ret	0
?AllocateBuffers@@YAXXZ ENDP				; AllocateBuffers
_TEXT	ENDS
PUBLIC	__real@434c999a
PUBLIC	__real@4233d45e
PUBLIC	__real@434d999a
PUBLIC	__real@42340000
PUBLIC	__real@42480000
PUBLIC	?mainGPU@@YAHHPEAPEAD@Z				; mainGPU
EXTRN	glutMainLoop:PROC
EXTRN	?InitGlut@@YAXHQEAPEADPEAD@Z:PROC		; InitGlut
EXTRN	?amiSmallptCPU@@3HA:DWORD			; amiSmallptCPU
pdata	SEGMENT
$pdata$?mainGPU@@YAHHPEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+207
	DD	imagerel $unwind$?mainGPU@@YAHHPEAPEAD@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?mainGPU@@YAHHPEAPEAD@Z DD 022101H
	DD	0700a320eH
xdata	ENDS
;	COMDAT __real@434c999a
CONST	SEGMENT
__real@434c999a DD 0434c999ar			; 204.6
CONST	ENDS
;	COMDAT __real@4233d45e
CONST	SEGMENT
__real@4233d45e DD 04233d45er			; 44.9574
CONST	ENDS
;	COMDAT __real@434d999a
CONST	SEGMENT
__real@434d999a DD 0434d999ar			; 205.6
CONST	ENDS
;	COMDAT __real@42340000
CONST	SEGMENT
__real@42340000 DD 042340000r			; 45
CONST	ENDS
;	COMDAT __real@42480000
CONST	SEGMENT
__real@42480000 DD 042480000r			; 50
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
_TEXT	SEGMENT
argc$ = 48
argv$ = 56
?mainGPU@@YAHHPEAPEAD@Z PROC				; mainGPU
; Line 832
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	DWORD PTR [rsp+8], ecx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+48]
; Line 833
	mov	DWORD PTR ?amiSmallptCPU@@3HA, 0	; amiSmallptCPU
; Line 847
	lea	rax, OFFSET FLAT:CornellSpheres
	mov	QWORD PTR ?spheres@@3PEAUSphere@@EA, rax ; spheres
; Line 848
	mov	DWORD PTR ?sphereCount@@3IA, 9		; sphereCount
; Line 850
	movss	xmm0, DWORD PTR __real@42480000
	movss	DWORD PTR ?camera@@3UCamera@@A, xmm0
	movss	xmm0, DWORD PTR __real@42340000
	movss	DWORD PTR ?camera@@3UCamera@@A+4, xmm0
	movss	xmm0, DWORD PTR __real@434d999a
	movss	DWORD PTR ?camera@@3UCamera@@A+8, xmm0
; Line 851
	movss	xmm0, DWORD PTR __real@42480000
	movss	DWORD PTR ?camera@@3UCamera@@A+12, xmm0
	movss	xmm0, DWORD PTR __real@4233d45e
	movss	DWORD PTR ?camera@@3UCamera@@A+16, xmm0
	movss	xmm0, DWORD PTR __real@434c999a
	movss	DWORD PTR ?camera@@3UCamera@@A+20, xmm0
; Line 857
	call	?UpdateCamera@@YAXXZ			; UpdateCamera
; Line 861
	call	?SetUpOpenCL@@YAXXZ			; SetUpOpenCL
; Line 865
	lea	r8, OFFSET FLAT:$SG9733
	mov	rdx, QWORD PTR argv$[rsp]
	mov	ecx, DWORD PTR argc$[rsp]
	call	?InitGlut@@YAXHQEAPEADPEAD@Z		; InitGlut
; Line 867
	call	glutMainLoop
; Line 869
	xor	eax, eax
; Line 870
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?mainGPU@@YAHHPEAPEAD@Z ENDP				; mainGPU
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__GSHandlerCheck:PROC
EXTRN	clGetKernelWorkGroupInfo:PROC
EXTRN	clCreateKernel:PROC
EXTRN	clGetProgramBuildInfo:PROC
EXTRN	clBuildProgram:PROC
EXTRN	clCreateProgramWithSource:PROC
EXTRN	clCreateCommandQueue:PROC
EXTRN	clGetContextInfo:PROC
EXTRN	clCreateContext:PROC
EXTRN	clGetDeviceInfo:PROC
EXTRN	clGetDeviceIDs:PROC
EXTRN	clGetPlatformInfo:PROC
EXTRN	clGetPlatformIDs:PROC
EXTRN	__security_cookie:QWORD
EXTRN	__security_check_cookie:PROC
_BSS	SEGMENT
program	DQ	01H DUP (?)
_BSS	ENDS
pdata	SEGMENT
$pdata$?SetUpOpenCL@@YAXXZ DD imagerel ?SetUpOpenCL@@YAXXZ
	DD	imagerel ?SetUpOpenCL@@YAXXZ+4329
	DD	imagerel $unwind$?SetUpOpenCL@@YAXXZ
pdata	ENDS
xdata	SEGMENT
$unwind$?SetUpOpenCL@@YAXXZ DD 032a19H
	DD	0d00109H
	DD	07002H
	DD	imagerel __GSHandlerCheck
	DD	0670H
xdata	ENDS
CONST	SEGMENT
?SetUpOpenCL@@YAXXZ$rtcName$0 DB 06eH			; SetUpOpenCL
	DB	075H
	DB	06dH
	DB	050H
	DB	06cH
	DB	061H
	DB	074H
	DB	066H
	DB	06fH
	DB	072H
	DB	06dH
	DB	073H
	DB	00H
	ORG $+3
?SetUpOpenCL@@YAXXZ$rtcName$1 DB 073H			; SetUpOpenCL
	DB	074H
	DB	061H
	DB	074H
	DB	075H
	DB	073H
	DB	00H
	ORG $+1
?SetUpOpenCL@@YAXXZ$rtcName$2 DB 070H			; SetUpOpenCL
	DB	062H
	DB	075H
	DB	066H
	DB	00H
	ORG $+3
?SetUpOpenCL@@YAXXZ$rtcName$3 DB 064H			; SetUpOpenCL
	DB	065H
	DB	076H
	DB	069H
	DB	063H
	DB	065H
	DB	073H
	DB	00H
?SetUpOpenCL@@YAXXZ$rtcName$4 DB 064H			; SetUpOpenCL
	DB	065H
	DB	076H
	DB	069H
	DB	063H
	DB	065H
	DB	043H
	DB	06fH
	DB	075H
	DB	06eH
	DB	074H
	DB	00H
?SetUpOpenCL@@YAXXZ$rtcName$7 DB 062H			; SetUpOpenCL
	DB	075H
	DB	066H
	DB	00H
?SetUpOpenCL@@YAXXZ$rtcName$5 DB 073H			; SetUpOpenCL
	DB	065H
	DB	06cH
	DB	065H
	DB	063H
	DB	074H
	DB	065H
	DB	064H
	DB	044H
	DB	065H
	DB	076H
	DB	069H
	DB	063H
	DB	065H
	DB	00H
	ORG $+1
?SetUpOpenCL@@YAXXZ$rtcName$6 DB 074H			; SetUpOpenCL
	DB	079H
	DB	070H
	DB	065H
	DB	00H
	ORG $+3
?SetUpOpenCL@@YAXXZ$rtcName$8 DB 075H			; SetUpOpenCL
	DB	06eH
	DB	069H
	DB	074H
	DB	073H
	DB	00H
	ORG $+2
?SetUpOpenCL@@YAXXZ$rtcName$9 DB 067H			; SetUpOpenCL
	DB	073H
	DB	069H
	DB	07aH
	DB	065H
	DB	00H
	ORG $+2
?SetUpOpenCL@@YAXXZ$rtcName$10 DB 063H			; SetUpOpenCL
	DB	070H
	DB	073H
	DB	00H
?SetUpOpenCL@@YAXXZ$rtcName$13 DB 062H			; SetUpOpenCL
	DB	075H
	DB	066H
	DB	00H
?SetUpOpenCL@@YAXXZ$rtcName$11 DB 064H			; SetUpOpenCL
	DB	065H
	DB	076H
	DB	069H
	DB	063H
	DB	065H
	DB	04cH
	DB	069H
	DB	073H
	DB	074H
	DB	053H
	DB	069H
	DB	07aH
	DB	065H
	DB	00H
	ORG $+1
?SetUpOpenCL@@YAXXZ$rtcName$12 DB 074H			; SetUpOpenCL
	DB	079H
	DB	070H
	DB	065H
	DB	00H
	ORG $+3
?SetUpOpenCL@@YAXXZ$rtcName$14 DB 075H			; SetUpOpenCL
	DB	06eH
	DB	069H
	DB	074H
	DB	073H
	DB	00H
	ORG $+2
?SetUpOpenCL@@YAXXZ$rtcName$15 DB 067H			; SetUpOpenCL
	DB	073H
	DB	069H
	DB	07aH
	DB	065H
	DB	00H
	ORG $+2
?SetUpOpenCL@@YAXXZ$rtcName$16 DB 073H			; SetUpOpenCL
	DB	06fH
	DB	075H
	DB	072H
	DB	063H
	DB	065H
	DB	073H
	DB	00H
?SetUpOpenCL@@YAXXZ$rtcName$17 DB 072H			; SetUpOpenCL
	DB	065H
	DB	074H
	DB	056H
	DB	061H
	DB	06cH
	DB	053H
	DB	069H
	DB	07aH
	DB	065H
	DB	00H
	ORG $+1
?SetUpOpenCL@@YAXXZ$rtcName$18 DB 067H			; SetUpOpenCL
	DB	073H
	DB	069H
	DB	07aH
	DB	065H
	DB	00H
	ORG $+6
?SetUpOpenCL@@YAXXZ$rtcVarDesc DD 0638H			; SetUpOpenCL
	DD	08H
	DQ	FLAT:?SetUpOpenCL@@YAXXZ$rtcName$18
	DD	0618H
	DD	08H
	DQ	FLAT:?SetUpOpenCL@@YAXXZ$rtcName$17
	DD	05f8H
	DD	08H
	DQ	FLAT:?SetUpOpenCL@@YAXXZ$rtcName$16
	DD	05d8H
	DD	08H
	DQ	FLAT:?SetUpOpenCL@@YAXXZ$rtcName$15
	DD	05b4H
	DD	04H
	DQ	FLAT:?SetUpOpenCL@@YAXXZ$rtcName$14
	DD	04a0H
	DD	0100H
	DQ	FLAT:?SetUpOpenCL@@YAXXZ$rtcName$13
	DD	0478H
	DD	08H
	DQ	FLAT:?SetUpOpenCL@@YAXXZ$rtcName$12
	DD	0458H
	DD	08H
	DQ	FLAT:?SetUpOpenCL@@YAXXZ$rtcName$11
	DD	0428H
	DD	018H
	DQ	FLAT:?SetUpOpenCL@@YAXXZ$rtcName$10
	DD	0408H
	DD	08H
	DQ	FLAT:?SetUpOpenCL@@YAXXZ$rtcName$9
	DD	03e4H
	DD	04H
	DQ	FLAT:?SetUpOpenCL@@YAXXZ$rtcName$8
	DD	02d0H
	DD	0100H
	DQ	FLAT:?SetUpOpenCL@@YAXXZ$rtcName$7
	DD	02a8H
	DD	08H
	DQ	FLAT:?SetUpOpenCL@@YAXXZ$rtcName$6
	DD	0288H
	DD	08H
	DQ	FLAT:?SetUpOpenCL@@YAXXZ$rtcName$5
	DD	0264H
	DD	04H
	DQ	FLAT:?SetUpOpenCL@@YAXXZ$rtcName$4
	DD	0150H
	DD	0100H
	DQ	FLAT:?SetUpOpenCL@@YAXXZ$rtcName$3
	DD	0c0H
	DD	064H
	DQ	FLAT:?SetUpOpenCL@@YAXXZ$rtcName$2
	DD	084H
	DD	04H
	DQ	FLAT:?SetUpOpenCL@@YAXXZ$rtcName$1
	DD	064H
	DD	04H
	DQ	FLAT:?SetUpOpenCL@@YAXXZ$rtcName$0
	ORG $+912
?SetUpOpenCL@@YAXXZ$rtcFrameData DD 013H		; SetUpOpenCL
	DD	00H
	DQ	FLAT:?SetUpOpenCL@@YAXXZ$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
_TEXT	SEGMENT
dType$ = 80
numPlatforms$ = 100
platform$ = 120
status$ = 132
platforms$9497 = 152
i$9502 = 160
pbuf$9506 = 192
devices$ = 336
deviceCount$ = 612
deviceFound$ = 628
selectedDevice$ = 648
i$ = 660
type$9520 = 680
stype$9524 = 696
buf$9542 = 720
units$9547 = 996
gsize$9552 = 1032
cps$ = 1064
cprops$ = 1096
deviceListSize$ = 1112
type$9572 = 1144
stype$9576 = 1160
buf$9592 = 1184
units$9597 = 1460
gsize$9602 = 1496
prop$ = 1512
sources$ = 1528
retValSize$9629 = 1560
buildLog$9632 = 1576
gsize$ = 1592
tv180 = 1616
tv274 = 1624
tv302 = 1632
tv321 = 1640
__$ArrayPad$ = 1648
?SetUpOpenCL@@YAXXZ PROC				; SetUpOpenCL
; Line 209
	push	rdi
	sub	rsp, 1664				; 00000680H
	mov	rdi, rsp
	mov	ecx, 416				; 000001a0H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 212
	cmp	DWORD PTR ?useGPU@@3HA, 0		; useGPU
	je	SHORT $LN55@SetUpOpenC
; Line 213
	mov	QWORD PTR dType$[rsp], 4
; Line 214
	jmp	SHORT $LN54@SetUpOpenC
$LN55@SetUpOpenC:
; Line 215
	mov	QWORD PTR dType$[rsp], 2
$LN54@SetUpOpenC:
; Line 220
	mov	QWORD PTR platform$[rsp], 0
; Line 221
	lea	r8, QWORD PTR numPlatforms$[rsp]
	xor	edx, edx
	xor	ecx, ecx
	call	clGetPlatformIDs
	mov	DWORD PTR status$[rsp], eax
; Line 222
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN53@SetUpOpenC
; Line 223
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	lea	rdx, OFFSET FLAT:$SG9495
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 224
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN53@SetUpOpenC:
; Line 227
	cmp	DWORD PTR numPlatforms$[rsp], 0
	jbe	$LN52@SetUpOpenC
; Line 228
	mov	eax, DWORD PTR numPlatforms$[rsp]
	shl	rax, 3
	mov	rcx, rax
	call	QWORD PTR __imp_malloc
	mov	QWORD PTR platforms$9497[rsp], rax
; Line 229
	xor	r8d, r8d
	mov	rdx, QWORD PTR platforms$9497[rsp]
	mov	ecx, DWORD PTR numPlatforms$[rsp]
	call	clGetPlatformIDs
	mov	DWORD PTR status$[rsp], eax
; Line 230
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN51@SetUpOpenC
; Line 231
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	lea	rdx, OFFSET FLAT:$SG9501
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 232
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN51@SetUpOpenC:
; Line 236
	mov	DWORD PTR i$9502[rsp], 0
	jmp	SHORT $LN50@SetUpOpenC
$LN49@SetUpOpenC:
	mov	eax, DWORD PTR i$9502[rsp]
	inc	eax
	mov	DWORD PTR i$9502[rsp], eax
$LN50@SetUpOpenC:
	mov	eax, DWORD PTR numPlatforms$[rsp]
	cmp	DWORD PTR i$9502[rsp], eax
	jae	$LN48@SetUpOpenC
; Line 242
	mov	eax, DWORD PTR i$9502[rsp]
	mov	QWORD PTR [rsp+32], 0
	lea	r9, QWORD PTR pbuf$9506[rsp]
	mov	r8d, 100				; 00000064H
	mov	edx, 2307				; 00000903H
	mov	rcx, QWORD PTR platforms$9497[rsp]
	mov	rcx, QWORD PTR [rcx+rax*8]
	call	clGetPlatformInfo
	mov	DWORD PTR status$[rsp], eax
; Line 244
	xor	r8d, r8d
	mov	rdx, QWORD PTR platforms$9497[rsp]
	mov	ecx, DWORD PTR numPlatforms$[rsp]
	call	clGetPlatformIDs
	mov	DWORD PTR status$[rsp], eax
; Line 245
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN47@SetUpOpenC
; Line 246
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	lea	rdx, OFFSET FLAT:$SG9508
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 247
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN47@SetUpOpenC:
; Line 250
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	lea	r9, QWORD PTR pbuf$9506[rsp]
	mov	r8d, DWORD PTR i$9502[rsp]
	lea	rdx, OFFSET FLAT:$SG9509
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 251
	jmp	$LN49@SetUpOpenC
$LN48@SetUpOpenC:
; Line 253
	mov	rax, QWORD PTR platforms$9497[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR platform$[rsp], rax
; Line 254
	mov	rcx, QWORD PTR platforms$9497[rsp]
	call	QWORD PTR __imp_free
$LN52@SetUpOpenC:
; Line 261
	lea	rax, QWORD PTR deviceCount$[rsp]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, QWORD PTR devices$[rsp]
	mov	r8d, 32					; 00000020H
	mov	edx, -1					; ffffffffH
	mov	rcx, QWORD PTR platform$[rsp]
	call	clGetDeviceIDs
	mov	DWORD PTR status$[rsp], eax
; Line 262
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN46@SetUpOpenC
; Line 263
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	lea	rdx, OFFSET FLAT:$SG9513
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 264
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN46@SetUpOpenC:
; Line 267
	mov	DWORD PTR deviceFound$[rsp], 0
; Line 270
	mov	DWORD PTR i$[rsp], 0
	jmp	SHORT $LN45@SetUpOpenC
$LN44@SetUpOpenC:
	mov	eax, DWORD PTR i$[rsp]
	inc	eax
	mov	DWORD PTR i$[rsp], eax
$LN45@SetUpOpenC:
	mov	eax, DWORD PTR deviceCount$[rsp]
	cmp	DWORD PTR i$[rsp], eax
	jae	$LN43@SetUpOpenC
; Line 271
	mov	QWORD PTR type$9520[rsp], 0
; Line 276
	mov	eax, DWORD PTR i$[rsp]
	mov	QWORD PTR [rsp+32], 0
	lea	r9, QWORD PTR type$9520[rsp]
	mov	r8d, 8
	mov	edx, 4096				; 00001000H
	mov	rcx, QWORD PTR devices$[rsp+rax*8]
	call	clGetDeviceInfo
	mov	DWORD PTR status$[rsp], eax
; Line 277
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN42@SetUpOpenC
; Line 278
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9523
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 279
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN42@SetUpOpenC:
; Line 283
	mov	rax, QWORD PTR type$9520[rsp]
	mov	QWORD PTR tv180[rsp], rax
	cmp	QWORD PTR tv180[rsp], 1
	je	SHORT $LN38@SetUpOpenC
	cmp	QWORD PTR tv180[rsp], 2
	je	SHORT $LN37@SetUpOpenC
	cmp	QWORD PTR tv180[rsp], 4
	je	$LN35@SetUpOpenC
	mov	eax, -1					; ffffffffH
	cmp	QWORD PTR tv180[rsp], rax
	je	SHORT $LN39@SetUpOpenC
	jmp	$LN33@SetUpOpenC
$LN39@SetUpOpenC:
; Line 285
	lea	rax, OFFSET FLAT:$SG9530
	mov	QWORD PTR stype$9524[rsp], rax
; Line 286
	jmp	$LN40@SetUpOpenC
$LN38@SetUpOpenC:
; Line 288
	lea	rax, OFFSET FLAT:$SG9532
	mov	QWORD PTR stype$9524[rsp], rax
; Line 289
	jmp	$LN40@SetUpOpenC
$LN37@SetUpOpenC:
; Line 291
	lea	rax, OFFSET FLAT:$SG9534
	mov	QWORD PTR stype$9524[rsp], rax
; Line 292
	cmp	DWORD PTR ?useGPU@@3HA, 0		; useGPU
	jne	SHORT $LN36@SetUpOpenC
	cmp	DWORD PTR deviceFound$[rsp], 0
	jne	SHORT $LN36@SetUpOpenC
; Line 293
	mov	eax, DWORD PTR i$[rsp]
	mov	rax, QWORD PTR devices$[rsp+rax*8]
	mov	QWORD PTR selectedDevice$[rsp], rax
; Line 294
	mov	DWORD PTR deviceFound$[rsp], 1
$LN36@SetUpOpenC:
; Line 296
	jmp	SHORT $LN40@SetUpOpenC
$LN35@SetUpOpenC:
; Line 298
	lea	rax, OFFSET FLAT:$SG9537
	mov	QWORD PTR stype$9524[rsp], rax
; Line 299
	cmp	DWORD PTR ?useGPU@@3HA, 0		; useGPU
	je	SHORT $LN34@SetUpOpenC
	cmp	DWORD PTR deviceFound$[rsp], 0
	jne	SHORT $LN34@SetUpOpenC
; Line 300
	mov	eax, DWORD PTR i$[rsp]
	mov	rax, QWORD PTR devices$[rsp+rax*8]
	mov	QWORD PTR selectedDevice$[rsp], rax
; Line 301
	mov	DWORD PTR deviceFound$[rsp], 1
$LN34@SetUpOpenC:
; Line 303
	jmp	SHORT $LN40@SetUpOpenC
$LN33@SetUpOpenC:
; Line 305
	lea	rax, OFFSET FLAT:$SG9540
	mov	QWORD PTR stype$9524[rsp], rax
$LN40@SetUpOpenC:
; Line 308
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r9, QWORD PTR stype$9524[rsp]
	mov	r8d, DWORD PTR i$[rsp]
	lea	rdx, OFFSET FLAT:$SG9541
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 315
	mov	eax, DWORD PTR i$[rsp]
	mov	QWORD PTR [rsp+32], 0
	lea	r9, QWORD PTR buf$9542[rsp]
	mov	r8d, 256				; 00000100H
	mov	edx, 4139				; 0000102bH
	mov	rcx, QWORD PTR devices$[rsp+rax*8]
	call	clGetDeviceInfo
	mov	DWORD PTR status$[rsp], eax
; Line 316
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN32@SetUpOpenC
; Line 317
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9545
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 318
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN32@SetUpOpenC:
; Line 321
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	lea	r9, QWORD PTR buf$9542[rsp]
	mov	r8d, DWORD PTR i$[rsp]
	lea	rdx, OFFSET FLAT:$SG9546
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 323
	mov	DWORD PTR units$9547[rsp], 0
; Line 328
	mov	eax, DWORD PTR i$[rsp]
	mov	QWORD PTR [rsp+32], 0
	lea	r9, QWORD PTR units$9547[rsp]
	mov	r8d, 4
	mov	edx, 4098				; 00001002H
	mov	rcx, QWORD PTR devices$[rsp+rax*8]
	call	clGetDeviceInfo
	mov	DWORD PTR status$[rsp], eax
; Line 329
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN31@SetUpOpenC
; Line 330
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9550
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 331
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN31@SetUpOpenC:
; Line 334
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r9d, DWORD PTR units$9547[rsp]
	mov	r8d, DWORD PTR i$[rsp]
	lea	rdx, OFFSET FLAT:$SG9551
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 336
	mov	QWORD PTR gsize$9552[rsp], 0
; Line 341
	mov	eax, DWORD PTR i$[rsp]
	mov	QWORD PTR [rsp+32], 0
	lea	r9, QWORD PTR gsize$9552[rsp]
	mov	r8d, 8
	mov	edx, 4100				; 00001004H
	mov	rcx, QWORD PTR devices$[rsp+rax*8]
	call	clGetDeviceInfo
	mov	DWORD PTR status$[rsp], eax
; Line 342
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN30@SetUpOpenC
; Line 343
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9555
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 344
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN30@SetUpOpenC:
; Line 347
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r9d, DWORD PTR gsize$9552[rsp]
	mov	r8d, DWORD PTR i$[rsp]
	lea	rdx, OFFSET FLAT:$SG9557
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 348
	jmp	$LN44@SetUpOpenC
$LN43@SetUpOpenC:
; Line 350
	cmp	DWORD PTR deviceFound$[rsp], 0
	jne	SHORT $LN29@SetUpOpenC
; Line 351
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	lea	rdx, OFFSET FLAT:$SG9559
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 352
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN29@SetUpOpenC:
; Line 358
	mov	QWORD PTR cps$[rsp], 4228		; 00001084H
; Line 359
	mov	rax, QWORD PTR platform$[rsp]
	mov	QWORD PTR cps$[rsp+8], rax
; Line 361
	mov	QWORD PTR cps$[rsp+16], 0
; Line 363
	cmp	QWORD PTR platform$[rsp], 0
	jne	SHORT $LN58@SetUpOpenC
	mov	QWORD PTR tv274[rsp], 0
	jmp	SHORT $LN59@SetUpOpenC
$LN58@SetUpOpenC:
	lea	rax, QWORD PTR cps$[rsp]
	mov	QWORD PTR tv274[rsp], rax
$LN59@SetUpOpenC:
	mov	rax, QWORD PTR tv274[rsp]
	mov	QWORD PTR cprops$[rsp], rax
; Line 370
	lea	rax, QWORD PTR status$[rsp]
	mov	QWORD PTR [rsp+40], rax
	mov	QWORD PTR [rsp+32], 0
	xor	r9d, r9d
	lea	r8, QWORD PTR selectedDevice$[rsp]
	mov	edx, 1
	mov	rcx, QWORD PTR cprops$[rsp]
	call	clCreateContext
	mov	QWORD PTR context, rax
; Line 371
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN28@SetUpOpenC
; Line 372
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	lea	rdx, OFFSET FLAT:$SG9564
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 373
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN28@SetUpOpenC:
; Line 383
	lea	rax, QWORD PTR deviceListSize$[rsp]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, QWORD PTR devices$[rsp]
	mov	r8d, 32					; 00000020H
	mov	edx, 4225				; 00001081H
	mov	rcx, QWORD PTR context
	call	clGetContextInfo
	mov	DWORD PTR status$[rsp], eax
; Line 384
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN27@SetUpOpenC
; Line 385
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9567
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 386
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN27@SetUpOpenC:
; Line 390
	mov	DWORD PTR i$[rsp], 0
	jmp	SHORT $LN26@SetUpOpenC
$LN25@SetUpOpenC:
	mov	eax, DWORD PTR i$[rsp]
	inc	eax
	mov	DWORD PTR i$[rsp], eax
$LN26@SetUpOpenC:
	mov	eax, DWORD PTR i$[rsp]
	mov	QWORD PTR tv302[rsp], rax
	xor	edx, edx
	mov	rax, QWORD PTR deviceListSize$[rsp]
	mov	ecx, 8
	div	rcx
	mov	rcx, QWORD PTR tv302[rsp]
	cmp	rcx, rax
	jae	$LN24@SetUpOpenC
; Line 391
	mov	QWORD PTR type$9572[rsp], 0
; Line 396
	mov	eax, DWORD PTR i$[rsp]
	mov	QWORD PTR [rsp+32], 0
	lea	r9, QWORD PTR type$9572[rsp]
	mov	r8d, 8
	mov	edx, 4096				; 00001000H
	mov	rcx, QWORD PTR devices$[rsp+rax*8]
	call	clGetDeviceInfo
	mov	DWORD PTR status$[rsp], eax
; Line 397
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN23@SetUpOpenC
; Line 398
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9575
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 399
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN23@SetUpOpenC:
; Line 403
	mov	rax, QWORD PTR type$9572[rsp]
	mov	QWORD PTR tv321[rsp], rax
	cmp	QWORD PTR tv321[rsp], 1
	je	SHORT $LN19@SetUpOpenC
	cmp	QWORD PTR tv321[rsp], 2
	je	SHORT $LN18@SetUpOpenC
	cmp	QWORD PTR tv321[rsp], 4
	je	SHORT $LN17@SetUpOpenC
	mov	eax, -1					; ffffffffH
	cmp	QWORD PTR tv321[rsp], rax
	je	SHORT $LN20@SetUpOpenC
	jmp	SHORT $LN16@SetUpOpenC
$LN20@SetUpOpenC:
; Line 405
	lea	rax, OFFSET FLAT:$SG9582
	mov	QWORD PTR stype$9576[rsp], rax
; Line 406
	jmp	SHORT $LN21@SetUpOpenC
$LN19@SetUpOpenC:
; Line 408
	lea	rax, OFFSET FLAT:$SG9584
	mov	QWORD PTR stype$9576[rsp], rax
; Line 409
	jmp	SHORT $LN21@SetUpOpenC
$LN18@SetUpOpenC:
; Line 411
	lea	rax, OFFSET FLAT:$SG9586
	mov	QWORD PTR stype$9576[rsp], rax
; Line 412
	jmp	SHORT $LN21@SetUpOpenC
$LN17@SetUpOpenC:
; Line 414
	lea	rax, OFFSET FLAT:$SG9588
	mov	QWORD PTR stype$9576[rsp], rax
; Line 415
	jmp	SHORT $LN21@SetUpOpenC
$LN16@SetUpOpenC:
; Line 417
	lea	rax, OFFSET FLAT:$SG9590
	mov	QWORD PTR stype$9576[rsp], rax
$LN21@SetUpOpenC:
; Line 420
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r9, QWORD PTR stype$9576[rsp]
	mov	r8d, DWORD PTR i$[rsp]
	lea	rdx, OFFSET FLAT:$SG9591
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 427
	mov	eax, DWORD PTR i$[rsp]
	mov	QWORD PTR [rsp+32], 0
	lea	r9, QWORD PTR buf$9592[rsp]
	mov	r8d, 256				; 00000100H
	mov	edx, 4139				; 0000102bH
	mov	rcx, QWORD PTR devices$[rsp+rax*8]
	call	clGetDeviceInfo
	mov	DWORD PTR status$[rsp], eax
; Line 428
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN15@SetUpOpenC
; Line 429
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9595
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 430
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN15@SetUpOpenC:
; Line 433
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	lea	r9, QWORD PTR buf$9592[rsp]
	mov	r8d, DWORD PTR i$[rsp]
	lea	rdx, OFFSET FLAT:$SG9596
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 435
	mov	DWORD PTR units$9597[rsp], 0
; Line 440
	mov	eax, DWORD PTR i$[rsp]
	mov	QWORD PTR [rsp+32], 0
	lea	r9, QWORD PTR units$9597[rsp]
	mov	r8d, 4
	mov	edx, 4098				; 00001002H
	mov	rcx, QWORD PTR devices$[rsp+rax*8]
	call	clGetDeviceInfo
	mov	DWORD PTR status$[rsp], eax
; Line 441
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN14@SetUpOpenC
; Line 442
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9600
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 443
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN14@SetUpOpenC:
; Line 446
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r9d, DWORD PTR units$9597[rsp]
	mov	r8d, DWORD PTR i$[rsp]
	lea	rdx, OFFSET FLAT:$SG9601
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 448
	mov	QWORD PTR gsize$9602[rsp], 0
; Line 453
	mov	eax, DWORD PTR i$[rsp]
	mov	QWORD PTR [rsp+32], 0
	lea	r9, QWORD PTR gsize$9602[rsp]
	mov	r8d, 8
	mov	edx, 4100				; 00001004H
	mov	rcx, QWORD PTR devices$[rsp+rax*8]
	call	clGetDeviceInfo
	mov	DWORD PTR status$[rsp], eax
; Line 454
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN13@SetUpOpenC
; Line 455
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9605
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 456
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN13@SetUpOpenC:
; Line 459
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r9d, DWORD PTR gsize$9602[rsp]
	mov	r8d, DWORD PTR i$[rsp]
	lea	rdx, OFFSET FLAT:$SG9607
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 460
	jmp	$LN25@SetUpOpenC
$LN24@SetUpOpenC:
; Line 462
	mov	QWORD PTR prop$[rsp], 0
; Line 467
	lea	r9, QWORD PTR status$[rsp]
	mov	r8, QWORD PTR prop$[rsp]
	mov	rdx, QWORD PTR devices$[rsp]
	mov	rcx, QWORD PTR context
	call	clCreateCommandQueue
	mov	QWORD PTR commandQueue, rax
; Line 468
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN12@SetUpOpenC
; Line 469
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9610
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 470
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN12@SetUpOpenC:
; Line 484
	mov	eax, DWORD PTR ?sphereCount@@3IA	; sphereCount
	imul	rax, 44					; 0000002cH
	lea	rcx, QWORD PTR status$[rsp]
	mov	QWORD PTR [rsp+32], rcx
	xor	r9d, r9d
	mov	r8, rax
	mov	edx, 4
	mov	rcx, QWORD PTR context
	call	clCreateBuffer
	mov	QWORD PTR sphereBuffer, rax
; Line 485
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN11@SetUpOpenC
; Line 486
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9613
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 487
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN11@SetUpOpenC:
; Line 498
	mov	eax, DWORD PTR ?sphereCount@@3IA	; sphereCount
	imul	rax, 44					; 0000002cH
	mov	QWORD PTR [rsp+64], 0
	mov	QWORD PTR [rsp+56], 0
	mov	DWORD PTR [rsp+48], 0
	mov	rcx, QWORD PTR ?spheres@@3PEAUSphere@@EA ; spheres
	mov	QWORD PTR [rsp+40], rcx
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 1
	mov	rdx, QWORD PTR sphereBuffer
	mov	rcx, QWORD PTR commandQueue
	call	clEnqueueWriteBuffer
	mov	DWORD PTR status$[rsp], eax
; Line 499
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN10@SetUpOpenC
; Line 500
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9616
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 501
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN10@SetUpOpenC:
; Line 513
	lea	rax, QWORD PTR status$[rsp]
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 60					; 0000003cH
	mov	edx, 4
	mov	rcx, QWORD PTR context
	call	clCreateBuffer
	mov	QWORD PTR cameraBuffer, rax
; Line 514
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN9@SetUpOpenC
; Line 515
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9619
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 516
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN9@SetUpOpenC:
; Line 527
	mov	QWORD PTR [rsp+64], 0
	mov	QWORD PTR [rsp+56], 0
	mov	DWORD PTR [rsp+48], 0
	lea	rax, OFFSET FLAT:?camera@@3UCamera@@A	; camera
	mov	QWORD PTR [rsp+40], rax
	mov	QWORD PTR [rsp+32], 60			; 0000003cH
	xor	r9d, r9d
	mov	r8d, 1
	mov	rdx, QWORD PTR cameraBuffer
	mov	rcx, QWORD PTR commandQueue
	call	clEnqueueWriteBuffer
	mov	DWORD PTR status$[rsp], eax
; Line 528
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN8@SetUpOpenC
; Line 529
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9622
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 530
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN8@SetUpOpenC:
; Line 533
	call	?AllocateBuffers@@YAXXZ			; AllocateBuffers
; Line 538
	mov	rcx, QWORD PTR kernelFileName
	call	?ReadSources@@YAPEADPEBD@Z		; ReadSources
	mov	QWORD PTR sources$[rsp], rax
; Line 544
	lea	rax, QWORD PTR status$[rsp]
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	lea	r8, QWORD PTR sources$[rsp]
	mov	edx, 1
	mov	rcx, QWORD PTR context
	call	clCreateProgramWithSource
	mov	QWORD PTR program, rax
; Line 545
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN7@SetUpOpenC
; Line 546
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9625
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 547
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN7@SetUpOpenC:
; Line 553
	mov	QWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], 0
	lea	r9, OFFSET FLAT:$SG9626
	lea	r8, QWORD PTR devices$[rsp]
	mov	edx, 1
	mov	rcx, QWORD PTR program
	call	clBuildProgram
	mov	DWORD PTR status$[rsp], eax
; Line 555
	cmp	DWORD PTR status$[rsp], 0
	je	$LN6@SetUpOpenC
; Line 556
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9628
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 565
	lea	rax, QWORD PTR retValSize$9629[rsp]
	mov	QWORD PTR [rsp+40], rax
	mov	QWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8d, 4483				; 00001183H
	mov	rdx, QWORD PTR devices$[rsp]
	mov	rcx, QWORD PTR program
	call	clGetProgramBuildInfo
	mov	DWORD PTR status$[rsp], eax
; Line 566
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN5@SetUpOpenC
; Line 567
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9631
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 568
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN5@SetUpOpenC:
; Line 571
	mov	rax, QWORD PTR retValSize$9629[rsp]
	inc	rax
	mov	rcx, rax
	call	QWORD PTR __imp_malloc
	mov	QWORD PTR buildLog$9632[rsp], rax
; Line 578
	mov	QWORD PTR [rsp+40], 0
	mov	rax, QWORD PTR buildLog$9632[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR retValSize$9629[rsp]
	mov	r8d, 4483				; 00001183H
	mov	rdx, QWORD PTR devices$[rsp]
	mov	rcx, QWORD PTR program
	call	clGetProgramBuildInfo
	mov	DWORD PTR status$[rsp], eax
; Line 579
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN4@SetUpOpenC
; Line 580
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9635
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 581
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN4@SetUpOpenC:
; Line 583
	mov	rax, QWORD PTR retValSize$9629[rsp]
	mov	rcx, QWORD PTR buildLog$9632[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	BYTE PTR [rax], 0
; Line 585
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8, QWORD PTR buildLog$9632[rsp]
	lea	rdx, OFFSET FLAT:$SG9636
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 586
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN6@SetUpOpenC:
; Line 589
	lea	r8, QWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9637
	mov	rcx, QWORD PTR program
	call	clCreateKernel
	mov	QWORD PTR kernel, rax
; Line 590
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN3@SetUpOpenC
; Line 591
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9639
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 592
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN3@SetUpOpenC:
; Line 596
	mov	QWORD PTR gsize$[rsp], 0
; Line 602
	mov	QWORD PTR [rsp+40], 0
	lea	rax, QWORD PTR gsize$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9d, 8
	mov	r8d, 4528				; 000011b0H
	mov	rdx, QWORD PTR devices$[rsp]
	mov	rcx, QWORD PTR kernel
	call	clGetKernelWorkGroupInfo
	mov	DWORD PTR status$[rsp], eax
; Line 603
	cmp	DWORD PTR status$[rsp], 0
	je	SHORT $LN2@SetUpOpenC
; Line 604
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR status$[rsp]
	lea	rdx, OFFSET FLAT:$SG9643
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 605
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN2@SetUpOpenC:
; Line 608
	mov	eax, DWORD PTR gsize$[rsp]
	mov	DWORD PTR workGroupSize, eax
; Line 609
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR workGroupSize
	lea	rdx, OFFSET FLAT:$SG9645
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 611
	cmp	DWORD PTR forceWorkSize, 0
	jle	SHORT $LN1@SetUpOpenC
; Line 612
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR forceWorkSize
	lea	rdx, OFFSET FLAT:$SG9647
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 613
	mov	eax, DWORD PTR forceWorkSize
	mov	DWORD PTR workGroupSize, eax
$LN1@SetUpOpenC:
$LN57@SetUpOpenC:
; Line 615
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?SetUpOpenCL@@YAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 1664				; 00000680H
	pop	rdi
	ret	0
?SetUpOpenCL@@YAXXZ ENDP				; SetUpOpenCL
_TEXT	ENDS
EXTRN	__imp_fclose:PROC
EXTRN	__imp_fread:PROC
EXTRN	__imp_rewind:PROC
EXTRN	__imp_ftell:PROC
EXTRN	__imp_fseek:PROC
EXTRN	__imp_fopen:PROC
pdata	SEGMENT
$pdata$?ReadSources@@YAPEADPEBD@Z DD imagerel ?ReadSources@@YAPEADPEBD@Z
	DD	imagerel ?ReadSources@@YAPEADPEBD@Z+480
	DD	imagerel $unwind$?ReadSources@@YAPEADPEBD@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?ReadSources@@YAPEADPEBD@Z DD 021e01H
	DD	07006720aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
_TEXT	SEGMENT
file$ = 32
size$ = 40
src$ = 48
res$ = 56
fileName$ = 80
?ReadSources@@YAPEADPEBD@Z PROC				; ReadSources
; Line 169
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rdi, rsp
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]
; Line 170
	lea	rdx, OFFSET FLAT:$SG9467
	mov	rcx, QWORD PTR fileName$[rsp]
	call	QWORD PTR __imp_fopen
	mov	QWORD PTR file$[rsp], rax
; Line 171
	cmp	QWORD PTR file$[rsp], 0
	jne	SHORT $LN5@ReadSource
; Line 172
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8, QWORD PTR fileName$[rsp]
	lea	rdx, OFFSET FLAT:$SG9469
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 173
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN5@ReadSource:
; Line 176
	mov	r8d, 2
	xor	edx, edx
	mov	rcx, QWORD PTR file$[rsp]
	call	QWORD PTR __imp_fseek
	test	eax, eax
	je	SHORT $LN4@ReadSource
; Line 177
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8, QWORD PTR fileName$[rsp]
	lea	rdx, OFFSET FLAT:$SG9471
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 178
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN4@ReadSource:
; Line 181
	mov	rcx, QWORD PTR file$[rsp]
	call	QWORD PTR __imp_ftell
	mov	DWORD PTR size$[rsp], eax
; Line 182
	cmp	DWORD PTR size$[rsp], 0
	jne	SHORT $LN3@ReadSource
; Line 183
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8, QWORD PTR fileName$[rsp]
	lea	rdx, OFFSET FLAT:$SG9474
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 184
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN3@ReadSource:
; Line 187
	mov	rcx, QWORD PTR file$[rsp]
	call	QWORD PTR __imp_rewind
; Line 189
	movsxd	rax, DWORD PTR size$[rsp]
	inc	rax
	mov	rcx, rax
	call	QWORD PTR __imp_malloc
	mov	QWORD PTR src$[rsp], rax
; Line 190
	cmp	QWORD PTR src$[rsp], 0
	jne	SHORT $LN2@ReadSource
; Line 191
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8, QWORD PTR fileName$[rsp]
	lea	rdx, OFFSET FLAT:$SG9479
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 192
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN2@ReadSource:
; Line 195
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r9d, DWORD PTR size$[rsp]
	mov	r8, QWORD PTR fileName$[rsp]
	lea	rdx, OFFSET FLAT:$SG9480
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 196
	movsxd	rax, DWORD PTR size$[rsp]
	mov	r9, QWORD PTR file$[rsp]
	mov	r8, rax
	mov	edx, 1
	mov	rcx, QWORD PTR src$[rsp]
	call	QWORD PTR __imp_fread
	mov	QWORD PTR res$[rsp], rax
; Line 197
	movsxd	rax, DWORD PTR size$[rsp]
	cmp	QWORD PTR res$[rsp], rax
	je	SHORT $LN1@ReadSource
; Line 198
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r9, QWORD PTR res$[rsp]
	mov	r8, QWORD PTR fileName$[rsp]
	lea	rdx, OFFSET FLAT:$SG9485
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 199
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN1@ReadSource:
; Line 201
	movsxd	rax, DWORD PTR size$[rsp]
	mov	rcx, QWORD PTR src$[rsp]
	mov	BYTE PTR [rcx+rax], 0
; Line 203
	mov	rcx, QWORD PTR file$[rsp]
	call	QWORD PTR __imp_fclose
; Line 205
	mov	rax, QWORD PTR src$[rsp]
$LN7@ReadSource:
; Line 207
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?ReadSources@@YAPEADPEBD@Z ENDP				; ReadSources
_TEXT	ENDS
PUBLIC	main
EXTRN	?mainCPU@@YAHHPEAPEAD@Z:PROC			; mainCPU
pdata	SEGMENT
$pdata$main DD	imagerel $LN5
	DD	imagerel $LN5+110
	DD	imagerel $unwind$main
pdata	ENDS
xdata	SEGMENT
$unwind$main DD	022101H
	DD	0700a320eH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
_TEXT	SEGMENT
argc$ = 48
argv$ = 56
main	PROC
; Line 875
$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	DWORD PTR [rsp+8], ecx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+48]
; Line 876
	mov	DWORD PTR ?useOpenCL@@3HA, 1		; useOpenCL
; Line 877
	mov	DWORD PTR ?useGPU@@3HA, 1		; useGPU
; Line 878
	mov	DWORD PTR forceWorkSize, 0
; Line 879
	cmp	DWORD PTR ?useOpenCL@@3HA, 0		; useOpenCL
	je	SHORT $LN2@main
; Line 880
	mov	rdx, QWORD PTR argv$[rsp]
	mov	ecx, DWORD PTR argc$[rsp]
	call	?mainGPU@@YAHHPEAPEAD@Z			; mainGPU
	jmp	SHORT $LN3@main
; Line 881
	jmp	SHORT $LN1@main
$LN2@main:
; Line 882
	mov	rdx, QWORD PTR argv$[rsp]
	mov	ecx, DWORD PTR argc$[rsp]
	call	?mainCPU@@YAHHPEAPEAD@Z			; mainCPU
$LN1@main:
$LN3@main:
; Line 884
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
main	ENDP
_TEXT	ENDS
END

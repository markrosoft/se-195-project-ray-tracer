; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

include listing.inc

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?max_digits10@?$numeric_limits@D@std@@2HB	; std::numeric_limits<char>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?max_digits10@?$numeric_limits@_W@std@@2HB	; std::numeric_limits<wchar_t>::max_digits10
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?max_digits10@?$numeric_limits@_N@std@@2HB	; std::numeric_limits<bool>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?max_digits10@?$numeric_limits@C@std@@2HB	; std::numeric_limits<signed char>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?max_digits10@?$numeric_limits@E@std@@2HB	; std::numeric_limits<unsigned char>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?max_digits10@?$numeric_limits@F@std@@2HB	; std::numeric_limits<short>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?max_digits10@?$numeric_limits@G@std@@2HB	; std::numeric_limits<unsigned short>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?max_digits10@?$numeric_limits@H@std@@2HB	; std::numeric_limits<int>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?max_digits10@?$numeric_limits@I@std@@2HB	; std::numeric_limits<unsigned int>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?max_digits10@?$numeric_limits@J@std@@2HB	; std::numeric_limits<long>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?max_digits10@?$numeric_limits@K@std@@2HB	; std::numeric_limits<unsigned long>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?max_digits10@?$numeric_limits@_J@std@@2HB	; std::numeric_limits<__int64>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?max_digits10@?$numeric_limits@_K@std@@2HB	; std::numeric_limits<unsigned __int64>::max_digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@_K$0A@@tr1@std@@2_KB	; std::tr1::integral_constant<unsigned __int64,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?table_size@?$ctype@D@std@@2_KB			; std::ctype<char>::table_size
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?surface@@3PEAUSurface@@EA			; surface
PUBLIC	?buffer@@3PEAIEA				; buffer
PUBLIC	?useOpenCL@@3HA					; useOpenCL
PUBLIC	?useGPU@@3HA					; useGPU
_BSS	SEGMENT
?surface@@3PEAUSurface@@EA DQ 01H DUP (?)		; surface
?buffer@@3PEAIEA DQ 01H DUP (?)				; buffer
_BSS	ENDS
CONST	SEGMENT
$SG84533 DB	'timings:', 00H
	ORG $+3
$SG84537 DB	'%s', 00H
	ORG $+1
$SG84538 DB	'%s', 00H
	ORG $+1
$SG84539 DB	'%s', 00H
	ORG $+1
$SG84540 DB	'%s', 00H
	ORG $+1
$SG84541 DB	'%s', 00H
	ORG $+1
$SG84542 DB	'%s', 00H
	ORG $+1
$SG84543 DB	'%s', 00H
	ORG $+1
$SG84544 DB	'%s', 00H
	ORG $+1
$SG84545 DB	'%s', 00H
	ORG $+1
$SG84563 DB	'00:00.000', 00H
	ORG $+2
$SG84566 DB	'%s', 0aH, 00H
$SG84572 DB	'00:00.000', 00H
	ORG $+2
$SG84588 DB	'w', 00H
	ORG $+2
$SG84580 DB	'average: ', 00H
	ORG $+2
$SG84604 DB	0aH, 00H
	ORG $+2
$SG84581 DB	'average of %d runs: %s', 0aH, 00H
$SG84586 DB	'output%d.ppm', 00H
	ORG $+3
$SG84589 DB	'P3', 0aH, '800 600', 0aH, '255', 0aH, 00H
$SG84602 DB	'%d %d %d ', 00H
	ORG $+2
$SG84605 DB	0aH, 00H
CONST	ENDS
_DATA	SEGMENT
?useOpenCL@@3HA DD 01H					; useOpenCL
?useGPU@@3HA DD	01H					; useGPU
_DATA	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2_KB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2_KB DQ 0000000000000100H	; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_K$0A@@tr1@std@@2_KB
CONST	SEGMENT
?value@?$integral_constant@_K$0A@@tr1@std@@2_KB DQ 0000000000000000H ; std::tr1::integral_constant<unsigned __int64,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 08H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@_K@std@@2HB DD 015H	; std::numeric_limits<unsigned __int64>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@_J@std@@2HB DD 014H	; std::numeric_limits<__int64>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@K@std@@2HB DD 0bH	; std::numeric_limits<unsigned long>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@J@std@@2HB DD 0bH	; std::numeric_limits<long>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@I@std@@2HB DD 0bH	; std::numeric_limits<unsigned int>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@H@std@@2HB DD 0bH	; std::numeric_limits<int>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@G@std@@2HB DD 06H	; std::numeric_limits<unsigned short>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@F@std@@2HB DD 06H	; std::numeric_limits<short>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@E@std@@2HB DD 04H	; std::numeric_limits<unsigned char>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@C@std@@2HB DD 04H	; std::numeric_limits<signed char>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@_N@std@@2HB DD 00H	; std::numeric_limits<bool>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@_W@std@@2HB DD 06H	; std::numeric_limits<wchar_t>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@D@std@@2HB DD 04H	; std::numeric_limits<char>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 01H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
PUBLIC	?GetPixelColor@@YAXIAEAH00@Z			; GetPixelColor
EXTRN	_RTC_Shutdown:PROC
EXTRN	_RTC_InitBase:PROC
pdata	SEGMENT
$pdata$?GetPixelColor@@YAXIAEAH00@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?GetPixelColor@@YAXIAEAH00@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?GetPixelColor@@YAXIAEAH00@Z DD 011401H
	DD	07014H
xdata	ENDS
;	COMDAT rtc$TMZ
; File c:\users\mark\documents\devmaster_raytracing\raytracer3.0.06.no_rec.samp\testapp.cpp
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
pixel$ = 16
r$ = 24
g$ = 32
b$ = 40
?GetPixelColor@@YAXIAEAH00@Z PROC			; GetPixelColor
; Line 50
$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	DWORD PTR [rsp+8], ecx
	push	rdi
; Line 51
	mov	eax, DWORD PTR pixel$[rsp]
	and	eax, 255				; 000000ffH
	mov	rcx, QWORD PTR b$[rsp]
	mov	DWORD PTR [rcx], eax
; Line 52
	mov	eax, DWORD PTR pixel$[rsp]
	and	eax, 65280				; 0000ff00H
	shr	eax, 8
	mov	rcx, QWORD PTR g$[rsp]
	mov	DWORD PTR [rcx], eax
; Line 53
	mov	eax, DWORD PTR pixel$[rsp]
	and	eax, 16711680				; 00ff0000H
	shr	eax, 16
	mov	rcx, QWORD PTR r$[rsp]
	mov	DWORD PTR [rcx], eax
; Line 54
	pop	rdi
	ret	0
?GetPixelColor@@YAXIAEAH00@Z ENDP			; GetPixelColor
_TEXT	ENDS
PUBLIC	?DrawWindow@@YAXH@Z				; DrawWindow
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?Surface_GetBuffer@@YAPEAIPEAUSurface@@@Z	; Surface_GetBuffer
PUBLIC	__$ArrayPad$
PUBLIC	main
EXTRN	__GSHandlerCheck:PROC
EXTRN	printf:PROC
EXTRN	?ReadKernelBuffer@@YAXXZ:PROC			; ReadKernelBuffer
EXTRN	?ExecuteKernel@@YAXXZ:PROC			; ExecuteKernel
EXTRN	?Engine_Render@@YA_NXZ:PROC			; Engine_Render
EXTRN	?Engine_InitRender@@YAXXZ:PROC			; Engine_InitRender
EXTRN	__imp_GetTickCount:PROC
EXTRN	?SetKernelArguments@@YAXXZ:PROC			; SetKernelArguments
EXTRN	?AllocateBuffers@@YAXXZ:PROC			; AllocateBuffers
EXTRN	?outputLine9@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A:BYTE ; outputLine9
EXTRN	?outputLine8@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A:BYTE ; outputLine8
EXTRN	?outputLine7@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A:BYTE ; outputLine7
EXTRN	?outputLine6@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A:BYTE ; outputLine6
EXTRN	?outputLine5@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A:BYTE ; outputLine5
EXTRN	?outputLine4@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A:BYTE ; outputLine4
EXTRN	?outputLine3@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A:BYTE ; outputLine3
EXTRN	?outputLine2@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A:BYTE ; outputLine2
EXTRN	sprintf:PROC
EXTRN	?openCLcode@@YAPEADXZ:PROC			; openCLcode
EXTRN	?Engine_SetTarget@@YAXPEAIHH@Z:PROC		; Engine_SetTarget
EXTRN	?Scene_InitScene@@YAXXZ:PROC			; Scene_InitScene
EXTRN	?TracedRays_init@@YAXXZ:PROC			; TracedRays_init
EXTRN	?Engine_Constructor@@YAXXZ:PROC			; Engine_Constructor
EXTRN	?Surface_Print@@YAXPEAUSurface@@PEADHHI@Z:PROC	; Surface_Print
EXTRN	?Surface_InitCharset@@YAXPEAUSurface@@@Z:PROC	; Surface_InitCharset
EXTRN	?Surface_Clear@@YAXPEAUSurface@@I@Z:PROC	; Surface_Clear
EXTRN	?Surface_Create@@YAPEAUSurface@@HH@Z:PROC	; Surface_Create
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
EXTRN	__security_check_cookie:PROC
EXTRN	_RTC_CheckStackVars:PROC
pdata	SEGMENT
$pdata$main DD	imagerel $LN11
	DD	imagerel $LN11+2105
	DD	imagerel $unwind$main
pdata	ENDS
xdata	SEGMENT
$unwind$main DD	043a19H
	DD	09f0112H
	DD	0600a700bH
	DD	imagerel __GSHandlerCheck
	DD	04e8H
xdata	ENDS
CONST	SEGMENT
	ORG $+2
main$rtcName$0 DB 063H
	DB	068H
	DB	061H
	DB	072H
	DB	042H
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	00H
	ORG $+1
main$rtcName$1 DB 074H
	DB	00H
	ORG $+2
main$rtcName$2 DB 06bH
	DB	00H
	ORG $+6
main$rtcVarDesc DD 04b8H
	DD	0aH
	DQ	FLAT:main$rtcName$2
	DD	0488H
	DD	0aH
	DQ	FLAT:main$rtcName$1
	DD	050H
	DD	0400H
	DQ	FLAT:main$rtcName$0
	ORG $+144
main$rtcFrameData DD 03H
	DD	00H
	DQ	FLAT:main$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
_TEXT	SEGMENT
retFromOpenCLcode$84535 = 48
charBuffer$84536 = 80
xpos$ = 1108
ypos$ = 1112
maxx$ = 1116
maxy$ = 1120
maxrun$ = 1124
runCnt$ = 1128
totftime$ = 1132
avftime$ = 1136
fstart$84558 = 1140
ftime$84561 = 1144
t$84562 = 1160
secs$84564 = 1188
mins$84565 = 1192
k$ = 1208
secs$ = 1236
mins$ = 1240
__$ArrayPad$ = 1256
argc$ = 1296
argv$ = 1304
main	PROC
; Line 57
$LN11:
	mov	QWORD PTR [rsp+16], rdx
	mov	DWORD PTR [rsp+8], ecx
	push	rsi
	push	rdi
	sub	rsp, 1272				; 000004f8H
	mov	rdi, rsp
	mov	ecx, 318				; 0000013eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+1296]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 59
	mov	edx, 600				; 00000258H
	mov	ecx, 800				; 00000320H
	call	?Surface_Create@@YAPEAUSurface@@HH@Z	; Surface_Create
	mov	QWORD PTR ?surface@@3PEAUSurface@@EA, rax ; surface
; Line 60
	mov	rcx, QWORD PTR ?surface@@3PEAUSurface@@EA ; surface
	call	?Surface_GetBuffer@@YAPEAIPEAUSurface@@@Z ; Surface_GetBuffer
	mov	QWORD PTR ?buffer@@3PEAIEA, rax		; buffer
; Line 61
	xor	edx, edx
	mov	rcx, QWORD PTR ?surface@@3PEAUSurface@@EA ; surface
	call	?Surface_Clear@@YAXPEAUSurface@@I@Z	; Surface_Clear
; Line 62
	mov	rcx, QWORD PTR ?surface@@3PEAUSurface@@EA ; surface
	call	?Surface_InitCharset@@YAXPEAUSurface@@@Z ; Surface_InitCharset
; Line 63
	mov	DWORD PTR [rsp+32], -1			; ffffffffH
	mov	r9d, 2
	mov	r8d, 2
	lea	rdx, OFFSET FLAT:$SG84533
	mov	rcx, QWORD PTR ?surface@@3PEAUSurface@@EA ; surface
	call	?Surface_Print@@YAXPEAUSurface@@PEADHHI@Z ; Surface_Print
; Line 65
	call	?Engine_Constructor@@YAXXZ		; Engine_Constructor
; Line 67
	call	?TracedRays_init@@YAXXZ			; TracedRays_init
; Line 68
	call	?Scene_InitScene@@YAXXZ			; Scene_InitScene
; Line 69
	mov	rcx, QWORD PTR ?surface@@3PEAUSurface@@EA ; surface
	call	?Surface_GetBuffer@@YAPEAIPEAUSurface@@@Z ; Surface_GetBuffer
	mov	r8d, 600				; 00000258H
	mov	edx, 800				; 00000320H
	mov	rcx, rax
	call	?Engine_SetTarget@@YAXPEAIHH@Z		; Engine_SetTarget
; Line 72
	cmp	DWORD PTR ?useOpenCL@@3HA, 0		; useOpenCL
	je	$LN8@main
; Line 73
	call	?openCLcode@@YAPEADXZ			; openCLcode
	mov	QWORD PTR retFromOpenCLcode$84535[rsp], rax
; Line 75
	mov	r8, QWORD PTR retFromOpenCLcode$84535[rsp]
	lea	rdx, OFFSET FLAT:$SG84537
	lea	rcx, QWORD PTR charBuffer$84536[rsp]
	call	sprintf
; Line 76
	mov	DWORD PTR [rsp+32], -1			; ffffffffH
	mov	r9d, 530				; 00000212H
	mov	r8d, 5
	lea	rdx, QWORD PTR charBuffer$84536[rsp]
	mov	rcx, QWORD PTR ?surface@@3PEAUSurface@@EA ; surface
	call	?Surface_Print@@YAXPEAUSurface@@PEADHHI@Z ; Surface_Print
; Line 77
	lea	rcx, OFFSET FLAT:?outputLine2@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; outputLine2
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	r8, rax
	lea	rdx, OFFSET FLAT:$SG84538
	lea	rcx, QWORD PTR charBuffer$84536[rsp]
	call	sprintf
; Line 78
	mov	DWORD PTR [rsp+32], -1			; ffffffffH
	mov	r9d, 538				; 0000021aH
	mov	r8d, 5
	lea	rdx, QWORD PTR charBuffer$84536[rsp]
	mov	rcx, QWORD PTR ?surface@@3PEAUSurface@@EA ; surface
	call	?Surface_Print@@YAXPEAUSurface@@PEADHHI@Z ; Surface_Print
; Line 79
	lea	rcx, OFFSET FLAT:?outputLine3@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; outputLine3
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	r8, rax
	lea	rdx, OFFSET FLAT:$SG84539
	lea	rcx, QWORD PTR charBuffer$84536[rsp]
	call	sprintf
; Line 80
	mov	DWORD PTR [rsp+32], -1			; ffffffffH
	mov	r9d, 546				; 00000222H
	mov	r8d, 5
	lea	rdx, QWORD PTR charBuffer$84536[rsp]
	mov	rcx, QWORD PTR ?surface@@3PEAUSurface@@EA ; surface
	call	?Surface_Print@@YAXPEAUSurface@@PEADHHI@Z ; Surface_Print
; Line 81
	lea	rcx, OFFSET FLAT:?outputLine4@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; outputLine4
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	r8, rax
	lea	rdx, OFFSET FLAT:$SG84540
	lea	rcx, QWORD PTR charBuffer$84536[rsp]
	call	sprintf
; Line 82
	mov	DWORD PTR [rsp+32], -1			; ffffffffH
	mov	r9d, 554				; 0000022aH
	mov	r8d, 5
	lea	rdx, QWORD PTR charBuffer$84536[rsp]
	mov	rcx, QWORD PTR ?surface@@3PEAUSurface@@EA ; surface
	call	?Surface_Print@@YAXPEAUSurface@@PEADHHI@Z ; Surface_Print
; Line 83
	lea	rcx, OFFSET FLAT:?outputLine5@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; outputLine5
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	r8, rax
	lea	rdx, OFFSET FLAT:$SG84541
	lea	rcx, QWORD PTR charBuffer$84536[rsp]
	call	sprintf
; Line 84
	mov	DWORD PTR [rsp+32], -1			; ffffffffH
	mov	r9d, 562				; 00000232H
	mov	r8d, 5
	lea	rdx, QWORD PTR charBuffer$84536[rsp]
	mov	rcx, QWORD PTR ?surface@@3PEAUSurface@@EA ; surface
	call	?Surface_Print@@YAXPEAUSurface@@PEADHHI@Z ; Surface_Print
; Line 85
	lea	rcx, OFFSET FLAT:?outputLine6@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; outputLine6
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	r8, rax
	lea	rdx, OFFSET FLAT:$SG84542
	lea	rcx, QWORD PTR charBuffer$84536[rsp]
	call	sprintf
; Line 86
	mov	DWORD PTR [rsp+32], -1			; ffffffffH
	mov	r9d, 570				; 0000023aH
	mov	r8d, 5
	lea	rdx, QWORD PTR charBuffer$84536[rsp]
	mov	rcx, QWORD PTR ?surface@@3PEAUSurface@@EA ; surface
	call	?Surface_Print@@YAXPEAUSurface@@PEADHHI@Z ; Surface_Print
; Line 87
	lea	rcx, OFFSET FLAT:?outputLine7@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; outputLine7
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	r8, rax
	lea	rdx, OFFSET FLAT:$SG84543
	lea	rcx, QWORD PTR charBuffer$84536[rsp]
	call	sprintf
; Line 88
	mov	DWORD PTR [rsp+32], -1			; ffffffffH
	mov	r9d, 578				; 00000242H
	mov	r8d, 5
	lea	rdx, QWORD PTR charBuffer$84536[rsp]
	mov	rcx, QWORD PTR ?surface@@3PEAUSurface@@EA ; surface
	call	?Surface_Print@@YAXPEAUSurface@@PEADHHI@Z ; Surface_Print
; Line 89
	lea	rcx, OFFSET FLAT:?outputLine8@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; outputLine8
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	r8, rax
	lea	rdx, OFFSET FLAT:$SG84544
	lea	rcx, QWORD PTR charBuffer$84536[rsp]
	call	sprintf
; Line 90
	mov	DWORD PTR [rsp+32], -1			; ffffffffH
	mov	r9d, 586				; 0000024aH
	mov	r8d, 5
	lea	rdx, QWORD PTR charBuffer$84536[rsp]
	mov	rcx, QWORD PTR ?surface@@3PEAUSurface@@EA ; surface
	call	?Surface_Print@@YAXPEAUSurface@@PEADHHI@Z ; Surface_Print
; Line 91
	lea	rcx, OFFSET FLAT:?outputLine9@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; outputLine9
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	r8, rax
	lea	rdx, OFFSET FLAT:$SG84545
	lea	rcx, QWORD PTR charBuffer$84536[rsp]
	call	sprintf
; Line 92
	mov	DWORD PTR [rsp+32], -1			; ffffffffH
	mov	r9d, 594				; 00000252H
	mov	r8d, 5
	lea	rdx, QWORD PTR charBuffer$84536[rsp]
	mov	rcx, QWORD PTR ?surface@@3PEAUSurface@@EA ; surface
	call	?Surface_Print@@YAXPEAUSurface@@PEADHHI@Z ; Surface_Print
$LN8@main:
; Line 97
	mov	DWORD PTR xpos$[rsp], 60		; 0000003cH
; Line 98
	mov	DWORD PTR ypos$[rsp], 2
; Line 99
	mov	DWORD PTR maxx$[rsp], 1
; Line 100
	mov	DWORD PTR maxy$[rsp], 1
; Line 101
	mov	eax, DWORD PTR maxx$[rsp]
	imul	eax, DWORD PTR maxy$[rsp]
	mov	DWORD PTR maxrun$[rsp], eax
; Line 102
	mov	DWORD PTR runCnt$[rsp], 0
; Line 103
	mov	DWORD PTR totftime$[rsp], 0
; Line 104
	xorps	xmm0, xmm0
	movss	DWORD PTR avftime$[rsp], xmm0
; Line 107
	cmp	DWORD PTR ?useOpenCL@@3HA, 0		; useOpenCL
	je	SHORT $LN7@main
; Line 109
	call	?AllocateBuffers@@YAXXZ			; AllocateBuffers
; Line 111
	call	?SetKernelArguments@@YAXXZ		; SetKernelArguments
$LN7@main:
$LN6@main:
; Line 118
	mov	eax, DWORD PTR maxrun$[rsp]
	cmp	DWORD PTR runCnt$[rsp], eax
	jge	$LN5@main
; Line 121
	call	QWORD PTR __imp_GetTickCount
	mov	DWORD PTR fstart$84558[rsp], eax
; Line 122
	call	?Engine_InitRender@@YAXXZ		; Engine_InitRender
; Line 124
	cmp	DWORD PTR ?useOpenCL@@3HA, 0		; useOpenCL
	jne	SHORT $LN4@main
	call	?Engine_Render@@YA_NXZ			; Engine_Render
$LN4@main:
; Line 128
	cmp	DWORD PTR ?useOpenCL@@3HA, 0		; useOpenCL
	je	SHORT $LN3@main
; Line 130
	call	?AllocateBuffers@@YAXXZ			; AllocateBuffers
; Line 132
	call	?SetKernelArguments@@YAXXZ		; SetKernelArguments
; Line 134
	call	?ExecuteKernel@@YAXXZ			; ExecuteKernel
; Line 136
	call	?ReadKernelBuffer@@YAXXZ		; ReadKernelBuffer
$LN3@main:
; Line 142
	call	QWORD PTR __imp_GetTickCount
	sub	eax, DWORD PTR fstart$84558[rsp]
	mov	DWORD PTR ftime$84561[rsp], eax
; Line 143
	mov	eax, DWORD PTR ftime$84561[rsp]
	mov	ecx, DWORD PTR totftime$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR totftime$[rsp], eax
; Line 144
	lea	rax, QWORD PTR t$84562[rsp]
	lea	rcx, OFFSET FLAT:$SG84563
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 10
	rep movsb
; Line 145
	mov	eax, DWORD PTR ftime$84561[rsp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	cdq
	mov	ecx, 10
	idiv	ecx
	mov	eax, edx
	add	eax, 48					; 00000030H
	mov	BYTE PTR t$84562[rsp+6], al
; Line 146
	mov	eax, DWORD PTR ftime$84561[rsp]
	cdq
	mov	ecx, 10
	idiv	ecx
	cdq
	mov	ecx, 10
	idiv	ecx
	mov	eax, edx
	add	eax, 48					; 00000030H
	mov	BYTE PTR t$84562[rsp+7], al
; Line 147
	mov	eax, DWORD PTR ftime$84561[rsp]
	cdq
	mov	ecx, 10
	idiv	ecx
	mov	eax, edx
	add	eax, 48					; 00000030H
	mov	BYTE PTR t$84562[rsp+8], al
; Line 148
	mov	eax, DWORD PTR ftime$84561[rsp]
	cdq
	mov	ecx, 1000				; 000003e8H
	idiv	ecx
	cdq
	mov	ecx, 60					; 0000003cH
	idiv	ecx
	mov	eax, edx
	mov	DWORD PTR secs$84564[rsp], eax
; Line 149
	mov	eax, DWORD PTR ftime$84561[rsp]
	cdq
	mov	ecx, 60000				; 0000ea60H
	idiv	ecx
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	eax, edx
	mov	DWORD PTR mins$84565[rsp], eax
; Line 150
	mov	eax, DWORD PTR secs$84564[rsp]
	cdq
	mov	ecx, 10
	idiv	ecx
	cdq
	mov	ecx, 10
	idiv	ecx
	mov	eax, edx
	add	eax, 48					; 00000030H
	mov	BYTE PTR t$84562[rsp+3], al
; Line 151
	mov	eax, DWORD PTR secs$84564[rsp]
	cdq
	mov	ecx, 10
	idiv	ecx
	mov	eax, edx
	add	eax, 48					; 00000030H
	mov	BYTE PTR t$84562[rsp+4], al
; Line 152
	mov	eax, DWORD PTR mins$84565[rsp]
	cdq
	mov	ecx, 10
	idiv	ecx
	mov	eax, edx
	add	eax, 48					; 00000030H
	mov	BYTE PTR t$84562[rsp+1], al
; Line 153
	mov	eax, DWORD PTR mins$84565[rsp]
	cdq
	mov	ecx, 10
	idiv	ecx
	cdq
	mov	ecx, 10
	idiv	ecx
	mov	eax, edx
	add	eax, 48					; 00000030H
	mov	BYTE PTR t$84562[rsp], al
; Line 154
	mov	DWORD PTR [rsp+32], -1			; ffffffffH
	mov	r9d, DWORD PTR ypos$[rsp]
	mov	r8d, DWORD PTR xpos$[rsp]
	lea	rdx, QWORD PTR t$84562[rsp]
	mov	rcx, QWORD PTR ?surface@@3PEAUSurface@@EA ; surface
	call	?Surface_Print@@YAXPEAUSurface@@PEADHHI@Z ; Surface_Print
; Line 155
	lea	rdx, QWORD PTR t$84562[rsp]
	lea	rcx, OFFSET FLAT:$SG84566
	call	printf
; Line 156
	mov	eax, DWORD PTR runCnt$[rsp]
	cdq
	idiv	DWORD PTR maxx$[rsp]
	mov	eax, edx
	mov	ecx, DWORD PTR maxx$[rsp]
	dec	ecx
	cmp	eax, ecx
	jne	SHORT $LN2@main
	mov	eax, DWORD PTR ypos$[rsp]
	add	eax, 8
	mov	DWORD PTR ypos$[rsp], eax
	mov	DWORD PTR xpos$[rsp], 60		; 0000003cH
	jmp	SHORT $LN1@main
$LN2@main:
; Line 157
	mov	eax, DWORD PTR xpos$[rsp]
	add	eax, 65					; 00000041H
	mov	DWORD PTR xpos$[rsp], eax
$LN1@main:
; Line 159
	mov	eax, DWORD PTR runCnt$[rsp]
	inc	eax
	mov	DWORD PTR runCnt$[rsp], eax
; Line 160
	jmp	$LN6@main
$LN5@main:
; Line 161
	movd	xmm0, DWORD PTR totftime$[rsp]
	cvtdq2ps xmm0, xmm0
	movd	xmm1, DWORD PTR maxrun$[rsp]
	cvtdq2ps xmm1, xmm1
	divss	xmm0, xmm1
	movss	DWORD PTR avftime$[rsp], xmm0
; Line 162
	lea	rax, QWORD PTR k$[rsp]
	lea	rcx, OFFSET FLAT:$SG84572
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 10
	rep movsb
; Line 163
	cvttss2si eax, DWORD PTR avftime$[rsp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	cdq
	mov	ecx, 10
	idiv	ecx
	mov	eax, edx
	add	eax, 48					; 00000030H
	mov	BYTE PTR k$[rsp+6], al
; Line 164
	cvttss2si eax, DWORD PTR avftime$[rsp]
	cdq
	mov	ecx, 10
	idiv	ecx
	cdq
	mov	ecx, 10
	idiv	ecx
	mov	eax, edx
	add	eax, 48					; 00000030H
	mov	BYTE PTR k$[rsp+7], al
; Line 165
	cvttss2si eax, DWORD PTR avftime$[rsp]
	cdq
	mov	ecx, 10
	idiv	ecx
	mov	eax, edx
	add	eax, 48					; 00000030H
	mov	BYTE PTR k$[rsp+8], al
; Line 166
	cvttss2si eax, DWORD PTR avftime$[rsp]
	cdq
	mov	ecx, 1000				; 000003e8H
	idiv	ecx
	cdq
	mov	ecx, 60					; 0000003cH
	idiv	ecx
	mov	eax, edx
	mov	DWORD PTR secs$[rsp], eax
; Line 167
	cvttss2si eax, DWORD PTR avftime$[rsp]
	cdq
	mov	ecx, 60000				; 0000ea60H
	idiv	ecx
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	eax, edx
	mov	DWORD PTR mins$[rsp], eax
; Line 168
	mov	eax, DWORD PTR secs$[rsp]
	cdq
	mov	ecx, 10
	idiv	ecx
	cdq
	mov	ecx, 10
	idiv	ecx
	mov	eax, edx
	add	eax, 48					; 00000030H
	mov	BYTE PTR k$[rsp+3], al
; Line 169
	mov	eax, DWORD PTR secs$[rsp]
	cdq
	mov	ecx, 10
	idiv	ecx
	mov	eax, edx
	add	eax, 48					; 00000030H
	mov	BYTE PTR k$[rsp+4], al
; Line 170
	mov	eax, DWORD PTR mins$[rsp]
	cdq
	mov	ecx, 10
	idiv	ecx
	mov	eax, edx
	add	eax, 48					; 00000030H
	mov	BYTE PTR k$[rsp+1], al
; Line 171
	mov	eax, DWORD PTR mins$[rsp]
	cdq
	mov	ecx, 10
	idiv	ecx
	cdq
	mov	ecx, 10
	idiv	ecx
	mov	eax, edx
	add	eax, 48					; 00000030H
	mov	BYTE PTR k$[rsp], al
; Line 172
	mov	DWORD PTR [rsp+32], -1			; ffffffffH
	mov	r9d, DWORD PTR ypos$[rsp]
	mov	r8d, DWORD PTR xpos$[rsp]
	lea	rdx, OFFSET FLAT:$SG84580
	mov	rcx, QWORD PTR ?surface@@3PEAUSurface@@EA ; surface
	call	?Surface_Print@@YAXPEAUSurface@@PEADHHI@Z ; Surface_Print
; Line 173
	mov	eax, DWORD PTR xpos$[rsp]
	add	eax, 60					; 0000003cH
	mov	DWORD PTR [rsp+32], -1			; ffffffffH
	mov	r9d, DWORD PTR ypos$[rsp]
	mov	r8d, eax
	lea	rdx, QWORD PTR k$[rsp]
	mov	rcx, QWORD PTR ?surface@@3PEAUSurface@@EA ; surface
	call	?Surface_Print@@YAXPEAUSurface@@PEADHHI@Z ; Surface_Print
; Line 174
	lea	r8, QWORD PTR k$[rsp]
	mov	edx, DWORD PTR runCnt$[rsp]
	lea	rcx, OFFSET FLAT:$SG84581
	call	printf
; Line 175
	mov	ecx, DWORD PTR runCnt$[rsp]
	call	?DrawWindow@@YAXH@Z			; DrawWindow
; Line 177
	mov	eax, 1
; Line 178
	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:main$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 1272				; 000004f8H
	pop	rdi
	pop	rsi
	ret	0
main	ENDP
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\mark\documents\devmaster_raytracing\raytracer3.0.06.no_rec.samp\surface.h
pdata	SEGMENT
$pdata$?Surface_GetBuffer@@YAPEAIPEAUSurface@@@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?Surface_GetBuffer@@YAPEAIPEAUSurface@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Surface_GetBuffer@@YAPEAIPEAUSurface@@@Z DD 010601H
	DD	07006H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?Surface_GetBuffer@@YAPEAIPEAUSurface@@@Z
_TEXT	SEGMENT
s$ = 16
?Surface_GetBuffer@@YAPEAIPEAUSurface@@@Z PROC		; Surface_GetBuffer, COMDAT
; Line 24
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR s$[rsp]
	mov	rax, QWORD PTR [rax]
	pop	rdi
	ret	0
?Surface_GetBuffer@@YAPEAIPEAUSurface@@@Z ENDP		; Surface_GetBuffer
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	fclose:PROC
EXTRN	fprintf:PROC
EXTRN	fopen:PROC
pdata	SEGMENT
$pdata$?DrawWindow@@YAXH@Z DD imagerel $LN10
	DD	imagerel $LN10+459
	DD	imagerel $unwind$?DrawWindow@@YAXH@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?DrawWindow@@YAXH@Z DD 033419H
	DD	09a010cH
	DD	07005H
	DD	imagerel __GSHandlerCheck
	DD	04c0H
xdata	ENDS
CONST	SEGMENT
?DrawWindow@@YAXH@Z$rtcName$0 DB 066H			; DrawWindow
	DB	06eH
	DB	061H
	DB	06dH
	DB	065H
	DB	00H
	ORG $+2
?DrawWindow@@YAXH@Z$rtcName$1 DB 072H			; DrawWindow
	DB	00H
	ORG $+2
?DrawWindow@@YAXH@Z$rtcName$2 DB 067H			; DrawWindow
	DB	00H
	ORG $+2
?DrawWindow@@YAXH@Z$rtcName$3 DB 062H			; DrawWindow
	DB	00H
	ORG $+6
?DrawWindow@@YAXH@Z$rtcFrameData DD 04H			; DrawWindow
	DD	00H
	DQ	FLAT:?DrawWindow@@YAXH@Z$rtcVarDesc
	ORG $+8
?DrawWindow@@YAXH@Z$rtcVarDesc DD 04a4H			; DrawWindow
	DD	04H
	DQ	FLAT:?DrawWindow@@YAXH@Z$rtcName$3
	DD	0484H
	DD	04H
	DQ	FLAT:?DrawWindow@@YAXH@Z$rtcName$2
	DD	0464H
	DD	04H
	DQ	FLAT:?DrawWindow@@YAXH@Z$rtcName$1
	DD	040H
	DD	0400H
	DQ	FLAT:?DrawWindow@@YAXH@Z$rtcName$0
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
_TEXT	SEGMENT
fname$ = 64
outfile$ = 1096
i$ = 1104
r$84591 = 1108
c$84595 = 1112
r$84599 = 1124
g$84600 = 1156
b$84601 = 1188
__$ArrayPad$ = 1216
runCnt$ = 1248
?DrawWindow@@YAXH@Z PROC				; DrawWindow
; File c:\users\mark\documents\devmaster_raytracing\raytracer3.0.06.no_rec.samp\testapp.cpp
; Line 181
$LN10:
	mov	DWORD PTR [rsp+8], ecx
	push	rdi
	sub	rsp, 1232				; 000004d0H
	mov	rdi, rsp
	mov	ecx, 308				; 00000134H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+1248]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 183
	mov	r8d, DWORD PTR runCnt$[rsp]
	lea	rdx, OFFSET FLAT:$SG84586
	lea	rcx, QWORD PTR fname$[rsp]
	call	sprintf
; Line 184
	lea	rdx, OFFSET FLAT:$SG84588
	lea	rcx, QWORD PTR fname$[rsp]
	call	fopen
	mov	QWORD PTR outfile$[rsp], rax
; Line 185
	lea	rdx, OFFSET FLAT:$SG84589
	mov	rcx, QWORD PTR outfile$[rsp]
	call	fprintf
; Line 186
	mov	DWORD PTR i$[rsp], 0
; Line 187
	mov	DWORD PTR r$84591[rsp], 0
	jmp	SHORT $LN7@DrawWindow
$LN6@DrawWindow:
	mov	eax, DWORD PTR r$84591[rsp]
	inc	eax
	mov	DWORD PTR r$84591[rsp], eax
$LN7@DrawWindow:
	cmp	DWORD PTR r$84591[rsp], 600		; 00000258H
	jge	$LN5@DrawWindow
; Line 188
	mov	DWORD PTR c$84595[rsp], 0
	jmp	SHORT $LN4@DrawWindow
$LN3@DrawWindow:
	mov	eax, DWORD PTR c$84595[rsp]
	inc	eax
	mov	DWORD PTR c$84595[rsp], eax
$LN4@DrawWindow:
	cmp	DWORD PTR c$84595[rsp], 800		; 00000320H
	jge	$LN2@DrawWindow
; Line 190
	movsxd	rax, DWORD PTR i$[rsp]
	lea	r9, QWORD PTR b$84601[rsp]
	lea	r8, QWORD PTR g$84600[rsp]
	lea	rdx, QWORD PTR r$84599[rsp]
	mov	rcx, QWORD PTR ?buffer@@3PEAIEA		; buffer
	mov	ecx, DWORD PTR [rcx+rax*4]
	call	?GetPixelColor@@YAXIAEAH00@Z		; GetPixelColor
; Line 191
	mov	eax, DWORD PTR b$84601[rsp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, DWORD PTR g$84600[rsp]
	mov	r8d, DWORD PTR r$84599[rsp]
	lea	rdx, OFFSET FLAT:$SG84602
	mov	rcx, QWORD PTR outfile$[rsp]
	call	fprintf
; Line 192
	mov	eax, DWORD PTR i$[rsp]
	inc	eax
	mov	DWORD PTR i$[rsp], eax
; Line 193
	mov	eax, DWORD PTR c$84595[rsp]
	cdq
	mov	ecx, 5
	idiv	ecx
	mov	eax, edx
	test	eax, eax
	jne	SHORT $LN1@DrawWindow
; Line 194
	lea	rdx, OFFSET FLAT:$SG84604
	mov	rcx, QWORD PTR outfile$[rsp]
	call	fprintf
$LN1@DrawWindow:
; Line 195
	jmp	$LN3@DrawWindow
$LN2@DrawWindow:
; Line 196
	lea	rdx, OFFSET FLAT:$SG84605
	mov	rcx, QWORD PTR outfile$[rsp]
	call	fprintf
; Line 197
	jmp	$LN6@DrawWindow
$LN5@DrawWindow:
; Line 198
	mov	rcx, QWORD PTR outfile$[rsp]
	call	fclose
; Line 199
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?DrawWindow@@YAXH@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 1232				; 000004d0H
	pop	rdi
	ret	0
?DrawWindow@@YAXH@Z ENDP				; DrawWindow
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
pdata	SEGMENT
$pdata$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD 021e01H
	DD	07006320aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 48
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; Line 1496
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
; Line 1497
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Line 1498
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD 021e01H
	DD	07006120aH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
tv82 = 0
this$ = 32
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; Line 2009
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16
	mov	rdi, rsp
	mov	ecx, 4
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+32]
; Line 2011
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+32], 16
	jb	SHORT $LN3@Myptr
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR tv82[rsp], rax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	QWORD PTR tv82[rsp], rax
$LN4@Myptr:
	mov	rax, QWORD PTR tv82[rsp]
; Line 2012
	add	rsp, 16
	pop	rdi
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
END

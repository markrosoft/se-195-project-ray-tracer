; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?captionBuffer@@3PADA				; captionBuffer
PUBLIC	?amiSmallptCPU@@3HA				; amiSmallptCPU
PUBLIC	?pixels@@3PEAIEA				; pixels
PUBLIC	?width@@3HA					; width
PUBLIC	?height@@3HA					; height
_BSS	SEGMENT
?captionBuffer@@3PADA DB 0100H DUP (?)			; captionBuffer
?amiSmallptCPU@@3HA DD 01H DUP (?)			; amiSmallptCPU
	ALIGN	8

?pixels@@3PEAIEA DQ 01H DUP (?)				; pixels
_BSS	ENDS
CONST	SEGMENT
$SG69718 DB	'Help', 00H
	ORG $+3
$SG69720 DB	'h - toggle Help', 00H
$SG69722 DB	'arrow Keys - rotate camera left/right/up/down', 00H
	ORG $+2
$SG69724 DB	'a and d - move camera left and right', 00H
	ORG $+3
$SG69726 DB	'w and s - move camera forward and backward', 00H
	ORG $+1
$SG69740 DB	'r', 00H
	ORG $+2
$SG69728 DB	'r and f - move camera up and down', 00H
	ORG $+2
$SG69815 DB	'w', 00H
	ORG $+2
$SG69730 DB	'PageUp and PageDown - move camera target up and down', 00H
	ORG $+3
$SG69732 DB	'+ and - - to select next/previous object', 00H
	ORG $+3
$SG69833 DB	'Done.', 0aH, 00H
	ORG $+5
$SG69734 DB	'2, 3, 4, 5, 6, 8, 9 - to move selected object', 00H
	ORG $+2
$SG69738 DB	'Reading scene: %s', 0aH, 00H
	ORG $+5
$SG69742 DB	'Failed to open file: %s', 0aH, 00H
	ORG $+7
$SG69744 DB	'camera %f %f %f  %f %f %f', 0aH, 00H
	ORG $+5
$SG69746 DB	'Failed to read 6 camera parameters: %d', 0aH, 00H
$SG69747 DB	'size %u', 0aH, 00H
	ORG $+7
$SG69749 DB	'Failed to read sphere count: %d', 0aH, 00H
	ORG $+7
$SG69750 DB	'Scene size: %d', 0aH, 00H
$SG69760 DB	'sphere %f  %f %f %f  %f %f %f  %f %f %f  %d', 0aH, 00H
	ORG $+3
$SG69769 DB	'Failed to read material type for sphere #%d: %d', 0aH, 00H
	ORG $+7
$SG69771 DB	'Failed to read sphere #%d: %d', 0aH, 00H
	ORG $+1
$SG69794 DB	'SmallptCPU v1.6 (Written by David Bucciarelli)', 00H
	ORG $+1
$SG69797 DB	'SmallptGPU v1.6 (Written by David Bucciarelli)', 00H
	ORG $+1
$SG69816 DB	'image.ppm', 00H
	ORG $+6
$SG69818 DB	'Failed to open image file: image.ppm', 0aH, 00H
	ORG $+2
$SG69820 DB	'P3', 0aH, '%d %d', 0aH, '%d', 0aH, 00H
	ORG $+3
$SG69831 DB	'%d %d %d ', 00H
	ORG $+6
$SG69854 DB	'Selected sphere %d (%f %f %f)', 0aH, 00H
	ORG $+1
$SG69856 DB	'Selected sphere %d (%f %f %f)', 0aH, 00H
CONST	ENDS
_DATA	SEGMENT
?width@@3HA DD	0280H					; width
?height@@3HA DD	01e0H					; height
printHelp DD	01H
_DATA	ENDS
PUBLIC	__real@408f400000000000
PUBLIC	?WallClockTime@@YANXZ				; WallClockTime
EXTRN	__imp_GetTickCount:PROC
EXTRN	_fltused:DWORD
EXTRN	_RTC_Shutdown:PROC
EXTRN	_RTC_InitBase:PROC
pdata	SEGMENT
$pdata$?WallClockTime@@YANXZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?WallClockTime@@YANXZ
pdata	ENDS
xdata	SEGMENT
$unwind$?WallClockTime@@YANXZ DD 021501H
	DD	070025206H
xdata	ENDS
;	COMDAT __real@408f400000000000
; File c:\users\mark\documents\smallptgpu-v1.6\displayfunc.cpp
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
?WallClockTime@@YANXZ PROC				; WallClockTime
; Line 69
$LN3:
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 76
	call	QWORD PTR __imp_GetTickCount
	mov	eax, eax
	pxor	xmm0, xmm0
	cvtsi2sd xmm0, rax
	divsd	xmm0, QWORD PTR __real@408f400000000000
; Line 80
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?WallClockTime@@YANXZ ENDP				; WallClockTime
_TEXT	ENDS
PUBLIC	?ReadScene@@YAXPEAD@Z				; ReadScene
EXTRN	__imp_fclose:PROC
EXTRN	?spheres@@3PEAUSphere@@EA:QWORD			; spheres
EXTRN	__imp_malloc:PROC
EXTRN	?sphereCount@@3IA:DWORD				; sphereCount
EXTRN	__imp_fscanf:PROC
EXTRN	?camera@@3UCamera@@A:BYTE			; camera
EXTRN	__imp_exit:PROC
EXTRN	__imp_fopen:PROC
EXTRN	__imp_fprintf:PROC
EXTRN	__imp___iob_func:PROC
EXTRN	_RTC_CheckStackVars:PROC
pdata	SEGMENT
$pdata$?ReadScene@@YAXPEAD@Z DD imagerel $LN16
	DD	imagerel $LN16+932
	DD	imagerel $unwind$?ReadScene@@YAXPEAD@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?ReadScene@@YAXPEAD@Z DD 052601H
	DD	016010fH
	DD	060077008H
	DD	03006H
xdata	ENDS
CONST	SEGMENT
	ORG $+1
?ReadScene@@YAXPEAD@Z$rtcName$0 DB 06dH			; ReadScene
	DB	061H
	DB	074H
	DB	00H
	ORG $+12
?ReadScene@@YAXPEAD@Z$rtcVarDesc DD 094H		; ReadScene
	DD	04H
	DQ	FLAT:?ReadScene@@YAXPEAD@Z$rtcName$0
	ORG $+48
?ReadScene@@YAXPEAD@Z$rtcFrameData DD 01H		; ReadScene
	DD	00H
	DQ	FLAT:?ReadScene@@YAXPEAD@Z$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
_TEXT	SEGMENT
f$ = 112
c$ = 120
i$ = 124
s$69757 = 128
mat$69758 = 148
c$69759 = 164
tv184 = 168
fileName$ = 208
?ReadScene@@YAXPEAD@Z PROC				; ReadScene
; Line 120
$LN16:
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	push	rsi
	push	rdi
	sub	rsp, 176				; 000000b0H
	mov	rdi, rsp
	mov	ecx, 44					; 0000002cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+208]
; Line 121
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8, QWORD PTR fileName$[rsp]
	lea	rdx, OFFSET FLAT:$SG69738
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 123
	lea	rdx, OFFSET FLAT:$SG69740
	mov	rcx, QWORD PTR fileName$[rsp]
	call	QWORD PTR __imp_fopen
	mov	QWORD PTR f$[rsp], rax
; Line 124
	cmp	QWORD PTR f$[rsp], 0
	jne	SHORT $LN13@ReadScene
; Line 125
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8, QWORD PTR fileName$[rsp]
	lea	rdx, OFFSET FLAT:$SG69742
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 126
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN13@ReadScene:
; Line 132
	lea	rax, OFFSET FLAT:?camera@@3UCamera@@A+20
	mov	QWORD PTR [rsp+56], rax
	lea	rax, OFFSET FLAT:?camera@@3UCamera@@A+16
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:?camera@@3UCamera@@A+12
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:?camera@@3UCamera@@A+8
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:?camera@@3UCamera@@A+4
	lea	r8, OFFSET FLAT:?camera@@3UCamera@@A	; camera
	lea	rdx, OFFSET FLAT:$SG69744
	mov	rcx, QWORD PTR f$[rsp]
	call	QWORD PTR __imp_fscanf
	mov	DWORD PTR c$[rsp], eax
; Line 133
	cmp	DWORD PTR c$[rsp], 6
	je	SHORT $LN12@ReadScene
; Line 134
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR c$[rsp]
	lea	rdx, OFFSET FLAT:$SG69746
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 135
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN12@ReadScene:
; Line 139
	lea	r8, OFFSET FLAT:?sphereCount@@3IA	; sphereCount
	lea	rdx, OFFSET FLAT:$SG69747
	mov	rcx, QWORD PTR f$[rsp]
	call	QWORD PTR __imp_fscanf
	mov	DWORD PTR c$[rsp], eax
; Line 140
	cmp	DWORD PTR c$[rsp], 1
	je	SHORT $LN11@ReadScene
; Line 141
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR c$[rsp]
	lea	rdx, OFFSET FLAT:$SG69749
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 142
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN11@ReadScene:
; Line 144
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r8d, DWORD PTR ?sphereCount@@3IA	; sphereCount
	lea	rdx, OFFSET FLAT:$SG69750
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 147
	mov	eax, DWORD PTR ?sphereCount@@3IA	; sphereCount
	imul	rax, 44					; 0000002cH
	mov	rcx, rax
	call	QWORD PTR __imp_malloc
	mov	QWORD PTR ?spheres@@3PEAUSphere@@EA, rax ; spheres
; Line 149
	mov	DWORD PTR i$[rsp], 0
	jmp	SHORT $LN10@ReadScene
$LN9@ReadScene:
	mov	eax, DWORD PTR i$[rsp]
	inc	eax
	mov	DWORD PTR i$[rsp], eax
$LN10@ReadScene:
	mov	eax, DWORD PTR ?sphereCount@@3IA	; sphereCount
	cmp	DWORD PTR i$[rsp], eax
	jae	$LN8@ReadScene
; Line 150
	mov	eax, DWORD PTR i$[rsp]
	imul	rax, 44					; 0000002cH
	mov	rcx, QWORD PTR ?spheres@@3PEAUSphere@@EA ; spheres
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR s$69757[rsp], rax
; Line 157
	mov	rax, QWORD PTR s$69757[rsp]
	add	rax, 36					; 00000024H
	mov	rcx, QWORD PTR s$69757[rsp]
	add	rcx, 32					; 00000020H
	mov	rdx, QWORD PTR s$69757[rsp]
	add	rdx, 28
	mov	r8, QWORD PTR s$69757[rsp]
	add	r8, 24
	mov	r9, QWORD PTR s$69757[rsp]
	add	r9, 20
	mov	r10, QWORD PTR s$69757[rsp]
	add	r10, 16
	mov	r11, QWORD PTR s$69757[rsp]
	add	r11, 12
	mov	rbx, QWORD PTR s$69757[rsp]
	add	rbx, 8
	mov	rdi, QWORD PTR s$69757[rsp]
	add	rdi, 4
	lea	rsi, QWORD PTR mat$69758[rsp]
	mov	QWORD PTR [rsp+96], rsi
	mov	QWORD PTR [rsp+88], rax
	mov	QWORD PTR [rsp+80], rcx
	mov	QWORD PTR [rsp+72], rdx
	mov	QWORD PTR [rsp+64], r8
	mov	QWORD PTR [rsp+56], r9
	mov	QWORD PTR [rsp+48], r10
	mov	QWORD PTR [rsp+40], r11
	mov	QWORD PTR [rsp+32], rbx
	mov	r9, rdi
	mov	r8, QWORD PTR s$69757[rsp]
	lea	rdx, OFFSET FLAT:$SG69760
	mov	rcx, QWORD PTR f$[rsp]
	call	QWORD PTR __imp_fscanf
	mov	DWORD PTR c$69759[rsp], eax
; Line 158
	mov	eax, DWORD PTR mat$69758[rsp]
	mov	DWORD PTR tv184[rsp], eax
	cmp	DWORD PTR tv184[rsp], 0
	je	SHORT $LN5@ReadScene
	cmp	DWORD PTR tv184[rsp], 1
	je	SHORT $LN4@ReadScene
	cmp	DWORD PTR tv184[rsp], 2
	je	SHORT $LN3@ReadScene
	jmp	SHORT $LN2@ReadScene
$LN5@ReadScene:
; Line 160
	mov	rax, QWORD PTR s$69757[rsp]
	mov	DWORD PTR [rax+40], 0
; Line 161
	jmp	SHORT $LN6@ReadScene
$LN4@ReadScene:
; Line 163
	mov	rax, QWORD PTR s$69757[rsp]
	mov	DWORD PTR [rax+40], 1
; Line 164
	jmp	SHORT $LN6@ReadScene
$LN3@ReadScene:
; Line 166
	mov	rax, QWORD PTR s$69757[rsp]
	mov	DWORD PTR [rax+40], 2
; Line 167
	jmp	SHORT $LN6@ReadScene
$LN2@ReadScene:
; Line 169
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r9d, DWORD PTR mat$69758[rsp]
	mov	r8d, DWORD PTR i$[rsp]
	lea	rdx, OFFSET FLAT:$SG69769
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 170
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN6@ReadScene:
; Line 173
	cmp	DWORD PTR c$69759[rsp], 11
	je	SHORT $LN1@ReadScene
; Line 174
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	mov	r9d, DWORD PTR c$69759[rsp]
	mov	r8d, DWORD PTR i$[rsp]
	lea	rdx, OFFSET FLAT:$SG69771
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 175
	mov	ecx, -1
	call	QWORD PTR __imp_exit
$LN1@ReadScene:
; Line 177
	jmp	$LN9@ReadScene
$LN8@ReadScene:
; Line 179
	mov	rcx, QWORD PTR f$[rsp]
	call	QWORD PTR __imp_fclose
$LN15@ReadScene:
; Line 180
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?ReadScene@@YAXPEAD@Z$rtcFrameData
	call	_RTC_CheckStackVars
	add	rsp, 176				; 000000b0H
	pop	rdi
	pop	rsi
	pop	rbx
	ret	0
?ReadScene@@YAXPEAD@Z ENDP				; ReadScene
_TEXT	ENDS
PUBLIC	__real@3f490fdb
PUBLIC	__real@3f800000
PUBLIC	?sqrt@@YAMM@Z					; sqrt
PUBLIC	__$ArrayPad$
PUBLIC	?UpdateCamera@@YAXXZ				; UpdateCamera
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_cookie:QWORD
EXTRN	__security_check_cookie:PROC
pdata	SEGMENT
$pdata$?UpdateCamera@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+1108
	DD	imagerel $unwind$?UpdateCamera@@YAXXZ
pdata	ENDS
xdata	SEGMENT
$unwind$?UpdateCamera@@YAXXZ DD 022719H
	DD	07002f209H
	DD	imagerel __GSHandlerCheck
	DD	078H
xdata	ENDS
;	COMDAT __real@3f490fdb
CONST	SEGMENT
__real@3f490fdb DD 03f490fdbr			; 0.785398
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
CONST	SEGMENT
?UpdateCamera@@YAXXZ$rtcName$0 DB 075H			; UpdateCamera
	DB	070H
	DB	00H
	ORG $+13
?UpdateCamera@@YAXXZ$rtcVarDesc DD 038H			; UpdateCamera
	DD	0cH
	DQ	FLAT:?UpdateCamera@@YAXXZ$rtcName$0
	ORG $+48
?UpdateCamera@@YAXXZ$rtcFrameData DD 01H		; UpdateCamera
	DD	00H
	DQ	FLAT:?UpdateCamera@@YAXXZ$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
_TEXT	SEGMENT
l$69774 = 32
k$69775 = 36
up$ = 56
fov$ = 84
l$69778 = 88
k$69779 = 92
k$69780 = 96
l$69781 = 100
k$69782 = 104
k$69783 = 108
__$ArrayPad$ = 120
?UpdateCamera@@YAXXZ PROC				; UpdateCamera
; Line 182
$LN3:
	push	rdi
	sub	rsp, 128				; 00000080H
	mov	rdi, rsp
	mov	ecx, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 183
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+12
	subss	xmm0, DWORD PTR ?camera@@3UCamera@@A
	movss	DWORD PTR ?camera@@3UCamera@@A+24, xmm0
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+16
	subss	xmm0, DWORD PTR ?camera@@3UCamera@@A+4
	movss	DWORD PTR ?camera@@3UCamera@@A+28, xmm0
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+20
	subss	xmm0, DWORD PTR ?camera@@3UCamera@@A+8
	movss	DWORD PTR ?camera@@3UCamera@@A+32, xmm0
; Line 184
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+24
	mulss	xmm0, DWORD PTR ?camera@@3UCamera@@A+24
	movss	xmm1, DWORD PTR ?camera@@3UCamera@@A+28
	mulss	xmm1, DWORD PTR ?camera@@3UCamera@@A+28
	addss	xmm0, xmm1
	movss	xmm1, DWORD PTR ?camera@@3UCamera@@A+32
	mulss	xmm1, DWORD PTR ?camera@@3UCamera@@A+32
	addss	xmm0, xmm1
	call	?sqrt@@YAMM@Z				; sqrt
	movss	xmm1, DWORD PTR __real@3f800000
	divss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR l$69774[rsp], xmm0
	movss	xmm0, DWORD PTR l$69774[rsp]
	movss	DWORD PTR k$69775[rsp], xmm0
	movss	xmm0, DWORD PTR k$69775[rsp]
	mulss	xmm0, DWORD PTR ?camera@@3UCamera@@A+24
	movss	DWORD PTR ?camera@@3UCamera@@A+24, xmm0
	movss	xmm0, DWORD PTR k$69775[rsp]
	mulss	xmm0, DWORD PTR ?camera@@3UCamera@@A+28
	movss	DWORD PTR ?camera@@3UCamera@@A+28, xmm0
	movss	xmm0, DWORD PTR k$69775[rsp]
	mulss	xmm0, DWORD PTR ?camera@@3UCamera@@A+32
	movss	DWORD PTR ?camera@@3UCamera@@A+32, xmm0
; Line 186
	xorps	xmm0, xmm0
	movss	DWORD PTR up$[rsp], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR up$[rsp+4], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR up$[rsp+8], xmm0
; Line 187
	movss	xmm0, DWORD PTR __real@3f490fdb
	movss	DWORD PTR fov$[rsp], xmm0
; Line 188
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+28
	mulss	xmm0, DWORD PTR up$[rsp+8]
	movss	xmm1, DWORD PTR ?camera@@3UCamera@@A+32
	mulss	xmm1, DWORD PTR up$[rsp+4]
	subss	xmm0, xmm1
	movss	DWORD PTR ?camera@@3UCamera@@A+36, xmm0
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+32
	mulss	xmm0, DWORD PTR up$[rsp]
	movss	xmm1, DWORD PTR ?camera@@3UCamera@@A+24
	mulss	xmm1, DWORD PTR up$[rsp+8]
	subss	xmm0, xmm1
	movss	DWORD PTR ?camera@@3UCamera@@A+40, xmm0
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+24
	mulss	xmm0, DWORD PTR up$[rsp+4]
	movss	xmm1, DWORD PTR ?camera@@3UCamera@@A+28
	mulss	xmm1, DWORD PTR up$[rsp]
	subss	xmm0, xmm1
	movss	DWORD PTR ?camera@@3UCamera@@A+44, xmm0
; Line 189
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+36
	mulss	xmm0, DWORD PTR ?camera@@3UCamera@@A+36
	movss	xmm1, DWORD PTR ?camera@@3UCamera@@A+40
	mulss	xmm1, DWORD PTR ?camera@@3UCamera@@A+40
	addss	xmm0, xmm1
	movss	xmm1, DWORD PTR ?camera@@3UCamera@@A+44
	mulss	xmm1, DWORD PTR ?camera@@3UCamera@@A+44
	addss	xmm0, xmm1
	call	?sqrt@@YAMM@Z				; sqrt
	movss	xmm1, DWORD PTR __real@3f800000
	divss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR l$69778[rsp], xmm0
	movss	xmm0, DWORD PTR l$69778[rsp]
	movss	DWORD PTR k$69779[rsp], xmm0
	movss	xmm0, DWORD PTR k$69779[rsp]
	mulss	xmm0, DWORD PTR ?camera@@3UCamera@@A+36
	movss	DWORD PTR ?camera@@3UCamera@@A+36, xmm0
	movss	xmm0, DWORD PTR k$69779[rsp]
	mulss	xmm0, DWORD PTR ?camera@@3UCamera@@A+40
	movss	DWORD PTR ?camera@@3UCamera@@A+40, xmm0
	movss	xmm0, DWORD PTR k$69779[rsp]
	mulss	xmm0, DWORD PTR ?camera@@3UCamera@@A+44
	movss	DWORD PTR ?camera@@3UCamera@@A+44, xmm0
; Line 190
	movd	xmm0, DWORD PTR ?width@@3HA		; width
	cvtdq2ps xmm0, xmm0
	mulss	xmm0, DWORD PTR fov$[rsp]
	movd	xmm1, DWORD PTR ?height@@3HA		; height
	cvtdq2ps xmm1, xmm1
	divss	xmm0, xmm1
	movss	DWORD PTR k$69780[rsp], xmm0
	movss	xmm0, DWORD PTR k$69780[rsp]
	mulss	xmm0, DWORD PTR ?camera@@3UCamera@@A+36
	movss	DWORD PTR ?camera@@3UCamera@@A+36, xmm0
	movss	xmm0, DWORD PTR k$69780[rsp]
	mulss	xmm0, DWORD PTR ?camera@@3UCamera@@A+40
	movss	DWORD PTR ?camera@@3UCamera@@A+40, xmm0
	movss	xmm0, DWORD PTR k$69780[rsp]
	mulss	xmm0, DWORD PTR ?camera@@3UCamera@@A+44
	movss	DWORD PTR ?camera@@3UCamera@@A+44, xmm0
; Line 192
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+40
	mulss	xmm0, DWORD PTR ?camera@@3UCamera@@A+32
	movss	xmm1, DWORD PTR ?camera@@3UCamera@@A+44
	mulss	xmm1, DWORD PTR ?camera@@3UCamera@@A+28
	subss	xmm0, xmm1
	movss	DWORD PTR ?camera@@3UCamera@@A+48, xmm0
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+44
	mulss	xmm0, DWORD PTR ?camera@@3UCamera@@A+24
	movss	xmm1, DWORD PTR ?camera@@3UCamera@@A+36
	mulss	xmm1, DWORD PTR ?camera@@3UCamera@@A+32
	subss	xmm0, xmm1
	movss	DWORD PTR ?camera@@3UCamera@@A+52, xmm0
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+36
	mulss	xmm0, DWORD PTR ?camera@@3UCamera@@A+28
	movss	xmm1, DWORD PTR ?camera@@3UCamera@@A+40
	mulss	xmm1, DWORD PTR ?camera@@3UCamera@@A+24
	subss	xmm0, xmm1
	movss	DWORD PTR ?camera@@3UCamera@@A+56, xmm0
; Line 193
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+48
	mulss	xmm0, DWORD PTR ?camera@@3UCamera@@A+48
	movss	xmm1, DWORD PTR ?camera@@3UCamera@@A+52
	mulss	xmm1, DWORD PTR ?camera@@3UCamera@@A+52
	addss	xmm0, xmm1
	movss	xmm1, DWORD PTR ?camera@@3UCamera@@A+56
	mulss	xmm1, DWORD PTR ?camera@@3UCamera@@A+56
	addss	xmm0, xmm1
	call	?sqrt@@YAMM@Z				; sqrt
	movss	xmm1, DWORD PTR __real@3f800000
	divss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR l$69781[rsp], xmm0
	movss	xmm0, DWORD PTR l$69781[rsp]
	movss	DWORD PTR k$69782[rsp], xmm0
	movss	xmm0, DWORD PTR k$69782[rsp]
	mulss	xmm0, DWORD PTR ?camera@@3UCamera@@A+48
	movss	DWORD PTR ?camera@@3UCamera@@A+48, xmm0
	movss	xmm0, DWORD PTR k$69782[rsp]
	mulss	xmm0, DWORD PTR ?camera@@3UCamera@@A+52
	movss	DWORD PTR ?camera@@3UCamera@@A+52, xmm0
	movss	xmm0, DWORD PTR k$69782[rsp]
	mulss	xmm0, DWORD PTR ?camera@@3UCamera@@A+56
	movss	DWORD PTR ?camera@@3UCamera@@A+56, xmm0
; Line 194
	movss	xmm0, DWORD PTR fov$[rsp]
	movss	DWORD PTR k$69783[rsp], xmm0
	movss	xmm0, DWORD PTR k$69783[rsp]
	mulss	xmm0, DWORD PTR ?camera@@3UCamera@@A+48
	movss	DWORD PTR ?camera@@3UCamera@@A+48, xmm0
	movss	xmm0, DWORD PTR k$69783[rsp]
	mulss	xmm0, DWORD PTR ?camera@@3UCamera@@A+52
	movss	DWORD PTR ?camera@@3UCamera@@A+52, xmm0
	movss	xmm0, DWORD PTR k$69783[rsp]
	mulss	xmm0, DWORD PTR ?camera@@3UCamera@@A+56
	movss	DWORD PTR ?camera@@3UCamera@@A+56, xmm0
; Line 195
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?UpdateCamera@@YAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 128				; 00000080H
	pop	rdi
	ret	0
?UpdateCamera@@YAXXZ ENDP				; UpdateCamera
_TEXT	ENDS
EXTRN	__imp_sqrtf:PROC
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\math.h
pdata	SEGMENT
$pdata$?sqrt@@YAMM@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$?sqrt@@YAMM@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?sqrt@@YAMM@Z DD 021a01H
	DD	07007520bH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
;	COMDAT ?sqrt@@YAMM@Z
_TEXT	SEGMENT
_X$ = 64
?sqrt@@YAMM@Z PROC					; sqrt, COMDAT
; Line 542
$LN3:
	movss	DWORD PTR [rsp+8], xmm0
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	movss	xmm0, DWORD PTR _X$[rsp]
	call	QWORD PTR __imp_sqrtf
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?sqrt@@YAMM@Z ENDP					; sqrt
_TEXT	ENDS
PUBLIC	?idleFunc@@YAXXZ				; idleFunc
EXTRN	glutPostRedisplay:PROC
EXTRN	?UpdateRenderingCPU@@YAXXZ:PROC			; UpdateRenderingCPU
EXTRN	?UpdateRenderingGPU@@YAXXZ:PROC			; UpdateRenderingGPU
EXTRN	?useOpenCL@@3HA:DWORD				; useOpenCL
pdata	SEGMENT
$pdata$?idleFunc@@YAXXZ DD imagerel $LN5
	DD	imagerel $LN5+53
	DD	imagerel $unwind$?idleFunc@@YAXXZ
pdata	ENDS
xdata	SEGMENT
$unwind$?idleFunc@@YAXXZ DD 021501H
	DD	070023206H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
_TEXT	SEGMENT
?idleFunc@@YAXXZ PROC					; idleFunc
; File c:\users\mark\documents\smallptgpu-v1.6\displayfunc.cpp
; Line 197
$LN5:
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 198
	cmp	DWORD PTR ?useOpenCL@@3HA, 0		; useOpenCL
	je	SHORT $LN2@idleFunc
; Line 199
	call	?UpdateRenderingGPU@@YAXXZ		; UpdateRenderingGPU
; Line 200
	jmp	SHORT $LN1@idleFunc
$LN2@idleFunc:
; Line 201
	call	?UpdateRenderingCPU@@YAXXZ		; UpdateRenderingCPU
$LN1@idleFunc:
; Line 203
	call	glutPostRedisplay
; Line 204
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?idleFunc@@YAXXZ ENDP					; idleFunc
_TEXT	ENDS
PUBLIC	__real@4083fc0000000000
PUBLIC	__real@bfe0000000000000
PUBLIC	__real@407df80000000000
PUBLIC	__real@bff0000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	?displayFunc@@YAXXZ				; displayFunc
EXTRN	glutSwapBuffers:PROC
EXTRN	__imp_glPopMatrix:PROC
EXTRN	__imp_glOrtho:PROC
EXTRN	__imp_glLoadIdentity:PROC
EXTRN	__imp_glPushMatrix:PROC
EXTRN	__imp_glColor3f:PROC
EXTRN	__imp_glDrawPixels:PROC
EXTRN	__imp_glRasterPos2i:PROC
EXTRN	__imp_glClear:PROC
pdata	SEGMENT
$pdata$?displayFunc@@YAXXZ DD imagerel $LN6
	DD	imagerel $LN6+353
	DD	imagerel $unwind$?displayFunc@@YAXXZ
pdata	ENDS
xdata	SEGMENT
$unwind$?displayFunc@@YAXXZ DD 021501H
	DD	070025206H
xdata	ENDS
;	COMDAT __real@4083fc0000000000
CONST	SEGMENT
__real@4083fc0000000000 DQ 04083fc0000000000r	; 639.5
CONST	ENDS
;	COMDAT __real@bfe0000000000000
CONST	SEGMENT
__real@bfe0000000000000 DQ 0bfe0000000000000r	; -0.5
CONST	ENDS
;	COMDAT __real@407df80000000000
CONST	SEGMENT
__real@407df80000000000 DQ 0407df80000000000r	; 479.5
CONST	ENDS
;	COMDAT __real@bff0000000000000
CONST	SEGMENT
__real@bff0000000000000 DQ 0bff0000000000000r	; -1
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
_TEXT	SEGMENT
?displayFunc@@YAXXZ PROC				; displayFunc
; Line 206
$LN6:
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 207
	mov	ecx, 16384				; 00004000H
	call	QWORD PTR __imp_glClear
; Line 208
	xor	edx, edx
	xor	ecx, ecx
	call	QWORD PTR __imp_glRasterPos2i
; Line 209
	mov	rax, QWORD PTR ?pixels@@3PEAIEA		; pixels
	mov	QWORD PTR [rsp+32], rax
	mov	r9d, 5121				; 00001401H
	mov	r8d, 6408				; 00001908H
	mov	edx, DWORD PTR ?height@@3HA		; height
	mov	ecx, DWORD PTR ?width@@3HA		; width
	call	QWORD PTR __imp_glDrawPixels
; Line 212
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	movss	xmm0, DWORD PTR __real@3f800000
	call	QWORD PTR __imp_glColor3f
; Line 213
	mov	eax, DWORD PTR ?height@@3HA		; height
	sub	eax, 16
	mov	edx, eax
	mov	ecx, 4
	call	QWORD PTR __imp_glRasterPos2i
; Line 214
	cmp	DWORD PTR ?amiSmallptCPU@@3HA, 0	; amiSmallptCPU
	je	SHORT $LN3@displayFun
; Line 215
	lea	rdx, OFFSET FLAT:$SG69794
	mov	ecx, 8
	call	?PrintString@@YAXPEAXPEBD@Z		; PrintString
; Line 216
	jmp	SHORT $LN2@displayFun
$LN3@displayFun:
; Line 217
	lea	rdx, OFFSET FLAT:$SG69797
	mov	ecx, 8
	call	?PrintString@@YAXPEAXPEBD@Z		; PrintString
$LN2@displayFun:
; Line 220
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	movss	xmm0, DWORD PTR __real@3f800000
	call	QWORD PTR __imp_glColor3f
; Line 221
	mov	edx, 10
	mov	ecx, 4
	call	QWORD PTR __imp_glRasterPos2i
; Line 222
	lea	rdx, OFFSET FLAT:?captionBuffer@@3PADA	; captionBuffer
	mov	ecx, 8
	call	?PrintString@@YAXPEAXPEBD@Z		; PrintString
; Line 224
	cmp	DWORD PTR printHelp, 0
	je	SHORT $LN1@displayFun
; Line 225
	call	QWORD PTR __imp_glPushMatrix
; Line 226
	call	QWORD PTR __imp_glLoadIdentity
; Line 227
	movsdx	xmm0, QWORD PTR __real@3ff0000000000000
	movsdx	QWORD PTR [rsp+40], xmm0
	movsdx	xmm0, QWORD PTR __real@bff0000000000000
	movsdx	QWORD PTR [rsp+32], xmm0
	movsdx	xmm3, QWORD PTR __real@407df80000000000
	movsdx	xmm2, QWORD PTR __real@bfe0000000000000
	movsdx	xmm1, QWORD PTR __real@4083fc0000000000
	movsdx	xmm0, QWORD PTR __real@bfe0000000000000
	call	QWORD PTR __imp_glOrtho
; Line 229
	call	?PrintHelp@@YAXXZ			; PrintHelp
; Line 231
	call	QWORD PTR __imp_glPopMatrix
$LN1@displayFun:
; Line 234
	call	glutSwapBuffers
; Line 235
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?displayFunc@@YAXXZ ENDP				; displayFunc
_TEXT	ENDS
EXTRN	glutBitmapCharacter:PROC
EXTRN	strlen:PROC
pdata	SEGMENT
$pdata$?PrintString@@YAXPEAXPEBD@Z DD imagerel ?PrintString@@YAXPEAXPEBD@Z
	DD	imagerel ?PrintString@@YAXPEAXPEBD@Z+113
	DD	imagerel $unwind$?PrintString@@YAXPEAXPEBD@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?PrintString@@YAXPEAXPEBD@Z DD 022301H
	DD	0700b520fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
_TEXT	SEGMENT
len$ = 32
i$ = 36
font$ = 64
string$ = 72
?PrintString@@YAXPEAXPEBD@Z PROC			; PrintString
; Line 82
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 85
	mov	rcx, QWORD PTR string$[rsp]
	call	strlen
	mov	DWORD PTR len$[rsp], eax
; Line 86
	mov	DWORD PTR i$[rsp], 0
	jmp	SHORT $LN3@PrintStrin
$LN2@PrintStrin:
	mov	eax, DWORD PTR i$[rsp]
	inc	eax
	mov	DWORD PTR i$[rsp], eax
$LN3@PrintStrin:
	mov	eax, DWORD PTR len$[rsp]
	cmp	DWORD PTR i$[rsp], eax
	jge	SHORT $LN1@PrintStrin
; Line 87
	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR string$[rsp]
	movsx	eax, BYTE PTR [rcx+rax]
	mov	edx, eax
	mov	rcx, QWORD PTR font$[rsp]
	call	glutBitmapCharacter
	jmp	SHORT $LN2@PrintStrin
$LN1@PrintStrin:
; Line 88
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?PrintString@@YAXPEAXPEBD@Z ENDP			; PrintString
_TEXT	ENDS
PUBLIC	__real@3f000000
EXTRN	__imp_glDisable:PROC
EXTRN	__imp_glRecti:PROC
EXTRN	__imp_glColor4f:PROC
EXTRN	__imp_glBlendFunc:PROC
EXTRN	__imp_glEnable:PROC
pdata	SEGMENT
$pdata$?PrintHelp@@YAXXZ DD imagerel ?PrintHelp@@YAXXZ
	DD	imagerel ?PrintHelp@@YAXXZ+448
	DD	imagerel $unwind$?PrintHelp@@YAXXZ
pdata	ENDS
xdata	SEGMENT
$unwind$?PrintHelp@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
_TEXT	SEGMENT
?PrintHelp@@YAXXZ PROC					; PrintHelp
; Line 90
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 91
	mov	ecx, 3042				; 00000be2H
	call	QWORD PTR __imp_glEnable
; Line 92
	mov	edx, 771				; 00000303H
	mov	ecx, 770				; 00000302H
	call	QWORD PTR __imp_glBlendFunc
; Line 93
	movss	xmm3, DWORD PTR __real@3f000000
	movss	xmm2, DWORD PTR __real@3f000000
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
	call	QWORD PTR __imp_glColor4f
; Line 94
	mov	r9d, 440				; 000001b8H
	mov	r8d, 600				; 00000258H
	mov	edx, 40					; 00000028H
	mov	ecx, 40					; 00000028H
	call	QWORD PTR __imp_glRecti
; Line 96
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	movss	xmm0, DWORD PTR __real@3f800000
	call	QWORD PTR __imp_glColor3f
; Line 97
	mov	edx, 420				; 000001a4H
	mov	ecx, 300				; 0000012cH
	call	QWORD PTR __imp_glRasterPos2i
; Line 98
	lea	rdx, OFFSET FLAT:$SG69718
	mov	ecx, 8
	call	?PrintString@@YAXPEAXPEBD@Z		; PrintString
; Line 100
	mov	edx, 390				; 00000186H
	mov	ecx, 60					; 0000003cH
	call	QWORD PTR __imp_glRasterPos2i
; Line 101
	lea	rdx, OFFSET FLAT:$SG69720
	mov	ecx, 8
	call	?PrintString@@YAXPEAXPEBD@Z		; PrintString
; Line 102
	mov	edx, 360				; 00000168H
	mov	ecx, 60					; 0000003cH
	call	QWORD PTR __imp_glRasterPos2i
; Line 103
	lea	rdx, OFFSET FLAT:$SG69722
	mov	ecx, 8
	call	?PrintString@@YAXPEAXPEBD@Z		; PrintString
; Line 104
	mov	edx, 330				; 0000014aH
	mov	ecx, 60					; 0000003cH
	call	QWORD PTR __imp_glRasterPos2i
; Line 105
	lea	rdx, OFFSET FLAT:$SG69724
	mov	ecx, 8
	call	?PrintString@@YAXPEAXPEBD@Z		; PrintString
; Line 106
	mov	edx, 300				; 0000012cH
	mov	ecx, 60					; 0000003cH
	call	QWORD PTR __imp_glRasterPos2i
; Line 107
	lea	rdx, OFFSET FLAT:$SG69726
	mov	ecx, 8
	call	?PrintString@@YAXPEAXPEBD@Z		; PrintString
; Line 108
	mov	edx, 270				; 0000010eH
	mov	ecx, 60					; 0000003cH
	call	QWORD PTR __imp_glRasterPos2i
; Line 109
	lea	rdx, OFFSET FLAT:$SG69728
	mov	ecx, 8
	call	?PrintString@@YAXPEAXPEBD@Z		; PrintString
; Line 110
	mov	edx, 240				; 000000f0H
	mov	ecx, 60					; 0000003cH
	call	QWORD PTR __imp_glRasterPos2i
; Line 111
	lea	rdx, OFFSET FLAT:$SG69730
	mov	ecx, 8
	call	?PrintString@@YAXPEAXPEBD@Z		; PrintString
; Line 112
	mov	edx, 210				; 000000d2H
	mov	ecx, 60					; 0000003cH
	call	QWORD PTR __imp_glRasterPos2i
; Line 113
	lea	rdx, OFFSET FLAT:$SG69732
	mov	ecx, 8
	call	?PrintString@@YAXPEAXPEBD@Z		; PrintString
; Line 114
	mov	edx, 180				; 000000b4H
	mov	ecx, 60					; 0000003cH
	call	QWORD PTR __imp_glRasterPos2i
; Line 115
	lea	rdx, OFFSET FLAT:$SG69734
	mov	ecx, 8
	call	?PrintString@@YAXPEAXPEBD@Z		; PrintString
; Line 117
	mov	ecx, 3042				; 00000be2H
	call	QWORD PTR __imp_glDisable
; Line 118
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?PrintHelp@@YAXXZ ENDP					; PrintHelp
_TEXT	ENDS
PUBLIC	?reshapeFunc@@YAXHH@Z				; reshapeFunc
EXTRN	?ReInit@@YAXH@Z:PROC				; ReInit
EXTRN	__imp_glViewport:PROC
pdata	SEGMENT
$pdata$?reshapeFunc@@YAXHH@Z DD imagerel $LN3
	DD	imagerel $LN3+199
	DD	imagerel $unwind$?reshapeFunc@@YAXHH@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?reshapeFunc@@YAXHH@Z DD 022001H
	DD	07009520dH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
_TEXT	SEGMENT
newWidth$ = 64
newHeight$ = 72
?reshapeFunc@@YAXHH@Z PROC				; reshapeFunc
; Line 237
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+64]
; Line 238
	mov	eax, DWORD PTR newWidth$[rsp]
	mov	DWORD PTR ?width@@3HA, eax		; width
; Line 239
	mov	eax, DWORD PTR newHeight$[rsp]
	mov	DWORD PTR ?height@@3HA, eax		; height
; Line 241
	mov	r9d, DWORD PTR ?height@@3HA		; height
	mov	r8d, DWORD PTR ?width@@3HA		; width
	xor	edx, edx
	xor	ecx, ecx
	call	QWORD PTR __imp_glViewport
; Line 242
	call	QWORD PTR __imp_glLoadIdentity
; Line 243
	movd	xmm0, DWORD PTR ?height@@3HA		; height
	cvtdq2ps xmm0, xmm0
	subss	xmm0, DWORD PTR __real@3f800000
	unpcklps xmm0, xmm0
	cvtps2pd xmm0, xmm0
	movd	xmm1, DWORD PTR ?width@@3HA		; width
	cvtdq2ps xmm1, xmm1
	subss	xmm1, DWORD PTR __real@3f800000
	unpcklps xmm1, xmm1
	cvtps2pd xmm1, xmm1
	movsdx	xmm2, QWORD PTR __real@3ff0000000000000
	movsdx	QWORD PTR [rsp+40], xmm2
	movsdx	xmm2, QWORD PTR __real@bff0000000000000
	movsdx	QWORD PTR [rsp+32], xmm2
	movapd	xmm3, xmm0
	xorpd	xmm2, xmm2
	xorpd	xmm0, xmm0
	call	QWORD PTR __imp_glOrtho
; Line 245
	mov	ecx, 1
	call	?ReInit@@YAXH@Z				; ReInit
; Line 247
	call	glutPostRedisplay
; Line 248
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?reshapeFunc@@YAXHH@Z ENDP				; reshapeFunc
_TEXT	ENDS
PUBLIC	__real@40a00000
PUBLIC	__real@41200000
PUBLIC	__real@c1200000
PUBLIC	__$ArrayPad$
PUBLIC	?keyFunc@@YAXEHH@Z				; keyFunc
EXTRN	?ReInitScene@@YAXXZ:PROC			; ReInitScene
EXTRN	__ImageBase:BYTE
_BSS	SEGMENT
currentSphere DD 01H DUP (?)
_BSS	ENDS
pdata	SEGMENT
$pdata$?keyFunc@@YAXEHH@Z DD imagerel $LN36
	DD	imagerel $LN36+3137
	DD	imagerel $unwind$?keyFunc@@YAXEHH@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?keyFunc@@YAXEHH@Z DD 043f19H
	DD	02d0116H
	DD	0600e700fH
	DD	imagerel __GSHandlerCheck
	DD	0150H
xdata	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@c1200000
CONST	SEGMENT
__real@c1200000 DD 0c1200000r			; -10
CONST	ENDS
CONST	SEGMENT
?keyFunc@@YAXEHH@Z$rtcName$0 DB 064H			; keyFunc
	DB	069H
	DB	072H
	DB	00H
?keyFunc@@YAXEHH@Z$rtcName$1 DB 064H			; keyFunc
	DB	069H
	DB	072H
	DB	00H
?keyFunc@@YAXEHH@Z$rtcName$2 DB 064H			; keyFunc
	DB	069H
	DB	072H
	DB	00H
?keyFunc@@YAXEHH@Z$rtcName$3 DB 064H			; keyFunc
	DB	069H
	DB	072H
	DB	00H
?keyFunc@@YAXEHH@Z$rtcVarDesc DD 0e8H			; keyFunc
	DD	0cH
	DQ	FLAT:?keyFunc@@YAXEHH@Z$rtcName$3
	DD	0b8H
	DD	0cH
	DQ	FLAT:?keyFunc@@YAXEHH@Z$rtcName$2
	DD	088H
	DD	0cH
	DQ	FLAT:?keyFunc@@YAXEHH@Z$rtcName$1
	DD	058H
	DD	0cH
	DQ	FLAT:?keyFunc@@YAXEHH@Z$rtcName$0
	ORG $+192
?keyFunc@@YAXEHH@Z$rtcFrameData DD 04H			; keyFunc
	DD	00H
	DQ	FLAT:?keyFunc@@YAXEHH@Z$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
_TEXT	SEGMENT
f$69814 = 48
x$69821 = 56
y$69822 = 60
p$69826 = 64
dir$69836 = 88
l$69837 = 116
k$69838 = 120
k$69839 = 124
dir$69841 = 136
l$69842 = 164
k$69843 = 168
k$69844 = 172
dir$69846 = 184
k$69847 = 212
dir$69849 = 232
k$69850 = 260
tv65 = 272
tv248 = 280
tv255 = 288
tv262 = 296
tv277 = 304
tv284 = 312
tv291 = 320
tv358 = 328
__$ArrayPad$ = 336
key$ = 384
x$ = 392
y$ = 400
?keyFunc@@YAXEHH@Z PROC					; keyFunc
; Line 252
$LN36:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	BYTE PTR [rsp+8], cl
	push	rsi
	push	rdi
	sub	rsp, 360				; 00000168H
	mov	rdi, rsp
	mov	ecx, 90					; 0000005aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	movzx	ecx, BYTE PTR [rsp+384]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 253
	movzx	eax, BYTE PTR key$[rsp]
	mov	DWORD PTR tv65[rsp], eax
	mov	eax, DWORD PTR tv65[rsp]
	sub	eax, 27
	mov	DWORD PTR tv65[rsp], eax
	cmp	DWORD PTR tv65[rsp], 92			; 0000005cH
	ja	$LN1@keyFunc
	movsxd	rax, DWORD PTR tv65[rsp]
	lea	rcx, OFFSET FLAT:__ImageBase
	movzx	eax, BYTE PTR $LN34@keyFunc[rcx+rax]
	mov	eax, DWORD PTR $LN35@keyFunc[rcx+rax*4]
	add	rax, rcx
	jmp	rax
$LN27@keyFunc:
; Line 255
	lea	rdx, OFFSET FLAT:$SG69815
	lea	rcx, OFFSET FLAT:$SG69816
	call	QWORD PTR __imp_fopen
	mov	QWORD PTR f$69814[rsp], rax
; Line 256
	cmp	QWORD PTR f$69814[rsp], 0
	jne	SHORT $LN26@keyFunc
; Line 257
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	lea	rdx, OFFSET FLAT:$SG69818
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 258
	jmp	$LN25@keyFunc
$LN26@keyFunc:
; Line 259
	mov	DWORD PTR [rsp+32], 255			; 000000ffH
	mov	r9d, DWORD PTR ?height@@3HA		; height
	mov	r8d, DWORD PTR ?width@@3HA		; width
	lea	rdx, OFFSET FLAT:$SG69820
	mov	rcx, QWORD PTR f$69814[rsp]
	call	QWORD PTR __imp_fprintf
; Line 262
	mov	eax, DWORD PTR ?height@@3HA		; height
	dec	eax
	mov	DWORD PTR y$69822[rsp], eax
	jmp	SHORT $LN24@keyFunc
$LN23@keyFunc:
	mov	eax, DWORD PTR y$69822[rsp]
	dec	eax
	mov	DWORD PTR y$69822[rsp], eax
$LN24@keyFunc:
	cmp	DWORD PTR y$69822[rsp], 0
	jl	$LN22@keyFunc
; Line 263
	mov	eax, DWORD PTR y$69822[rsp]
	imul	eax, DWORD PTR ?width@@3HA		; width
	cdqe
	mov	rcx, QWORD PTR ?pixels@@3PEAIEA		; pixels
	lea	rax, QWORD PTR [rcx+rax*4]
	mov	QWORD PTR p$69826[rsp], rax
; Line 264
	mov	DWORD PTR x$69821[rsp], 0
	jmp	SHORT $LN21@keyFunc
$LN20@keyFunc:
	mov	eax, DWORD PTR x$69821[rsp]
	inc	eax
	mov	DWORD PTR x$69821[rsp], eax
	mov	rax, QWORD PTR p$69826[rsp]
	add	rax, 4
	mov	QWORD PTR p$69826[rsp], rax
$LN21@keyFunc:
	mov	eax, DWORD PTR ?width@@3HA		; width
	cmp	DWORD PTR x$69821[rsp], eax
	jge	SHORT $LN19@keyFunc
; Line 265
	mov	rax, QWORD PTR p$69826[rsp]
	movzx	eax, BYTE PTR [rax+2]
	mov	rcx, QWORD PTR p$69826[rsp]
	movzx	ecx, BYTE PTR [rcx+1]
	mov	rdx, QWORD PTR p$69826[rsp]
	movzx	edx, BYTE PTR [rdx]
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, ecx
	mov	r8d, edx
	lea	rdx, OFFSET FLAT:$SG69831
	mov	rcx, QWORD PTR f$69814[rsp]
	call	QWORD PTR __imp_fprintf
	jmp	SHORT $LN20@keyFunc
$LN19@keyFunc:
; Line 266
	jmp	$LN23@keyFunc
$LN22@keyFunc:
; Line 268
	mov	rcx, QWORD PTR f$69814[rsp]
	call	QWORD PTR __imp_fclose
$LN25@keyFunc:
; Line 270
	jmp	$LN28@keyFunc
$LN18@keyFunc:
; Line 273
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	lea	rdx, OFFSET FLAT:$SG69833
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 274
	xor	ecx, ecx
	call	QWORD PTR __imp_exit
; Line 275
	jmp	$LN28@keyFunc
$LN17@keyFunc:
; Line 277
	mov	ecx, 1
	call	?ReInit@@YAXH@Z				; ReInit
; Line 278
	jmp	$LN28@keyFunc
$LN16@keyFunc:
; Line 280
	lea	rax, QWORD PTR dir$69836[rsp]
	lea	rcx, OFFSET FLAT:?camera@@3UCamera@@A+36
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
; Line 281
	movss	xmm0, DWORD PTR dir$69836[rsp]
	mulss	xmm0, DWORD PTR dir$69836[rsp]
	movss	xmm1, DWORD PTR dir$69836[rsp+4]
	mulss	xmm1, DWORD PTR dir$69836[rsp+4]
	addss	xmm0, xmm1
	movss	xmm1, DWORD PTR dir$69836[rsp+8]
	mulss	xmm1, DWORD PTR dir$69836[rsp+8]
	addss	xmm0, xmm1
	call	?sqrt@@YAMM@Z				; sqrt
	movss	xmm1, DWORD PTR __real@3f800000
	divss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR l$69837[rsp], xmm0
	movss	xmm0, DWORD PTR l$69837[rsp]
	movss	DWORD PTR k$69838[rsp], xmm0
	movss	xmm0, DWORD PTR k$69838[rsp]
	mulss	xmm0, DWORD PTR dir$69836[rsp]
	movss	DWORD PTR dir$69836[rsp], xmm0
	movss	xmm0, DWORD PTR k$69838[rsp]
	mulss	xmm0, DWORD PTR dir$69836[rsp+4]
	movss	DWORD PTR dir$69836[rsp+4], xmm0
	movss	xmm0, DWORD PTR k$69838[rsp]
	mulss	xmm0, DWORD PTR dir$69836[rsp+8]
	movss	DWORD PTR dir$69836[rsp+8], xmm0
; Line 282
	movss	xmm0, DWORD PTR __real@c1200000
	movss	DWORD PTR k$69839[rsp], xmm0
	movss	xmm0, DWORD PTR k$69839[rsp]
	mulss	xmm0, DWORD PTR dir$69836[rsp]
	movss	DWORD PTR dir$69836[rsp], xmm0
	movss	xmm0, DWORD PTR k$69839[rsp]
	mulss	xmm0, DWORD PTR dir$69836[rsp+4]
	movss	DWORD PTR dir$69836[rsp+4], xmm0
	movss	xmm0, DWORD PTR k$69839[rsp]
	mulss	xmm0, DWORD PTR dir$69836[rsp+8]
	movss	DWORD PTR dir$69836[rsp+8], xmm0
; Line 283
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A
	addss	xmm0, DWORD PTR dir$69836[rsp]
	movss	DWORD PTR ?camera@@3UCamera@@A, xmm0
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+4
	addss	xmm0, DWORD PTR dir$69836[rsp+4]
	movss	DWORD PTR ?camera@@3UCamera@@A+4, xmm0
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+8
	addss	xmm0, DWORD PTR dir$69836[rsp+8]
	movss	DWORD PTR ?camera@@3UCamera@@A+8, xmm0
; Line 284
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+12
	addss	xmm0, DWORD PTR dir$69836[rsp]
	movss	DWORD PTR ?camera@@3UCamera@@A+12, xmm0
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+16
	addss	xmm0, DWORD PTR dir$69836[rsp+4]
	movss	DWORD PTR ?camera@@3UCamera@@A+16, xmm0
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+20
	addss	xmm0, DWORD PTR dir$69836[rsp+8]
	movss	DWORD PTR ?camera@@3UCamera@@A+20, xmm0
; Line 285
	xor	ecx, ecx
	call	?ReInit@@YAXH@Z				; ReInit
; Line 286
	jmp	$LN28@keyFunc
$LN15@keyFunc:
; Line 289
	lea	rax, QWORD PTR dir$69841[rsp]
	lea	rcx, OFFSET FLAT:?camera@@3UCamera@@A+36
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
; Line 290
	movss	xmm0, DWORD PTR dir$69841[rsp]
	mulss	xmm0, DWORD PTR dir$69841[rsp]
	movss	xmm1, DWORD PTR dir$69841[rsp+4]
	mulss	xmm1, DWORD PTR dir$69841[rsp+4]
	addss	xmm0, xmm1
	movss	xmm1, DWORD PTR dir$69841[rsp+8]
	mulss	xmm1, DWORD PTR dir$69841[rsp+8]
	addss	xmm0, xmm1
	call	?sqrt@@YAMM@Z				; sqrt
	movss	xmm1, DWORD PTR __real@3f800000
	divss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR l$69842[rsp], xmm0
	movss	xmm0, DWORD PTR l$69842[rsp]
	movss	DWORD PTR k$69843[rsp], xmm0
	movss	xmm0, DWORD PTR k$69843[rsp]
	mulss	xmm0, DWORD PTR dir$69841[rsp]
	movss	DWORD PTR dir$69841[rsp], xmm0
	movss	xmm0, DWORD PTR k$69843[rsp]
	mulss	xmm0, DWORD PTR dir$69841[rsp+4]
	movss	DWORD PTR dir$69841[rsp+4], xmm0
	movss	xmm0, DWORD PTR k$69843[rsp]
	mulss	xmm0, DWORD PTR dir$69841[rsp+8]
	movss	DWORD PTR dir$69841[rsp+8], xmm0
; Line 291
	movss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR k$69844[rsp], xmm0
	movss	xmm0, DWORD PTR k$69844[rsp]
	mulss	xmm0, DWORD PTR dir$69841[rsp]
	movss	DWORD PTR dir$69841[rsp], xmm0
	movss	xmm0, DWORD PTR k$69844[rsp]
	mulss	xmm0, DWORD PTR dir$69841[rsp+4]
	movss	DWORD PTR dir$69841[rsp+4], xmm0
	movss	xmm0, DWORD PTR k$69844[rsp]
	mulss	xmm0, DWORD PTR dir$69841[rsp+8]
	movss	DWORD PTR dir$69841[rsp+8], xmm0
; Line 292
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A
	addss	xmm0, DWORD PTR dir$69841[rsp]
	movss	DWORD PTR ?camera@@3UCamera@@A, xmm0
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+4
	addss	xmm0, DWORD PTR dir$69841[rsp+4]
	movss	DWORD PTR ?camera@@3UCamera@@A+4, xmm0
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+8
	addss	xmm0, DWORD PTR dir$69841[rsp+8]
	movss	DWORD PTR ?camera@@3UCamera@@A+8, xmm0
; Line 293
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+12
	addss	xmm0, DWORD PTR dir$69841[rsp]
	movss	DWORD PTR ?camera@@3UCamera@@A+12, xmm0
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+16
	addss	xmm0, DWORD PTR dir$69841[rsp+4]
	movss	DWORD PTR ?camera@@3UCamera@@A+16, xmm0
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+20
	addss	xmm0, DWORD PTR dir$69841[rsp+8]
	movss	DWORD PTR ?camera@@3UCamera@@A+20, xmm0
; Line 294
	xor	ecx, ecx
	call	?ReInit@@YAXH@Z				; ReInit
; Line 295
	jmp	$LN28@keyFunc
$LN14@keyFunc:
; Line 298
	lea	rax, QWORD PTR dir$69846[rsp]
	lea	rcx, OFFSET FLAT:?camera@@3UCamera@@A+24
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
; Line 299
	movss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR k$69847[rsp], xmm0
	movss	xmm0, DWORD PTR k$69847[rsp]
	mulss	xmm0, DWORD PTR dir$69846[rsp]
	movss	DWORD PTR dir$69846[rsp], xmm0
	movss	xmm0, DWORD PTR k$69847[rsp]
	mulss	xmm0, DWORD PTR dir$69846[rsp+4]
	movss	DWORD PTR dir$69846[rsp+4], xmm0
	movss	xmm0, DWORD PTR k$69847[rsp]
	mulss	xmm0, DWORD PTR dir$69846[rsp+8]
	movss	DWORD PTR dir$69846[rsp+8], xmm0
; Line 300
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A
	addss	xmm0, DWORD PTR dir$69846[rsp]
	movss	DWORD PTR ?camera@@3UCamera@@A, xmm0
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+4
	addss	xmm0, DWORD PTR dir$69846[rsp+4]
	movss	DWORD PTR ?camera@@3UCamera@@A+4, xmm0
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+8
	addss	xmm0, DWORD PTR dir$69846[rsp+8]
	movss	DWORD PTR ?camera@@3UCamera@@A+8, xmm0
; Line 301
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+12
	addss	xmm0, DWORD PTR dir$69846[rsp]
	movss	DWORD PTR ?camera@@3UCamera@@A+12, xmm0
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+16
	addss	xmm0, DWORD PTR dir$69846[rsp+4]
	movss	DWORD PTR ?camera@@3UCamera@@A+16, xmm0
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+20
	addss	xmm0, DWORD PTR dir$69846[rsp+8]
	movss	DWORD PTR ?camera@@3UCamera@@A+20, xmm0
; Line 302
	xor	ecx, ecx
	call	?ReInit@@YAXH@Z				; ReInit
; Line 303
	jmp	$LN28@keyFunc
$LN13@keyFunc:
; Line 306
	lea	rax, QWORD PTR dir$69849[rsp]
	lea	rcx, OFFSET FLAT:?camera@@3UCamera@@A+24
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
; Line 307
	movss	xmm0, DWORD PTR __real@c1200000
	movss	DWORD PTR k$69850[rsp], xmm0
	movss	xmm0, DWORD PTR k$69850[rsp]
	mulss	xmm0, DWORD PTR dir$69849[rsp]
	movss	DWORD PTR dir$69849[rsp], xmm0
	movss	xmm0, DWORD PTR k$69850[rsp]
	mulss	xmm0, DWORD PTR dir$69849[rsp+4]
	movss	DWORD PTR dir$69849[rsp+4], xmm0
	movss	xmm0, DWORD PTR k$69850[rsp]
	mulss	xmm0, DWORD PTR dir$69849[rsp+8]
	movss	DWORD PTR dir$69849[rsp+8], xmm0
; Line 308
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A
	addss	xmm0, DWORD PTR dir$69849[rsp]
	movss	DWORD PTR ?camera@@3UCamera@@A, xmm0
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+4
	addss	xmm0, DWORD PTR dir$69849[rsp+4]
	movss	DWORD PTR ?camera@@3UCamera@@A+4, xmm0
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+8
	addss	xmm0, DWORD PTR dir$69849[rsp+8]
	movss	DWORD PTR ?camera@@3UCamera@@A+8, xmm0
; Line 309
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+12
	addss	xmm0, DWORD PTR dir$69849[rsp]
	movss	DWORD PTR ?camera@@3UCamera@@A+12, xmm0
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+16
	addss	xmm0, DWORD PTR dir$69849[rsp+4]
	movss	DWORD PTR ?camera@@3UCamera@@A+16, xmm0
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+20
	addss	xmm0, DWORD PTR dir$69849[rsp+8]
	movss	DWORD PTR ?camera@@3UCamera@@A+20, xmm0
; Line 310
	xor	ecx, ecx
	call	?ReInit@@YAXH@Z				; ReInit
; Line 311
	jmp	$LN28@keyFunc
$LN12@keyFunc:
; Line 314
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+4
	addss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR ?camera@@3UCamera@@A+4, xmm0
; Line 315
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+16
	addss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR ?camera@@3UCamera@@A+16, xmm0
; Line 316
	xor	ecx, ecx
	call	?ReInit@@YAXH@Z				; ReInit
; Line 317
	jmp	$LN28@keyFunc
$LN11@keyFunc:
; Line 319
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+4
	subss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR ?camera@@3UCamera@@A+4, xmm0
; Line 320
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+16
	subss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR ?camera@@3UCamera@@A+16, xmm0
; Line 321
	xor	ecx, ecx
	call	?ReInit@@YAXH@Z				; ReInit
; Line 322
	jmp	$LN28@keyFunc
$LN10@keyFunc:
; Line 324
	mov	eax, DWORD PTR currentSphere
	inc	eax
	xor	edx, edx
	div	DWORD PTR ?sphereCount@@3IA		; sphereCount
	mov	eax, edx
	mov	DWORD PTR currentSphere, eax
; Line 326
	movsxd	rax, DWORD PTR currentSphere
	imul	rax, 44					; 0000002cH
	mov	rcx, QWORD PTR ?spheres@@3PEAUSphere@@EA ; spheres
	movd	xmm0, DWORD PTR [rcx+rax+12]
	cvtps2pd xmm0, xmm0
	movsdx	QWORD PTR tv248[rsp], xmm0
	movsxd	rax, DWORD PTR currentSphere
	imul	rax, 44					; 0000002cH
	mov	rcx, QWORD PTR ?spheres@@3PEAUSphere@@EA ; spheres
	movd	xmm1, DWORD PTR [rcx+rax+8]
	cvtps2pd xmm1, xmm1
	movsdx	QWORD PTR tv255[rsp], xmm1
	movsxd	rax, DWORD PTR currentSphere
	imul	rax, 44					; 0000002cH
	mov	rcx, QWORD PTR ?spheres@@3PEAUSphere@@EA ; spheres
	movd	xmm2, DWORD PTR [rcx+rax+4]
	cvtps2pd xmm2, xmm2
	movsdx	QWORD PTR tv262[rsp], xmm2
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	movsdx	xmm0, QWORD PTR tv248[rsp]
	movsdx	QWORD PTR [rsp+40], xmm0
	movsdx	xmm0, QWORD PTR tv255[rsp]
	movsdx	QWORD PTR [rsp+32], xmm0
	movsdx	xmm0, QWORD PTR tv262[rsp]
	movapd	xmm3, xmm0
	movd	r9, xmm3
	mov	r8d, DWORD PTR currentSphere
	lea	rdx, OFFSET FLAT:$SG69854
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 327
	call	?ReInitScene@@YAXXZ			; ReInitScene
; Line 328
	jmp	$LN28@keyFunc
$LN9@keyFunc:
; Line 330
	mov	eax, DWORD PTR currentSphere
	mov	ecx, DWORD PTR ?sphereCount@@3IA	; sphereCount
	lea	eax, DWORD PTR [rax+rcx-1]
	xor	edx, edx
	div	DWORD PTR ?sphereCount@@3IA		; sphereCount
	mov	eax, edx
	mov	DWORD PTR currentSphere, eax
; Line 332
	movsxd	rax, DWORD PTR currentSphere
	imul	rax, 44					; 0000002cH
	mov	rcx, QWORD PTR ?spheres@@3PEAUSphere@@EA ; spheres
	movd	xmm0, DWORD PTR [rcx+rax+12]
	cvtps2pd xmm0, xmm0
	movsdx	QWORD PTR tv277[rsp], xmm0
	movsxd	rax, DWORD PTR currentSphere
	imul	rax, 44					; 0000002cH
	mov	rcx, QWORD PTR ?spheres@@3PEAUSphere@@EA ; spheres
	movd	xmm1, DWORD PTR [rcx+rax+8]
	cvtps2pd xmm1, xmm1
	movsdx	QWORD PTR tv284[rsp], xmm1
	movsxd	rax, DWORD PTR currentSphere
	imul	rax, 44					; 0000002cH
	mov	rcx, QWORD PTR ?spheres@@3PEAUSphere@@EA ; spheres
	movd	xmm2, DWORD PTR [rcx+rax+4]
	cvtps2pd xmm2, xmm2
	movsdx	QWORD PTR tv291[rsp], xmm2
	call	QWORD PTR __imp___iob_func
	add	rax, 96					; 00000060H
	movsdx	xmm0, QWORD PTR tv277[rsp]
	movsdx	QWORD PTR [rsp+40], xmm0
	movsdx	xmm0, QWORD PTR tv284[rsp]
	movsdx	QWORD PTR [rsp+32], xmm0
	movsdx	xmm0, QWORD PTR tv291[rsp]
	movapd	xmm3, xmm0
	movd	r9, xmm3
	mov	r8d, DWORD PTR currentSphere
	lea	rdx, OFFSET FLAT:$SG69856
	mov	rcx, rax
	call	QWORD PTR __imp_fprintf
; Line 333
	call	?ReInitScene@@YAXXZ			; ReInitScene
; Line 334
	jmp	$LN28@keyFunc
$LN8@keyFunc:
; Line 336
	movsxd	rax, DWORD PTR currentSphere
	imul	rax, 44					; 0000002cH
	mov	rcx, QWORD PTR ?spheres@@3PEAUSphere@@EA ; spheres
	movss	xmm0, DWORD PTR [rcx+rax+4]
	subss	xmm0, DWORD PTR __real@40a00000
	movsxd	rax, DWORD PTR currentSphere
	imul	rax, 44					; 0000002cH
	mov	rcx, QWORD PTR ?spheres@@3PEAUSphere@@EA ; spheres
	movss	DWORD PTR [rcx+rax+4], xmm0
; Line 337
	call	?ReInitScene@@YAXXZ			; ReInitScene
; Line 338
	jmp	$LN28@keyFunc
$LN7@keyFunc:
; Line 340
	movsxd	rax, DWORD PTR currentSphere
	imul	rax, 44					; 0000002cH
	mov	rcx, QWORD PTR ?spheres@@3PEAUSphere@@EA ; spheres
	movss	xmm0, DWORD PTR [rcx+rax+4]
	addss	xmm0, DWORD PTR __real@40a00000
	movsxd	rax, DWORD PTR currentSphere
	imul	rax, 44					; 0000002cH
	mov	rcx, QWORD PTR ?spheres@@3PEAUSphere@@EA ; spheres
	movss	DWORD PTR [rcx+rax+4], xmm0
; Line 341
	call	?ReInitScene@@YAXXZ			; ReInitScene
; Line 342
	jmp	$LN28@keyFunc
$LN6@keyFunc:
; Line 344
	movsxd	rax, DWORD PTR currentSphere
	imul	rax, 44					; 0000002cH
	mov	rcx, QWORD PTR ?spheres@@3PEAUSphere@@EA ; spheres
	movss	xmm0, DWORD PTR [rcx+rax+12]
	subss	xmm0, DWORD PTR __real@40a00000
	movsxd	rax, DWORD PTR currentSphere
	imul	rax, 44					; 0000002cH
	mov	rcx, QWORD PTR ?spheres@@3PEAUSphere@@EA ; spheres
	movss	DWORD PTR [rcx+rax+12], xmm0
; Line 345
	call	?ReInitScene@@YAXXZ			; ReInitScene
; Line 346
	jmp	$LN28@keyFunc
$LN5@keyFunc:
; Line 348
	movsxd	rax, DWORD PTR currentSphere
	imul	rax, 44					; 0000002cH
	mov	rcx, QWORD PTR ?spheres@@3PEAUSphere@@EA ; spheres
	movss	xmm0, DWORD PTR [rcx+rax+12]
	addss	xmm0, DWORD PTR __real@40a00000
	movsxd	rax, DWORD PTR currentSphere
	imul	rax, 44					; 0000002cH
	mov	rcx, QWORD PTR ?spheres@@3PEAUSphere@@EA ; spheres
	movss	DWORD PTR [rcx+rax+12], xmm0
; Line 349
	call	?ReInitScene@@YAXXZ			; ReInitScene
; Line 350
	jmp	$LN28@keyFunc
$LN4@keyFunc:
; Line 352
	movsxd	rax, DWORD PTR currentSphere
	imul	rax, 44					; 0000002cH
	mov	rcx, QWORD PTR ?spheres@@3PEAUSphere@@EA ; spheres
	movss	xmm0, DWORD PTR [rcx+rax+8]
	addss	xmm0, DWORD PTR __real@40a00000
	movsxd	rax, DWORD PTR currentSphere
	imul	rax, 44					; 0000002cH
	mov	rcx, QWORD PTR ?spheres@@3PEAUSphere@@EA ; spheres
	movss	DWORD PTR [rcx+rax+8], xmm0
; Line 353
	call	?ReInitScene@@YAXXZ			; ReInitScene
; Line 354
	jmp	SHORT $LN28@keyFunc
$LN3@keyFunc:
; Line 356
	movsxd	rax, DWORD PTR currentSphere
	imul	rax, 44					; 0000002cH
	mov	rcx, QWORD PTR ?spheres@@3PEAUSphere@@EA ; spheres
	movss	xmm0, DWORD PTR [rcx+rax+8]
	subss	xmm0, DWORD PTR __real@40a00000
	movsxd	rax, DWORD PTR currentSphere
	imul	rax, 44					; 0000002cH
	mov	rcx, QWORD PTR ?spheres@@3PEAUSphere@@EA ; spheres
	movss	DWORD PTR [rcx+rax+8], xmm0
; Line 357
	call	?ReInitScene@@YAXXZ			; ReInitScene
; Line 358
	jmp	SHORT $LN28@keyFunc
$LN2@keyFunc:
; Line 360
	cmp	DWORD PTR printHelp, 0
	jne	SHORT $LN32@keyFunc
	mov	DWORD PTR tv358[rsp], 1
	jmp	SHORT $LN33@keyFunc
$LN32@keyFunc:
	mov	DWORD PTR tv358[rsp], 0
$LN33@keyFunc:
	mov	eax, DWORD PTR tv358[rsp]
	mov	DWORD PTR printHelp, eax
$LN1@keyFunc:
$LN28@keyFunc:
$LN31@keyFunc:
; Line 365
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?keyFunc@@YAXEHH@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 360				; 00000168H
	pop	rdi
	pop	rsi
	ret	0
	npad	1
$LN35@keyFunc:
	DD	$LN18@keyFunc
	DD	$LN17@keyFunc
	DD	$LN10@keyFunc
	DD	$LN9@keyFunc
	DD	$LN5@keyFunc
	DD	$LN3@keyFunc
	DD	$LN8@keyFunc
	DD	$LN7@keyFunc
	DD	$LN6@keyFunc
	DD	$LN4@keyFunc
	DD	$LN16@keyFunc
	DD	$LN15@keyFunc
	DD	$LN11@keyFunc
	DD	$LN2@keyFunc
	DD	$LN27@keyFunc
	DD	$LN12@keyFunc
	DD	$LN13@keyFunc
	DD	$LN14@keyFunc
	DD	$LN1@keyFunc
$LN34@keyFunc:
	DB	0
	DB	18
	DB	18
	DB	18
	DB	18
	DB	1
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	2
	DB	18
	DB	3
	DB	18
	DB	18
	DB	18
	DB	18
	DB	4
	DB	5
	DB	6
	DB	18
	DB	7
	DB	18
	DB	8
	DB	9
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	10
	DB	18
	DB	18
	DB	11
	DB	18
	DB	12
	DB	18
	DB	13
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	18
	DB	14
	DB	18
	DB	15
	DB	16
	DB	18
	DB	18
	DB	18
	DB	17
?keyFunc@@YAXEHH@Z ENDP					; keyFunc
_TEXT	ENDS
PUBLIC	__real@3fa1df46a2529d39
PUBLIC	__mask@@NegFloat@
PUBLIC	__real@bfa1df46a2529d39
PUBLIC	__$ArrayPad$
PUBLIC	?specialFunc@@YAXHHH@Z				; specialFunc
EXTRN	sin:PROC
EXTRN	cos:PROC
pdata	SEGMENT
$pdata$?specialFunc@@YAXHHH@Z DD imagerel $LN13
	DD	imagerel $LN13+2184
	DD	imagerel $unwind$?specialFunc@@YAXHHH@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?specialFunc@@YAXHHH@Z DD 043e19H
	DD	0370116H
	DD	0600e700fH
	DD	imagerel __GSHandlerCheck
	DD	01a8H
xdata	ENDS
;	COMDAT __real@3fa1df46a2529d39
CONST	SEGMENT
__real@3fa1df46a2529d39 DQ 03fa1df46a2529d39r	; 0.0349066
CONST	ENDS
;	COMDAT __mask@@NegFloat@
CONST	SEGMENT
__mask@@NegFloat@ DB 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@bfa1df46a2529d39
CONST	SEGMENT
__real@bfa1df46a2529d39 DQ 0bfa1df46a2529d39r	; -0.0349066
CONST	ENDS
CONST	SEGMENT
?specialFunc@@YAXHHH@Z$rtcName$0 DB 074H		; specialFunc
	DB	00H
	ORG $+2
?specialFunc@@YAXHHH@Z$rtcName$1 DB 074H		; specialFunc
	DB	00H
	ORG $+2
?specialFunc@@YAXHHH@Z$rtcName$2 DB 074H		; specialFunc
	DB	00H
	ORG $+2
?specialFunc@@YAXHHH@Z$rtcName$3 DB 074H		; specialFunc
	DB	00H
	ORG $+2
?specialFunc@@YAXHHH@Z$rtcVarDesc DD 0b8H		; specialFunc
	DD	0cH
	DQ	FLAT:?specialFunc@@YAXHHH@Z$rtcName$3
	DD	088H
	DD	0cH
	DQ	FLAT:?specialFunc@@YAXHHH@Z$rtcName$2
	DD	058H
	DD	0cH
	DQ	FLAT:?specialFunc@@YAXHHH@Z$rtcName$1
	DD	028H
	DD	0cH
	DQ	FLAT:?specialFunc@@YAXHHH@Z$rtcName$0
	ORG $+192
?specialFunc@@YAXHHH@Z$rtcFrameData DD 04H		; specialFunc
	DD	00H
	DQ	FLAT:?specialFunc@@YAXHHH@Z$rtcVarDesc
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
_TEXT	SEGMENT
t$69875 = 40
t$69877 = 88
t$69879 = 136
t$69881 = 184
tv64 = 224
tv68 = 232
tv71 = 240
tv72 = 248
tv79 = 256
tv82 = 264
tv83 = 272
tv128 = 280
tv131 = 288
tv132 = 296
tv139 = 304
tv142 = 312
tv143 = 320
tv156 = 328
tv159 = 336
tv160 = 344
tv166 = 352
tv169 = 360
tv170 = 368
tv183 = 376
tv186 = 384
tv187 = 392
tv193 = 400
tv196 = 408
tv197 = 416
__$ArrayPad$ = 424
key$ = 464
x$ = 472
y$ = 480
?specialFunc@@YAXHHH@Z PROC				; specialFunc
; Line 367
$LN13:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rsi
	push	rdi
	sub	rsp, 440				; 000001b8H
	mov	rdi, rsp
	mov	ecx, 110				; 0000006eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+464]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 368
	mov	eax, DWORD PTR key$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	mov	eax, DWORD PTR tv64[rsp]
	sub	eax, 100				; 00000064H
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 5
	ja	$LN1@specialFun
	movsxd	rax, DWORD PTR tv64[rsp]
	lea	rcx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN12@specialFun[rcx+rax*4]
	add	rax, rcx
	jmp	rax
$LN7@specialFun:
; Line 370
	lea	rax, QWORD PTR t$69875[rsp]
	lea	rcx, OFFSET FLAT:?camera@@3UCamera@@A+12
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
; Line 371
	movss	xmm0, DWORD PTR t$69875[rsp]
	subss	xmm0, DWORD PTR ?camera@@3UCamera@@A
	movss	DWORD PTR t$69875[rsp], xmm0
	movss	xmm0, DWORD PTR t$69875[rsp+4]
	subss	xmm0, DWORD PTR ?camera@@3UCamera@@A+4
	movss	DWORD PTR t$69875[rsp+4], xmm0
	movss	xmm0, DWORD PTR t$69875[rsp+8]
	subss	xmm0, DWORD PTR ?camera@@3UCamera@@A+8
	movss	DWORD PTR t$69875[rsp+8], xmm0
; Line 372
	movd	xmm0, DWORD PTR t$69875[rsp+4]
	cvtps2pd xmm0, xmm0
	movsdx	QWORD PTR tv68[rsp], xmm0
	movsdx	xmm0, QWORD PTR __real@bfa1df46a2529d39
	call	cos
	movsdx	xmm1, QWORD PTR tv68[rsp]
	mulsd	xmm1, xmm0
	movapd	xmm0, xmm1
	movsdx	QWORD PTR tv71[rsp], xmm0
	movd	xmm1, DWORD PTR t$69875[rsp+8]
	cvtps2pd xmm1, xmm1
	movsdx	QWORD PTR tv72[rsp], xmm1
	movsdx	xmm0, QWORD PTR __real@bfa1df46a2529d39
	call	sin
	movsdx	xmm1, QWORD PTR tv72[rsp]
	mulsd	xmm1, xmm0
	movapd	xmm0, xmm1
	movsdx	xmm1, QWORD PTR tv71[rsp]
	addsd	xmm1, xmm0
	movapd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR t$69875[rsp+4], xmm0
; Line 373
	movss	xmm0, DWORD PTR t$69875[rsp+4]
	xorps	xmm0, DWORD PTR __mask@@NegFloat@
	unpcklps xmm0, xmm0
	cvtps2pd xmm0, xmm0
	movsdx	QWORD PTR tv79[rsp], xmm0
	movsdx	xmm0, QWORD PTR __real@bfa1df46a2529d39
	call	sin
	movsdx	xmm1, QWORD PTR tv79[rsp]
	mulsd	xmm1, xmm0
	movapd	xmm0, xmm1
	movsdx	QWORD PTR tv82[rsp], xmm0
	movd	xmm1, DWORD PTR t$69875[rsp+8]
	cvtps2pd xmm1, xmm1
	movsdx	QWORD PTR tv83[rsp], xmm1
	movsdx	xmm0, QWORD PTR __real@bfa1df46a2529d39
	call	cos
	movsdx	xmm1, QWORD PTR tv83[rsp]
	mulsd	xmm1, xmm0
	movapd	xmm0, xmm1
	movsdx	xmm1, QWORD PTR tv82[rsp]
	addsd	xmm1, xmm0
	movapd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR t$69875[rsp+8], xmm0
; Line 374
	movss	xmm0, DWORD PTR t$69875[rsp]
	addss	xmm0, DWORD PTR ?camera@@3UCamera@@A
	movss	DWORD PTR t$69875[rsp], xmm0
	movss	xmm0, DWORD PTR t$69875[rsp+4]
	addss	xmm0, DWORD PTR ?camera@@3UCamera@@A+4
	movss	DWORD PTR t$69875[rsp+4], xmm0
	movss	xmm0, DWORD PTR t$69875[rsp+8]
	addss	xmm0, DWORD PTR ?camera@@3UCamera@@A+8
	movss	DWORD PTR t$69875[rsp+8], xmm0
; Line 375
	lea	rax, OFFSET FLAT:?camera@@3UCamera@@A+12
	lea	rcx, QWORD PTR t$69875[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
; Line 376
	xor	ecx, ecx
	call	?ReInit@@YAXH@Z				; ReInit
; Line 377
	jmp	$LN8@specialFun
$LN6@specialFun:
; Line 380
	lea	rax, QWORD PTR t$69877[rsp]
	lea	rcx, OFFSET FLAT:?camera@@3UCamera@@A+12
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
; Line 381
	movss	xmm0, DWORD PTR t$69877[rsp]
	subss	xmm0, DWORD PTR ?camera@@3UCamera@@A
	movss	DWORD PTR t$69877[rsp], xmm0
	movss	xmm0, DWORD PTR t$69877[rsp+4]
	subss	xmm0, DWORD PTR ?camera@@3UCamera@@A+4
	movss	DWORD PTR t$69877[rsp+4], xmm0
	movss	xmm0, DWORD PTR t$69877[rsp+8]
	subss	xmm0, DWORD PTR ?camera@@3UCamera@@A+8
	movss	DWORD PTR t$69877[rsp+8], xmm0
; Line 382
	movd	xmm0, DWORD PTR t$69877[rsp+4]
	cvtps2pd xmm0, xmm0
	movsdx	QWORD PTR tv128[rsp], xmm0
	movsdx	xmm0, QWORD PTR __real@3fa1df46a2529d39
	call	cos
	movsdx	xmm1, QWORD PTR tv128[rsp]
	mulsd	xmm1, xmm0
	movapd	xmm0, xmm1
	movsdx	QWORD PTR tv131[rsp], xmm0
	movd	xmm1, DWORD PTR t$69877[rsp+8]
	cvtps2pd xmm1, xmm1
	movsdx	QWORD PTR tv132[rsp], xmm1
	movsdx	xmm0, QWORD PTR __real@3fa1df46a2529d39
	call	sin
	movsdx	xmm1, QWORD PTR tv132[rsp]
	mulsd	xmm1, xmm0
	movapd	xmm0, xmm1
	movsdx	xmm1, QWORD PTR tv131[rsp]
	addsd	xmm1, xmm0
	movapd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR t$69877[rsp+4], xmm0
; Line 383
	movss	xmm0, DWORD PTR t$69877[rsp+4]
	xorps	xmm0, DWORD PTR __mask@@NegFloat@
	unpcklps xmm0, xmm0
	cvtps2pd xmm0, xmm0
	movsdx	QWORD PTR tv139[rsp], xmm0
	movsdx	xmm0, QWORD PTR __real@3fa1df46a2529d39
	call	sin
	movsdx	xmm1, QWORD PTR tv139[rsp]
	mulsd	xmm1, xmm0
	movapd	xmm0, xmm1
	movsdx	QWORD PTR tv142[rsp], xmm0
	movd	xmm1, DWORD PTR t$69877[rsp+8]
	cvtps2pd xmm1, xmm1
	movsdx	QWORD PTR tv143[rsp], xmm1
	movsdx	xmm0, QWORD PTR __real@3fa1df46a2529d39
	call	cos
	movsdx	xmm1, QWORD PTR tv143[rsp]
	mulsd	xmm1, xmm0
	movapd	xmm0, xmm1
	movsdx	xmm1, QWORD PTR tv142[rsp]
	addsd	xmm1, xmm0
	movapd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR t$69877[rsp+8], xmm0
; Line 384
	movss	xmm0, DWORD PTR t$69877[rsp]
	addss	xmm0, DWORD PTR ?camera@@3UCamera@@A
	movss	DWORD PTR t$69877[rsp], xmm0
	movss	xmm0, DWORD PTR t$69877[rsp+4]
	addss	xmm0, DWORD PTR ?camera@@3UCamera@@A+4
	movss	DWORD PTR t$69877[rsp+4], xmm0
	movss	xmm0, DWORD PTR t$69877[rsp+8]
	addss	xmm0, DWORD PTR ?camera@@3UCamera@@A+8
	movss	DWORD PTR t$69877[rsp+8], xmm0
; Line 385
	lea	rax, OFFSET FLAT:?camera@@3UCamera@@A+12
	lea	rcx, QWORD PTR t$69877[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
; Line 386
	xor	ecx, ecx
	call	?ReInit@@YAXH@Z				; ReInit
; Line 387
	jmp	$LN8@specialFun
$LN5@specialFun:
; Line 390
	lea	rax, QWORD PTR t$69879[rsp]
	lea	rcx, OFFSET FLAT:?camera@@3UCamera@@A+12
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
; Line 391
	movss	xmm0, DWORD PTR t$69879[rsp]
	subss	xmm0, DWORD PTR ?camera@@3UCamera@@A
	movss	DWORD PTR t$69879[rsp], xmm0
	movss	xmm0, DWORD PTR t$69879[rsp+4]
	subss	xmm0, DWORD PTR ?camera@@3UCamera@@A+4
	movss	DWORD PTR t$69879[rsp+4], xmm0
	movss	xmm0, DWORD PTR t$69879[rsp+8]
	subss	xmm0, DWORD PTR ?camera@@3UCamera@@A+8
	movss	DWORD PTR t$69879[rsp+8], xmm0
; Line 392
	movd	xmm0, DWORD PTR t$69879[rsp]
	cvtps2pd xmm0, xmm0
	movsdx	QWORD PTR tv156[rsp], xmm0
	movsdx	xmm0, QWORD PTR __real@bfa1df46a2529d39
	call	cos
	movsdx	xmm1, QWORD PTR tv156[rsp]
	mulsd	xmm1, xmm0
	movapd	xmm0, xmm1
	movsdx	QWORD PTR tv159[rsp], xmm0
	movd	xmm1, DWORD PTR t$69879[rsp+8]
	cvtps2pd xmm1, xmm1
	movsdx	QWORD PTR tv160[rsp], xmm1
	movsdx	xmm0, QWORD PTR __real@bfa1df46a2529d39
	call	sin
	movsdx	xmm1, QWORD PTR tv160[rsp]
	mulsd	xmm1, xmm0
	movapd	xmm0, xmm1
	movsdx	xmm1, QWORD PTR tv159[rsp]
	subsd	xmm1, xmm0
	movapd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR t$69879[rsp], xmm0
; Line 393
	movd	xmm0, DWORD PTR t$69879[rsp]
	cvtps2pd xmm0, xmm0
	movsdx	QWORD PTR tv166[rsp], xmm0
	movsdx	xmm0, QWORD PTR __real@bfa1df46a2529d39
	call	sin
	movsdx	xmm1, QWORD PTR tv166[rsp]
	mulsd	xmm1, xmm0
	movapd	xmm0, xmm1
	movsdx	QWORD PTR tv169[rsp], xmm0
	movd	xmm1, DWORD PTR t$69879[rsp+8]
	cvtps2pd xmm1, xmm1
	movsdx	QWORD PTR tv170[rsp], xmm1
	movsdx	xmm0, QWORD PTR __real@bfa1df46a2529d39
	call	cos
	movsdx	xmm1, QWORD PTR tv170[rsp]
	mulsd	xmm1, xmm0
	movapd	xmm0, xmm1
	movsdx	xmm1, QWORD PTR tv169[rsp]
	addsd	xmm1, xmm0
	movapd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR t$69879[rsp+8], xmm0
; Line 394
	movss	xmm0, DWORD PTR t$69879[rsp]
	addss	xmm0, DWORD PTR ?camera@@3UCamera@@A
	movss	DWORD PTR t$69879[rsp], xmm0
	movss	xmm0, DWORD PTR t$69879[rsp+4]
	addss	xmm0, DWORD PTR ?camera@@3UCamera@@A+4
	movss	DWORD PTR t$69879[rsp+4], xmm0
	movss	xmm0, DWORD PTR t$69879[rsp+8]
	addss	xmm0, DWORD PTR ?camera@@3UCamera@@A+8
	movss	DWORD PTR t$69879[rsp+8], xmm0
; Line 395
	lea	rax, OFFSET FLAT:?camera@@3UCamera@@A+12
	lea	rcx, QWORD PTR t$69879[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
; Line 396
	xor	ecx, ecx
	call	?ReInit@@YAXH@Z				; ReInit
; Line 397
	jmp	$LN8@specialFun
$LN4@specialFun:
; Line 400
	lea	rax, QWORD PTR t$69881[rsp]
	lea	rcx, OFFSET FLAT:?camera@@3UCamera@@A+12
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
; Line 401
	movss	xmm0, DWORD PTR t$69881[rsp]
	subss	xmm0, DWORD PTR ?camera@@3UCamera@@A
	movss	DWORD PTR t$69881[rsp], xmm0
	movss	xmm0, DWORD PTR t$69881[rsp+4]
	subss	xmm0, DWORD PTR ?camera@@3UCamera@@A+4
	movss	DWORD PTR t$69881[rsp+4], xmm0
	movss	xmm0, DWORD PTR t$69881[rsp+8]
	subss	xmm0, DWORD PTR ?camera@@3UCamera@@A+8
	movss	DWORD PTR t$69881[rsp+8], xmm0
; Line 402
	movd	xmm0, DWORD PTR t$69881[rsp]
	cvtps2pd xmm0, xmm0
	movsdx	QWORD PTR tv183[rsp], xmm0
	movsdx	xmm0, QWORD PTR __real@3fa1df46a2529d39
	call	cos
	movsdx	xmm1, QWORD PTR tv183[rsp]
	mulsd	xmm1, xmm0
	movapd	xmm0, xmm1
	movsdx	QWORD PTR tv186[rsp], xmm0
	movd	xmm1, DWORD PTR t$69881[rsp+8]
	cvtps2pd xmm1, xmm1
	movsdx	QWORD PTR tv187[rsp], xmm1
	movsdx	xmm0, QWORD PTR __real@3fa1df46a2529d39
	call	sin
	movsdx	xmm1, QWORD PTR tv187[rsp]
	mulsd	xmm1, xmm0
	movapd	xmm0, xmm1
	movsdx	xmm1, QWORD PTR tv186[rsp]
	subsd	xmm1, xmm0
	movapd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR t$69881[rsp], xmm0
; Line 403
	movd	xmm0, DWORD PTR t$69881[rsp]
	cvtps2pd xmm0, xmm0
	movsdx	QWORD PTR tv193[rsp], xmm0
	movsdx	xmm0, QWORD PTR __real@3fa1df46a2529d39
	call	sin
	movsdx	xmm1, QWORD PTR tv193[rsp]
	mulsd	xmm1, xmm0
	movapd	xmm0, xmm1
	movsdx	QWORD PTR tv196[rsp], xmm0
	movd	xmm1, DWORD PTR t$69881[rsp+8]
	cvtps2pd xmm1, xmm1
	movsdx	QWORD PTR tv197[rsp], xmm1
	movsdx	xmm0, QWORD PTR __real@3fa1df46a2529d39
	call	cos
	movsdx	xmm1, QWORD PTR tv197[rsp]
	mulsd	xmm1, xmm0
	movapd	xmm0, xmm1
	movsdx	xmm1, QWORD PTR tv196[rsp]
	addsd	xmm1, xmm0
	movapd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR t$69881[rsp+8], xmm0
; Line 404
	movss	xmm0, DWORD PTR t$69881[rsp]
	addss	xmm0, DWORD PTR ?camera@@3UCamera@@A
	movss	DWORD PTR t$69881[rsp], xmm0
	movss	xmm0, DWORD PTR t$69881[rsp+4]
	addss	xmm0, DWORD PTR ?camera@@3UCamera@@A+4
	movss	DWORD PTR t$69881[rsp+4], xmm0
	movss	xmm0, DWORD PTR t$69881[rsp+8]
	addss	xmm0, DWORD PTR ?camera@@3UCamera@@A+8
	movss	DWORD PTR t$69881[rsp+8], xmm0
; Line 405
	lea	rax, OFFSET FLAT:?camera@@3UCamera@@A+12
	lea	rcx, QWORD PTR t$69881[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
; Line 406
	xor	ecx, ecx
	call	?ReInit@@YAXH@Z				; ReInit
; Line 407
	jmp	SHORT $LN8@specialFun
$LN3@specialFun:
; Line 410
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+16
	addss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR ?camera@@3UCamera@@A+16, xmm0
; Line 411
	xor	ecx, ecx
	call	?ReInit@@YAXH@Z				; ReInit
; Line 412
	jmp	SHORT $LN8@specialFun
$LN2@specialFun:
; Line 414
	movss	xmm0, DWORD PTR ?camera@@3UCamera@@A+16
	subss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR ?camera@@3UCamera@@A+16, xmm0
; Line 415
	xor	ecx, ecx
	call	?ReInit@@YAXH@Z				; ReInit
$LN1@specialFun:
$LN8@specialFun:
; Line 420
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?specialFunc@@YAXHHH@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 440				; 000001b8H
	pop	rdi
	pop	rsi
	ret	0
$LN12@specialFun:
	DD	$LN5@specialFun
	DD	$LN7@specialFun
	DD	$LN4@specialFun
	DD	$LN6@specialFun
	DD	$LN3@specialFun
	DD	$LN2@specialFun
?specialFunc@@YAXHHH@Z ENDP				; specialFunc
_TEXT	ENDS
PUBLIC	?InitGlut@@YAXHQEAPEADPEAD@Z			; InitGlut
EXTRN	glutIdleFunc:PROC
EXTRN	glutDisplayFunc:PROC
EXTRN	glutSpecialFunc:PROC
EXTRN	glutKeyboardFunc:PROC
EXTRN	glutReshapeFunc:PROC
EXTRN	glutCreateWindow:PROC
EXTRN	glutInit:PROC
EXTRN	glutInitDisplayMode:PROC
EXTRN	glutInitWindowPosition:PROC
EXTRN	glutInitWindowSize:PROC
pdata	SEGMENT
$pdata$?InitGlut@@YAXHQEAPEADPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+291
	DD	imagerel $unwind$?InitGlut@@YAXHQEAPEADPEAD@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?InitGlut@@YAXHQEAPEADPEAD@Z DD 022601H
	DD	0700f5213H
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
_TEXT	SEGMENT
argc$ = 64
argv$ = 72
windowTittle$ = 80
?InitGlut@@YAXHQEAPEADPEAD@Z PROC			; InitGlut
; Line 422
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	DWORD PTR [rsp+8], ecx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+64]
; Line 423
	mov	edx, DWORD PTR ?height@@3HA		; height
	mov	ecx, DWORD PTR ?width@@3HA		; width
	call	glutInitWindowSize
; Line 424
	xor	edx, edx
	xor	ecx, ecx
	call	glutInitWindowPosition
; Line 425
	mov	ecx, 2
	call	glutInitDisplayMode
; Line 426
	mov	rdx, QWORD PTR argv$[rsp]
	lea	rcx, QWORD PTR argc$[rsp]
	call	glutInit
; Line 428
	mov	rcx, QWORD PTR windowTittle$[rsp]
	call	glutCreateWindow
; Line 430
	lea	rcx, OFFSET FLAT:?reshapeFunc@@YAXHH@Z	; reshapeFunc
	call	glutReshapeFunc
; Line 431
	lea	rcx, OFFSET FLAT:?keyFunc@@YAXEHH@Z	; keyFunc
	call	glutKeyboardFunc
; Line 432
	lea	rcx, OFFSET FLAT:?specialFunc@@YAXHHH@Z	; specialFunc
	call	glutSpecialFunc
; Line 433
	lea	rcx, OFFSET FLAT:?displayFunc@@YAXXZ	; displayFunc
	call	glutDisplayFunc
; Line 434
	lea	rcx, OFFSET FLAT:?idleFunc@@YAXXZ	; idleFunc
	call	glutIdleFunc
; Line 436
	mov	r9d, DWORD PTR ?height@@3HA		; height
	mov	r8d, DWORD PTR ?width@@3HA		; width
	xor	edx, edx
	xor	ecx, ecx
	call	QWORD PTR __imp_glViewport
; Line 437
	call	QWORD PTR __imp_glLoadIdentity
; Line 438
	movd	xmm0, DWORD PTR ?height@@3HA		; height
	cvtdq2ps xmm0, xmm0
	subss	xmm0, DWORD PTR __real@3f800000
	unpcklps xmm0, xmm0
	cvtps2pd xmm0, xmm0
	movd	xmm1, DWORD PTR ?width@@3HA		; width
	cvtdq2ps xmm1, xmm1
	subss	xmm1, DWORD PTR __real@3f800000
	unpcklps xmm1, xmm1
	cvtps2pd xmm1, xmm1
	movsdx	xmm2, QWORD PTR __real@3ff0000000000000
	movsdx	QWORD PTR [rsp+40], xmm2
	movsdx	xmm2, QWORD PTR __real@bff0000000000000
	movsdx	QWORD PTR [rsp+32], xmm2
	movapd	xmm3, xmm0
	xorpd	xmm2, xmm2
	xorpd	xmm0, xmm0
	call	QWORD PTR __imp_glOrtho
; Line 439
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?InitGlut@@YAXHQEAPEADPEAD@Z ENDP			; InitGlut
_TEXT	ENDS
END
